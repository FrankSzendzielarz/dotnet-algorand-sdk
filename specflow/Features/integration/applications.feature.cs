// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace algorand_tests.Features.Integration
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class ApplicationsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Microsoft.VisualStudio.TestTools.UnitTesting.TestContext _testContext;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "applications.feature"
#line hidden
        
        public virtual Microsoft.VisualStudio.TestTools.UnitTesting.TestContext TestContext
        {
            get
            {
                return this._testContext;
            }
            set
            {
                this._testContext = value;
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/integration", "Applications", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "Applications")))
            {
                global::algorand_tests.Features.Integration.ApplicationsFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Microsoft.VisualStudio.TestTools.UnitTesting.TestContext>(_testContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 2
   #line hidden
#line 3
      testRunner.Given("an algod client", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 4
      testRunner.And("a kmd client", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 5
      testRunner.And("wallet information", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 6
      testRunner.And("an algod v2 client connected to \"localhost\" port 60000 with token \"aaaaaaaaaaaaaa" +
                    "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
        }
        
        public virtual void State_LocationTest_UseEveryApplicationsFeature(string program, string state_Location, string global_Bytes, string local_Bytes, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "applications.verified"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("program", program);
            argumentsOfScenario.Add("state-location", state_Location);
            argumentsOfScenario.Add("global-bytes", global_Bytes);
            argumentsOfScenario.Add("local-bytes", local_Bytes);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("<state-location> test - Use every applications feature!", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 9
   this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 2
   this.FeatureBackground();
#line hidden
#line 12
      testRunner.Given("I create a new transient account and fund it with 100000000 microalgos.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 14
      testRunner.And(string.Format(@"I build an application transaction with the transient account, the current application, suggested params, operation ""create"", approval-program ""programs/big_app_program.teal.tok"", clear-program ""programs/big_app_program.teal.tok"", global-bytes {0}, global-ints 0, local-bytes {1}, local-ints 0, app-args """", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 3", global_Bytes, local_Bytes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"l" +
                        "ogic eval error: pc=704 dynamic cost budget exceeded, executing intc_1: local pr" +
                        "ogram cost was 700. Details: pc=704, opcodes=intc_1 // 1\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
      testRunner.And(string.Format(@"I build an application transaction with the transient account, the current application, suggested params, operation ""create"", approval-program ""programs/one.teal.tok"", clear-program ""programs/one.teal.tok"", global-bytes {0}, global-ints 0, local-bytes {1}, local-ints 0, app-args """", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", global_Bytes, local_Bytes), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
      testRunner.And("I remember the new application ID.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
      testRunner.Then("I get the account address for the current application and see that it matches the" +
                        " app id\'s hash", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
      testRunner.Given(string.Format(@"I build an application transaction with the transient account, the current application, suggested params, operation ""update"", approval-program ""{0}"", clear-program ""programs/one.teal.tok"", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args """", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", program), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 28
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""optin"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args """", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"i" +
                        "nvalid ApplicationArgs index 0\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""optin"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:goodbye"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"s" +
                        "tack len is 3 instead of 1\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""optin"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:hello"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
      testRunner.Then(string.Format("The transient account should have the created app \"true\" and total schema byte-sl" +
                            "ices 1 and uints 0, the application \"{0}\" state contains key \"\" with value \"\"", state_Location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""call"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:write"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""call"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:check,str:write"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"t" +
                        "ransaction rejected by ApprovalProgram\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""call"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:check,str:bar"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
      testRunner.Then(string.Format("The transient account should have the created app \"true\" and total schema byte-sl" +
                            "ices 1 and uints 0, the application \"{0}\" state contains key \"Zm9v\" with value \"" +
                            "YmFy\"", state_Location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""closeout"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:hello"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""optin"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:write"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
      testRunner.Then(string.Format("The transient account should have the created app \"true\" and total schema byte-sl" +
                            "ices 1 and uints 0, the application \"{0}\" state contains key \"Zm9v\" with value \"" +
                            "YmFy\"", state_Location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 66
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""call"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:check,str:bar"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""delete"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:hello"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""call"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args ""str:hello"", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"o" +
                        "nly clearing out is supported\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
      testRunner.And(@"I build an application transaction with the transient account, the current application, suggested params, operation ""clear"", approval-program """", clear-program """", global-bytes 0, global-ints 0, local-bytes 0, local-ints 0, app-args """", foreign-apps """", foreign-assets """", app-accounts """", extra-pages 0", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
      testRunner.And("I sign and submit the transaction, saving the txid. If there is an error it is \"\"" +
                        ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
      testRunner.And("I wait for the transaction to be confirmed.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
      testRunner.Then(string.Format("The transient account should have the created app \"false\" and total schema byte-s" +
                            "lices 0 and uints 0, the application \"{0}\" state contains key \"\" with value \"\"", state_Location), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("<state-location> test - Use every applications feature!: programs/loccheck.teal.t" +
            "ok")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("applications.verified")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "programs/loccheck.teal.tok")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:program", "programs/loccheck.teal.tok")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:state-location", "local")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:global-bytes", "0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:local-bytes", "1")]
        public virtual void State_LocationTest_UseEveryApplicationsFeature_ProgramsLoccheck_Teal_Tok()
        {
#line 9
   this.State_LocationTest_UseEveryApplicationsFeature("programs/loccheck.teal.tok", "local", "0", "1", ((string[])(null)));
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("<state-location> test - Use every applications feature!: programs/globcheck.teal." +
            "tok")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Applications")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("applications.verified")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("VariantName", "programs/globcheck.teal.tok")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:program", "programs/globcheck.teal.tok")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:state-location", "global")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:global-bytes", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("Parameter:local-bytes", "0")]
        public virtual void State_LocationTest_UseEveryApplicationsFeature_ProgramsGlobcheck_Teal_Tok()
        {
#line 9
   this.State_LocationTest_UseEveryApplicationsFeature("programs/globcheck.teal.tok", "global", "1", "0", ((string[])(null)));
#line hidden
        }
    }
}
#pragma warning restore
#endregion
