{
  "api/Algorand.Account.html": {
    "href": "api/Algorand.Account.html",
    "title": "Class Account | Dotnet Algorand Documents",
    "keywords": "Class Account Create and manage secrets, and perform account-based work such as signing transactions. Inheritance System.Object Account Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class Account Constructors | Improve this Doc View Source Account() Generate a newc account, random account. Declaration public Account() | Improve this Doc View Source Account(Byte[]) Generate a newc account with seed(master derivation key) Declaration public Account(byte[] seed) Parameters Type Name Description System.Byte [] seed seed(master derivation key) | Improve this Doc View Source Account(String) Create a new account with mnemonic Declaration public Account(string mnemonic) Parameters Type Name Description System.String mnemonic the mnemonic Properties | Improve this Doc View Source Address Declaration public Address Address { get; } Property Value Type Description Address Methods | Improve this Doc View Source AppendMultisigTransaction(MultisigAddress, SignedTransaction) AppendMultisigTransaction appends our signature to the given multisig transaction. Declaration public SignedTransaction AppendMultisigTransaction(MultisigAddress from, SignedTransaction signedTx) Parameters Type Name Description MultisigAddress from the multisig public identity we are signing for SignedTransaction signedTx the partially signed msig tx to which to append signature Returns Type Description SignedTransaction merged multisig transaction | Improve this Doc View Source AppendMultisigTransactionBytes(MultisigAddress, Byte[]) a convenience method for directly appending our signature to a raw tx file Declaration public byte[] AppendMultisigTransactionBytes(MultisigAddress from, byte[] txBytes) Parameters Type Name Description MultisigAddress from the public identity we are signing as System.Byte [] txBytes the multisig transaction to append signature to Returns Type Description System.Byte [] merged multisignature transaction inclukding our signature | Improve this Doc View Source AppendToLogicsig(LogicsigSignature) Appends a signature to multisig logic signed transaction Declaration public LogicsigSignature AppendToLogicsig(LogicsigSignature lsig) Parameters Type Name Description LogicsigSignature lsig LogicsigSignature append to Returns Type Description LogicsigSignature LogicsigSignature | Improve this Doc View Source EstimatedEncodedSize(Transaction) EstimateEncodedSize returns the estimated encoded size of the transaction including the signature. This function is useful for calculating the fee from suggested fee per byte. Declaration public static int EstimatedEncodedSize(Transaction tx) Parameters Type Name Description Transaction tx the transaction Returns Type Description System.Int32 an estimated byte size for the transaction. | Improve this Doc View Source GetClearTextPublicKey() Convenience method for getting the underlying public key for raw operations. Declaration public byte[] GetClearTextPublicKey() Returns Type Description System.Byte [] the public key as length 32 byte array. | Improve this Doc View Source GetEd25519PublicKey() Get the public key Declaration public Ed25519PublicKeyParameters GetEd25519PublicKey() Returns Type Description Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters public key | Improve this Doc View Source MergeMultisigTransactionBytes(Byte[][]) a convenience method for working directly with raw transaction files. Declaration public static byte[] MergeMultisigTransactionBytes(params byte[][] txsBytes) Parameters Type Name Description System.Byte [][] txsBytes list of multisig transactions to merge Returns Type Description System.Byte [] an encoded, merged multisignature transaction | Improve this Doc View Source MergeMultisigTransactions(SignedTransaction[]) MergeMultisigTransactions merges the given (partially) signed multisig transactions. Declaration public static SignedTransaction MergeMultisigTransactions(params SignedTransaction[] txs) Parameters Type Name Description SignedTransaction [] txs partially signed multisig transactions to merge. Underlying transactions may be mutated. Returns Type Description SignedTransaction merged multisig transaction | Improve this Doc View Source SetFeeByFeePerByte(Transaction, Nullable<UInt64>) Sets the transaction fee according to suggestedFeePerByte * estimateTxSize. Declaration public static void SetFeeByFeePerByte(Transaction tx, ulong? suggestedFeePerByte) Parameters Type Name Description Transaction tx transaction to populate fee field System.Nullable < System.UInt64 > suggestedFeePerByte suggestedFee given by network | Improve this Doc View Source SignBid(Bid) Sign a bid with this account Declaration public SignedBid SignBid(Bid bid) Parameters Type Name Description Bid bid the bid to sign Returns Type Description SignedBid signed bid | Improve this Doc View Source SignBytes(Byte[]) Sign the given bytes, and wrap in signature. The message is prepended with \"MX\" for domain separation. Declaration public Signature SignBytes(byte[] bytes) Parameters Type Name Description System.Byte [] bytes bytes the data to sign Returns Type Description Signature signature | Improve this Doc View Source SignLogicsig(LogicsigSignature) Sign LogicSig with account's secret key Declaration public LogicsigSignature SignLogicsig(LogicsigSignature lsig) Parameters Type Name Description LogicsigSignature lsig LogicsigSignature to sign Returns Type Description LogicsigSignature LogicsigSignature with updated signature | Improve this Doc View Source SignLogicsig(LogicsigSignature, MultisigAddress) Sign LogicSig as multisig Declaration public LogicsigSignature SignLogicsig(LogicsigSignature lsig, MultisigAddress ma) Parameters Type Name Description LogicsigSignature lsig LogicsigSignature to sign MultisigAddress ma MultisigAddress to format multi signature from Returns Type Description LogicsigSignature LogicsigSignature | Improve this Doc View Source SignLogicsigTransaction(LogicsigSignature, Transaction) Creates SignedTransaction from LogicsigSignature and Transaction. LogicsigSignature must be valid and verifiable against transaction sender field. Declaration public static SignedTransaction SignLogicsigTransaction(LogicsigSignature lsig, Transaction tx) Parameters Type Name Description LogicsigSignature lsig LogicsigSignature Transaction tx Transaction Returns Type Description SignedTransaction SignedTransaction | Improve this Doc View Source SignMultisigTransaction(MultisigAddress, Transaction) SignMultisigTransaction creates a multisig transaction from the input and the multisig account. Declaration public SignedTransaction SignMultisigTransaction(MultisigAddress from, Transaction tx) Parameters Type Name Description MultisigAddress from sign as this multisignature account Transaction tx the transaction to sign Returns Type Description SignedTransaction SignedTransaction a partially signed multisig transaction | Improve this Doc View Source SignTransaction(Transaction) Sign a transaction with this account Declaration public SignedTransaction SignTransaction(Transaction tx) Parameters Type Name Description Transaction tx the transaction to sign Returns Type Description SignedTransaction a signed transaction | Improve this Doc View Source SignTransactionWithFeePerByte(Transaction, UInt64) Sign a transaction with this account, replacing the fee with the given feePerByte. Declaration public SignedTransaction SignTransactionWithFeePerByte(Transaction tx, ulong feePerByte) Parameters Type Name Description Transaction tx transaction to sign System.UInt64 feePerByte feePerByte fee per byte, often returned as a suggested fee Returns Type Description SignedTransaction a signed transaction | Improve this Doc View Source TealSign(Byte[], Address) Creates Signature compatible with ed25519verify TEAL opcode from data and contract address(program hash). Declaration public Signature TealSign(byte[] data, Address contractAddress) Parameters Type Name Description System.Byte [] data data byte[] Address contractAddress contractAddress Address Returns Type Description Signature Signature | Improve this Doc View Source TealSignFromProgram(Byte[], Byte[]) Creates Signature compatible with ed25519verify TEAL opcode from data and program bytes Declaration public Signature TealSignFromProgram(byte[] data, byte[] program) Parameters Type Name Description System.Byte [] data data byte[] System.Byte [] program program byte[] Returns Type Description Signature Signature | Improve this Doc View Source ToMnemonic() Converts the 32 byte private key to a 25 word mnemonic, including a checksum. Refer to the mnemonic package for additional documentation. Declaration public string ToMnemonic() Returns Type Description System.String return string a 25 word mnemonic"
  },
  "api/Algorand.Address.html": {
    "href": "api/Algorand.Address.html",
    "title": "Class Address | Dotnet Algorand Documents",
    "keywords": "Class Address Address represents a serializable 32-byte length Algorand address. Inheritance System.Object Address Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand Assembly : Algorand.dll Syntax [JsonConverter(typeof(BytesConverter))] public class Address Constructors | Improve this Doc View Source Address() default values for serializer to ignore Declaration public Address() | Improve this Doc View Source Address(Byte[]) Create a new address from a byte array. Declaration [JsonConstructor] public Address(byte[] bytes) Parameters Type Name Description System.Byte [] bytes array of 32 bytes | Improve this Doc View Source Address(String) Create a new address from an encoded string(encoded by encodeAsString) Declaration public Address(string encodedAddress) Parameters Type Name Description System.String encodedAddress Encoded Address Fields | Improve this Doc View Source LEN_BYTES The length of an address. Equal to the size of a SHA256 checksum. Declaration public const int LEN_BYTES = 32 Field Value Type Description System.Int32 Properties | Improve this Doc View Source Bytes the underlying bytes Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte [] Methods | Improve this Doc View Source EncodeAsString() EncodeAsString converts the address to a human-readable representation, with a 4-byte checksum appended at the end, using SHA256. Note that string representations of addresses generated by different SDKs may not be compatible. Declaration public string EncodeAsString() Returns Type Description System.String the encoded address string | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source IsValid(String) check if the address is valid Declaration public static bool IsValid(string encodedAddress) Parameters Type Name Description System.String encodedAddress Address Returns Type Description System.Boolean valid or not | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString() | Improve this Doc View Source VerifyBytes(Byte[], Signature) verifyBytes verifies that the signature for the message is valid for the public key. The message should have been prepended with \"MX\" when signing. Declaration public bool VerifyBytes(byte[] message, Signature signature) Parameters Type Name Description System.Byte [] message the message that was signed Signature signature signature Returns Type Description System.Boolean true if the signature is valid"
  },
  "api/Algorand.Algod.Api.AlgodApi.html": {
    "href": "api/Algorand.Algod.Api.AlgodApi.html",
    "title": "Class AlgodApi | Dotnet Algorand Documents",
    "keywords": "Class AlgodApi Rename DefautlApi Inheritance System.Object DefaultApi AlgodApi Implements IDefaultApi IApiAccessor Inherited Members DefaultApi.GetBasePath() DefaultApi.SetBasePath(String) DefaultApi.Configuration DefaultApi.ExceptionFactory DefaultApi.DefaultHeader() DefaultApi.AddDefaultHeader(String, String) DefaultApi.AccountInformation(String) DefaultApi.AccountInformationWithHttpInfo(String) DefaultApi.AccountInformationAsync(String) DefaultApi.AccountInformationAsyncWithHttpInfo(String) DefaultApi.AssetInformation(Nullable<Int64>) DefaultApi.AssetInformationWithHttpInfo(Nullable<Int64>) DefaultApi.AssetInformationAsync(Nullable<Int64>) DefaultApi.AssetInformationAsyncWithHttpInfo(Nullable<Int64>) DefaultApi.Assets(Nullable<Int64>, Nullable<Int64>) DefaultApi.AssetsWithHttpInfo(Nullable<Int64>, Nullable<Int64>) DefaultApi.AssetsAsync(Nullable<Int64>, Nullable<Int64>) DefaultApi.AssetsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>) DefaultApi.GetBlock(Nullable<Int64>) DefaultApi.GetBlockWithHttpInfo(Nullable<Int64>) DefaultApi.GetBlockAsync(Nullable<Int64>) DefaultApi.GetBlockAsyncWithHttpInfo(Nullable<Int64>) DefaultApi.GetPendingTransactions(Nullable<Int64>) DefaultApi.GetPendingTransactionsWithHttpInfo(Nullable<Int64>) DefaultApi.GetPendingTransactionsAsync(Nullable<Int64>) DefaultApi.GetPendingTransactionsAsyncWithHttpInfo(Nullable<Int64>) DefaultApi.GetPendingTransactionsByAddress(String, Nullable<Int64>) DefaultApi.GetPendingTransactionsByAddressWithHttpInfo(String, Nullable<Int64>) DefaultApi.GetPendingTransactionsByAddressAsync(String, Nullable<Int64>) DefaultApi.GetPendingTransactionsByAddressAsyncWithHttpInfo(String, Nullable<Int64>) DefaultApi.GetStatus() DefaultApi.GetStatusWithHttpInfo() DefaultApi.GetStatusAsync() DefaultApi.GetStatusAsyncWithHttpInfo() DefaultApi.GetSupply() DefaultApi.GetSupplyWithHttpInfo() DefaultApi.GetSupplyAsync() DefaultApi.GetSupplyAsyncWithHttpInfo() DefaultApi.GetVersion() DefaultApi.GetVersionWithHttpInfo() DefaultApi.GetVersionAsync() DefaultApi.GetVersionAsyncWithHttpInfo() DefaultApi.HealthCheck() DefaultApi.HealthCheckWithHttpInfo() DefaultApi.HealthCheckAsync() DefaultApi.HealthCheckAsyncWithHttpInfo() DefaultApi.Metrics() DefaultApi.MetricsWithHttpInfo() DefaultApi.MetricsAsync() DefaultApi.MetricsAsyncWithHttpInfo() DefaultApi.PendingTransactionInformation(String) DefaultApi.PendingTransactionInformationWithHttpInfo(String) DefaultApi.PendingTransactionInformationAsync(String) DefaultApi.PendingTransactionInformationAsyncWithHttpInfo(String) DefaultApi.RawTransaction(Byte[]) DefaultApi.RawTransactionWithHttpInfo(Byte[]) DefaultApi.RawTransactionAsync(String) DefaultApi.RawTransactionAsyncWithHttpInfo(String) DefaultApi.SuggestedFee() DefaultApi.SuggestedFeeWithHttpInfo() DefaultApi.SuggestedFeeAsync() DefaultApi.SuggestedFeeAsyncWithHttpInfo() DefaultApi.SwaggerJSON() DefaultApi.SwaggerJSONWithHttpInfo() DefaultApi.SwaggerJSONAsync() DefaultApi.SwaggerJSONAsyncWithHttpInfo() DefaultApi.Transaction(String) DefaultApi.TransactionWithHttpInfo(String) DefaultApi.TransactionAsync(String) DefaultApi.TransactionAsyncWithHttpInfo(String) DefaultApi.TransactionInformation(String, String) DefaultApi.TransactionInformationWithHttpInfo(String, String) DefaultApi.TransactionInformationAsync(String, String) DefaultApi.TransactionInformationAsyncWithHttpInfo(String, String) DefaultApi.TransactionParams() DefaultApi.TransactionParamsWithHttpInfo() DefaultApi.TransactionParamsAsync() DefaultApi.TransactionParamsAsyncWithHttpInfo() DefaultApi.Transactions(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) DefaultApi.TransactionsWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) DefaultApi.TransactionsAsync(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) DefaultApi.TransactionsAsyncWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) DefaultApi.WaitForBlock(Nullable<Int64>) DefaultApi.WaitForBlockWithHttpInfo(Nullable<Int64>) DefaultApi.WaitForBlockAsync(Nullable<Int64>) DefaultApi.WaitForBlockAsyncWithHttpInfo(Nullable<Int64>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Algod.Api Assembly : Algorand.dll Syntax public class AlgodApi : DefaultApi, IDefaultApi, IApiAccessor Constructors | Improve this Doc View Source AlgodApi(String, String, Int32) Declaration public AlgodApi(string bathPath, string apiToken, int timeout = -1) Parameters Type Name Description System.String bathPath System.String apiToken System.Int32 timeout Implements IDefaultApi IApiAccessor"
  },
  "api/Algorand.Algod.Api.DefaultApi.html": {
    "href": "api/Algorand.Algod.Api.DefaultApi.html",
    "title": "Class DefaultApi | Dotnet Algorand Documents",
    "keywords": "Class DefaultApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object DefaultApi AlgodApi Implements IDefaultApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Algod.Api Assembly : Algorand.dll Syntax public class DefaultApi : IDefaultApi, IApiAccessor Constructors | Improve this Doc View Source DefaultApi() Initializes a new instance of the DefaultApi class Declaration public DefaultApi() | Improve this Doc View Source DefaultApi(Configuration) Initializes a new instance of the DefaultApi class using Configuration object Declaration public DefaultApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source DefaultApi(String) Initializes a new instance of the DefaultApi class. Declaration public DefaultApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AccountInformation(String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public Account AccountInformation(string address) Parameters Type Name Description System.String address An account public key Returns Type Description Account Account Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsync(String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public Task<Account> AccountInformationAsync(string address) Parameters Type Name Description System.String address An account public key Returns Type Description System.Threading.Tasks.Task < Account > Task of Account Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsyncWithHttpInfo(String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public Task<ApiResponse<Account>> AccountInformationAsyncWithHttpInfo(string address) Parameters Type Name Description System.String address An account public key Returns Type Description System.Threading.Tasks.Task < ApiResponse < Account >> Task of ApiResponse (Account) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationWithHttpInfo(String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public ApiResponse<Account> AccountInformationWithHttpInfo(string address) Parameters Type Name Description System.String address An account public key Returns Type Description ApiResponse < Account > ApiResponse of Account Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source AssetInformation(Nullable<Int64>) Get asset information. Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Declaration public AssetParams AssetInformation(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description AssetParams AssetParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetInformationAsync(Nullable<Int64>) Get asset information. Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Declaration public Task<AssetParams> AssetInformationAsync(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description System.Threading.Tasks.Task < AssetParams > Task of AssetParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetInformationAsyncWithHttpInfo(Nullable<Int64>) Get asset information. Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Declaration public Task<ApiResponse<AssetParams>> AssetInformationAsyncWithHttpInfo(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetParams >> Task of ApiResponse (AssetParams) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetInformationWithHttpInfo(Nullable<Int64>) Get asset information. Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Declaration public ApiResponse<AssetParams> AssetInformationWithHttpInfo(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description ApiResponse < AssetParams > ApiResponse of AssetParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Assets(Nullable<Int64>, Nullable<Int64>) List assets Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Declaration public AssetList Assets(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description AssetList AssetList Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetsAsync(Nullable<Int64>, Nullable<Int64>) List assets Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Declaration public Task<AssetList> AssetsAsync(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description System.Threading.Tasks.Task < AssetList > Task of AssetList Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>) List assets Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Declaration public Task<ApiResponse<AssetList>> AssetsAsyncWithHttpInfo(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetList >> Task of ApiResponse (AssetList) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetsWithHttpInfo(Nullable<Int64>, Nullable<Int64>) List assets Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Declaration public ApiResponse<AssetList> AssetsWithHttpInfo(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description ApiResponse < AssetList > ApiResponse of AssetList Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source GetBlock(Nullable<Int64>) Get the block for the given round. Declaration public Block GetBlock(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description Block Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsync(Nullable<Int64>) Get the block for the given round. Declaration public Task<Block> GetBlockAsync(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description System.Threading.Tasks.Task < Block > Task of Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsyncWithHttpInfo(Nullable<Int64>) Get the block for the given round. Declaration public Task<ApiResponse<Block>> GetBlockAsyncWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description System.Threading.Tasks.Task < ApiResponse < Block >> Task of ApiResponse (Block) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockWithHttpInfo(Nullable<Int64>) Get the block for the given round. Declaration public ApiResponse<Block> GetBlockWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description ApiResponse < Block > ApiResponse of Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactions(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public PendingTransactions GetPendingTransactions(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description PendingTransactions PendingTransactions Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsync(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<PendingTransactions> GetPendingTransactionsAsync(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactions > Task of PendingTransactions Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsyncWithHttpInfo(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<ApiResponse<PendingTransactions>> GetPendingTransactionsAsyncWithHttpInfo(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactions >> Task of ApiResponse (PendingTransactions) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddress(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public PendingTransactions GetPendingTransactionsByAddress(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description PendingTransactions PendingTransactions Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsync(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<PendingTransactions> GetPendingTransactionsByAddressAsync(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactions > Task of PendingTransactions Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsyncWithHttpInfo(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<ApiResponse<PendingTransactions>> GetPendingTransactionsByAddressAsyncWithHttpInfo(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactions >> Task of ApiResponse (PendingTransactions) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressWithHttpInfo(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public ApiResponse<PendingTransactions> GetPendingTransactionsByAddressWithHttpInfo(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description ApiResponse < PendingTransactions > ApiResponse of PendingTransactions Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsWithHttpInfo(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public ApiResponse<PendingTransactions> GetPendingTransactionsWithHttpInfo(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description ApiResponse < PendingTransactions > ApiResponse of PendingTransactions Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatus() Gets the current node status. Declaration public NodeStatus GetStatus() Returns Type Description NodeStatus NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsync() Gets the current node status. Declaration public Task<NodeStatus> GetStatusAsync() Returns Type Description System.Threading.Tasks.Task < NodeStatus > Task of NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsyncWithHttpInfo() Gets the current node status. Declaration public Task<ApiResponse<NodeStatus>> GetStatusAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatus >> Task of ApiResponse (NodeStatus) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusWithHttpInfo() Gets the current node status. Declaration public ApiResponse<NodeStatus> GetStatusWithHttpInfo() Returns Type Description ApiResponse < NodeStatus > ApiResponse of NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupply() Get the current supply reported by the ledger. Declaration public Supply GetSupply() Returns Type Description Supply Supply Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsync() Get the current supply reported by the ledger. Declaration public Task<Supply> GetSupplyAsync() Returns Type Description System.Threading.Tasks.Task < Supply > Task of Supply Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsyncWithHttpInfo() Get the current supply reported by the ledger. Declaration public Task<ApiResponse<Supply>> GetSupplyAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < Supply >> Task of ApiResponse (Supply) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyWithHttpInfo() Get the current supply reported by the ledger. Declaration public ApiResponse<Supply> GetSupplyWithHttpInfo() Returns Type Description ApiResponse < Supply > ApiResponse of Supply Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersion() Retrieves the current version Declaration public Version GetVersion() Returns Type Description Version Version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsync() Retrieves the current version Declaration public Task<Version> GetVersionAsync() Returns Type Description System.Threading.Tasks.Task < Version > Task of Version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsyncWithHttpInfo() Retrieves the current version Declaration public Task<ApiResponse<Version>> GetVersionAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < Version >> Task of ApiResponse (Version) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionWithHttpInfo() Retrieves the current version Declaration public ApiResponse<Version> GetVersionWithHttpInfo() Returns Type Description ApiResponse < Version > ApiResponse of Version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheck() Returns OK if healthy. Declaration public void HealthCheck() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsync() Returns OK if healthy. Declaration public Task HealthCheckAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsyncWithHttpInfo() Returns OK if healthy. Declaration public Task<ApiResponse<object>> HealthCheckAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckWithHttpInfo() Returns OK if healthy. Declaration public ApiResponse<object> HealthCheckWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Metrics() Return metrics about algod functioning. Declaration public void Metrics() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsync() Return metrics about algod functioning. Declaration public Task MetricsAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsyncWithHttpInfo() Return metrics about algod functioning. Declaration public Task<ApiResponse<object>> MetricsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsWithHttpInfo() Return metrics about algod functioning. Declaration public ApiResponse<object> MetricsWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformation(String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public Transaction PendingTransactionInformation(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description Transaction Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsync(String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public Task<Transaction> PendingTransactionInformationAsync(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < Transaction > Task of Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsyncWithHttpInfo(String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public Task<ApiResponse<Transaction>> PendingTransactionInformationAsyncWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < ApiResponse < Transaction >> Task of ApiResponse (Transaction) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationWithHttpInfo(String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public ApiResponse<Transaction> PendingTransactionInformationWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description ApiResponse < Transaction > ApiResponse of Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransaction(Byte[]) Broadcasts a raw transaction to the network. Declaration public TransactionID RawTransaction(byte[] body) Parameters Type Name Description System.Byte [] body The byte encoded signed transaction to broadcast to network Returns Type Description TransactionID TransactionID Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsync(String) Broadcasts a raw transaction to the network. Declaration public Task<TransactionID> RawTransactionAsync(string body) Parameters Type Name Description System.String body The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < TransactionID > Task of TransactionID Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsyncWithHttpInfo(String) Broadcasts a raw transaction to the network. Declaration public Task<ApiResponse<TransactionID>> RawTransactionAsyncWithHttpInfo(string body) Parameters Type Name Description System.String body The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionID >> Task of ApiResponse (TransactionID) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionWithHttpInfo(Byte[]) Broadcasts a raw transaction to the network. Declaration public ApiResponse<TransactionID> RawTransactionWithHttpInfo(byte[] body) Parameters Type Name Description System.Byte [] body The byte encoded signed transaction to broadcast to network Returns Type Description ApiResponse < TransactionID > ApiResponse of TransactionID Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath | Improve this Doc View Source SuggestedFee() Get the suggested fee Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration public TransactionFee SuggestedFee() Returns Type Description TransactionFee TransactionFee Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SuggestedFeeAsync() Get the suggested fee Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration public Task<TransactionFee> SuggestedFeeAsync() Returns Type Description System.Threading.Tasks.Task < TransactionFee > Task of TransactionFee Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SuggestedFeeAsyncWithHttpInfo() Get the suggested fee Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration public Task<ApiResponse<TransactionFee>> SuggestedFeeAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionFee >> Task of ApiResponse (TransactionFee) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SuggestedFeeWithHttpInfo() Get the suggested fee Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration public ApiResponse<TransactionFee> SuggestedFeeWithHttpInfo() Returns Type Description ApiResponse < TransactionFee > ApiResponse of TransactionFee Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSON() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public string SwaggerJSON() Returns Type Description System.String string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsync() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public Task<string> SwaggerJSONAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Task of string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsyncWithHttpInfo() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public Task<ApiResponse<string>> SwaggerJSONAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.String >> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONWithHttpInfo() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public ApiResponse<string> SwaggerJSONWithHttpInfo() Returns Type Description ApiResponse < System.String > ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Transaction(String) Get an information of a single transaction. Returns the transaction information of the given txid. Works only if the indexer is enabled. Declaration public Transaction Transaction(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description Transaction Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionAsync(String) Get an information of a single transaction. Returns the transaction information of the given txid. Works only if the indexer is enabled. Declaration public Task<Transaction> TransactionAsync(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < Transaction > Task of Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionAsyncWithHttpInfo(String) Get an information of a single transaction. Returns the transaction information of the given txid. Works only if the indexer is enabled. Declaration public Task<ApiResponse<Transaction>> TransactionAsyncWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < ApiResponse < Transaction >> Task of ApiResponse (Transaction) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformation(String, String) Get a specific confirmed transaction. Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Declaration public Transaction TransactionInformation(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description Transaction Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformationAsync(String, String) Get a specific confirmed transaction. Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Declaration public Task<Transaction> TransactionInformationAsync(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < Transaction > Task of Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformationAsyncWithHttpInfo(String, String) Get a specific confirmed transaction. Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Declaration public Task<ApiResponse<Transaction>> TransactionInformationAsyncWithHttpInfo(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < ApiResponse < Transaction >> Task of ApiResponse (Transaction) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformationWithHttpInfo(String, String) Get a specific confirmed transaction. Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Declaration public ApiResponse<Transaction> TransactionInformationWithHttpInfo(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description ApiResponse < Transaction > ApiResponse of Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParams() Get parameters for constructing a new transaction Declaration public TransactionParams TransactionParams() Returns Type Description TransactionParams TransactionParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsync() Get parameters for constructing a new transaction Declaration public Task<TransactionParams> TransactionParamsAsync() Returns Type Description System.Threading.Tasks.Task < TransactionParams > Task of TransactionParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsyncWithHttpInfo() Get parameters for constructing a new transaction Declaration public Task<ApiResponse<TransactionParams>> TransactionParamsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionParams >> Task of ApiResponse (TransactionParams) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsWithHttpInfo() Get parameters for constructing a new transaction Declaration public ApiResponse<TransactionParams> TransactionParamsWithHttpInfo() Returns Type Description ApiResponse < TransactionParams > ApiResponse of TransactionParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Transactions(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Declaration public TransactionList Transactions(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description TransactionList TransactionList Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionsAsync(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Declaration public Task<TransactionList> TransactionsAsync(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description System.Threading.Tasks.Task < TransactionList > Task of TransactionList Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionsAsyncWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Declaration public Task<ApiResponse<TransactionList>> TransactionsAsyncWithHttpInfo(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionList >> Task of ApiResponse (TransactionList) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionsWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Declaration public ApiResponse<TransactionList> TransactionsWithHttpInfo(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description ApiResponse < TransactionList > ApiResponse of TransactionList Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionWithHttpInfo(String) Get an information of a single transaction. Returns the transaction information of the given txid. Works only if the indexer is enabled. Declaration public ApiResponse<Transaction> TransactionWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description ApiResponse < Transaction > ApiResponse of Transaction Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlock(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public NodeStatus WaitForBlock(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description NodeStatus NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsync(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public Task<NodeStatus> WaitForBlockAsync(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < NodeStatus > Task of NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsyncWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public Task<ApiResponse<NodeStatus>> WaitForBlockAsyncWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatus >> Task of ApiResponse (NodeStatus) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public ApiResponse<NodeStatus> WaitForBlockWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description ApiResponse < NodeStatus > ApiResponse of NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call Implements IDefaultApi IApiAccessor"
  },
  "api/Algorand.Algod.Api.html": {
    "href": "api/Algorand.Algod.Api.html",
    "title": "Namespace Algorand.Algod.Api | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.Algod.Api Classes AlgodApi Rename DefautlApi DefaultApi Represents a collection of functions to interact with the API endpoints Interfaces IDefaultApi Represents a collection of functions to interact with the API endpoints"
  },
  "api/Algorand.Algod.Api.IDefaultApi.html": {
    "href": "api/Algorand.Algod.Api.IDefaultApi.html",
    "title": "Interface IDefaultApi | Dotnet Algorand Documents",
    "keywords": "Interface IDefaultApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.Algod.Api Assembly : Algorand.dll Syntax public interface IDefaultApi : IApiAccessor Methods | Improve this Doc View Source AccountInformation(String) Get account information. Declaration Account AccountInformation(string address) Parameters Type Name Description System.String address An account public key Returns Type Description Account Account Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsync(String) Get account information. Declaration Task<Account> AccountInformationAsync(string address) Parameters Type Name Description System.String address An account public key Returns Type Description System.Threading.Tasks.Task < Account > Task of Account Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsyncWithHttpInfo(String) Get account information. Declaration Task<ApiResponse<Account>> AccountInformationAsyncWithHttpInfo(string address) Parameters Type Name Description System.String address An account public key Returns Type Description System.Threading.Tasks.Task < ApiResponse < Account >> Task of ApiResponse (Account) Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationWithHttpInfo(String) Get account information. Declaration ApiResponse<Account> AccountInformationWithHttpInfo(string address) Parameters Type Name Description System.String address An account public key Returns Type Description ApiResponse < Account > ApiResponse of Account Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetInformation(Nullable<Int64>) Get asset information. Declaration AssetParams AssetInformation(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description AssetParams AssetParams Remarks Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetInformationAsync(Nullable<Int64>) Get asset information. Declaration Task<AssetParams> AssetInformationAsync(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description System.Threading.Tasks.Task < AssetParams > Task of AssetParams Remarks Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetInformationAsyncWithHttpInfo(Nullable<Int64>) Get asset information. Declaration Task<ApiResponse<AssetParams>> AssetInformationAsyncWithHttpInfo(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetParams >> Task of ApiResponse (AssetParams) Remarks Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetInformationWithHttpInfo(Nullable<Int64>) Get asset information. Declaration ApiResponse<AssetParams> AssetInformationWithHttpInfo(long? index) Parameters Type Name Description System.Nullable < System.Int64 > index Asset index Returns Type Description ApiResponse < AssetParams > ApiResponse of AssetParams Remarks Given the asset's unique index, this call returns the asset's creator, manager, reserve, freeze, and clawback addresses Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Assets(Nullable<Int64>, Nullable<Int64>) List assets Declaration AssetList Assets(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description AssetList AssetList Remarks Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetsAsync(Nullable<Int64>, Nullable<Int64>) List assets Declaration Task<AssetList> AssetsAsync(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description System.Threading.Tasks.Task < AssetList > Task of AssetList Remarks Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>) List assets Declaration Task<ApiResponse<AssetList>> AssetsAsyncWithHttpInfo(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetList >> Task of ApiResponse (AssetList) Remarks Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AssetsWithHttpInfo(Nullable<Int64>, Nullable<Int64>) List assets Declaration ApiResponse<AssetList> AssetsWithHttpInfo(long? assetIdx = default(long? ), long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetIdx Fetch assets with asset index <= assetIdx. If zero, fetch most recent assets. (optional) System.Nullable < System.Int64 > max Fetch no more than this many assets (optional) Returns Type Description ApiResponse < AssetList > ApiResponse of AssetList Remarks Returns list of up to max assets, where the maximum assetIdx is <= assetIdx Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlock(Nullable<Int64>) Get the block for the given round. Declaration Block GetBlock(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description Block Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsync(Nullable<Int64>) Get the block for the given round. Declaration Task<Block> GetBlockAsync(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description System.Threading.Tasks.Task < Block > Task of Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsyncWithHttpInfo(Nullable<Int64>) Get the block for the given round. Declaration Task<ApiResponse<Block>> GetBlockAsyncWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description System.Threading.Tasks.Task < ApiResponse < Block >> Task of ApiResponse (Block) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockWithHttpInfo(Nullable<Int64>) Get the block for the given round. Declaration ApiResponse<Block> GetBlockWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. Returns Type Description ApiResponse < Block > ApiResponse of Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactions(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Declaration PendingTransactions GetPendingTransactions(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description PendingTransactions PendingTransactions Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsync(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Declaration Task<PendingTransactions> GetPendingTransactionsAsync(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactions > Task of PendingTransactions Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsyncWithHttpInfo(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Declaration Task<ApiResponse<PendingTransactions>> GetPendingTransactionsAsyncWithHttpInfo(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactions >> Task of ApiResponse (PendingTransactions) Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddress(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration PendingTransactions GetPendingTransactionsByAddress(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description PendingTransactions PendingTransactions Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsync(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration Task<PendingTransactions> GetPendingTransactionsByAddressAsync(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactions > Task of PendingTransactions Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsyncWithHttpInfo(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration Task<ApiResponse<PendingTransactions>> GetPendingTransactionsByAddressAsyncWithHttpInfo(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactions >> Task of ApiResponse (PendingTransactions) Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressWithHttpInfo(String, Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration ApiResponse<PendingTransactions> GetPendingTransactionsByAddressWithHttpInfo(string addr, long? max = default(long? )) Parameters Type Name Description System.String addr An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description ApiResponse < PendingTransactions > ApiResponse of PendingTransactions Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsWithHttpInfo(Nullable<Int64>) Get a list of unconfirmed transactions currently in the transaction pool. Declaration ApiResponse<PendingTransactions> GetPendingTransactionsWithHttpInfo(long? max = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) Returns Type Description ApiResponse < PendingTransactions > ApiResponse of PendingTransactions Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatus() Gets the current node status. Declaration NodeStatus GetStatus() Returns Type Description NodeStatus NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsync() Gets the current node status. Declaration Task<NodeStatus> GetStatusAsync() Returns Type Description System.Threading.Tasks.Task < NodeStatus > Task of NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsyncWithHttpInfo() Gets the current node status. Declaration Task<ApiResponse<NodeStatus>> GetStatusAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatus >> Task of ApiResponse (NodeStatus) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusWithHttpInfo() Gets the current node status. Declaration ApiResponse<NodeStatus> GetStatusWithHttpInfo() Returns Type Description ApiResponse < NodeStatus > ApiResponse of NodeStatus Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupply() Get the current supply reported by the ledger. Declaration Supply GetSupply() Returns Type Description Supply Supply Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsync() Get the current supply reported by the ledger. Declaration Task<Supply> GetSupplyAsync() Returns Type Description System.Threading.Tasks.Task < Supply > Task of Supply Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsyncWithHttpInfo() Get the current supply reported by the ledger. Declaration Task<ApiResponse<Supply>> GetSupplyAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < Supply >> Task of ApiResponse (Supply) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyWithHttpInfo() Get the current supply reported by the ledger. Declaration ApiResponse<Supply> GetSupplyWithHttpInfo() Returns Type Description ApiResponse < Supply > ApiResponse of Supply Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersion() Declaration Version GetVersion() Returns Type Description Version Version Remarks Retrieves the current version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsync() Declaration Task<Version> GetVersionAsync() Returns Type Description System.Threading.Tasks.Task < Version > Task of Version Remarks Retrieves the current version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsyncWithHttpInfo() Declaration Task<ApiResponse<Version>> GetVersionAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < Version >> Task of ApiResponse (Version) Remarks Retrieves the current version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionWithHttpInfo() Declaration ApiResponse<Version> GetVersionWithHttpInfo() Returns Type Description ApiResponse < Version > ApiResponse of Version Remarks Retrieves the current version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheck() Returns OK if healthy. Declaration void HealthCheck() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsync() Returns OK if healthy. Declaration Task HealthCheckAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsyncWithHttpInfo() Returns OK if healthy. Declaration Task<ApiResponse<object>> HealthCheckAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckWithHttpInfo() Returns OK if healthy. Declaration ApiResponse<object> HealthCheckWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Metrics() Return metrics about algod functioning. Declaration void Metrics() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsync() Return metrics about algod functioning. Declaration Task MetricsAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsyncWithHttpInfo() Return metrics about algod functioning. Declaration Task<ApiResponse<object>> MetricsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsWithHttpInfo() Return metrics about algod functioning. Declaration ApiResponse<object> MetricsWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformation(String) Get a specific pending transaction. Declaration Transaction PendingTransactionInformation(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description Transaction Transaction Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsync(String) Get a specific pending transaction. Declaration Task<Transaction> PendingTransactionInformationAsync(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < Transaction > Task of Transaction Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsyncWithHttpInfo(String) Get a specific pending transaction. Declaration Task<ApiResponse<Transaction>> PendingTransactionInformationAsyncWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < ApiResponse < Transaction >> Task of ApiResponse (Transaction) Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationWithHttpInfo(String) Get a specific pending transaction. Declaration ApiResponse<Transaction> PendingTransactionInformationWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description ApiResponse < Transaction > ApiResponse of Transaction Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransaction(Byte[]) Broadcasts a raw transaction to the network. Declaration TransactionID RawTransaction(byte[] body) Parameters Type Name Description System.Byte [] body The byte encoded signed transaction to broadcast to network Returns Type Description TransactionID TransactionID Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsync(String) Broadcasts a raw transaction to the network. Declaration Task<TransactionID> RawTransactionAsync(string body) Parameters Type Name Description System.String body The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < TransactionID > Task of TransactionID Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsyncWithHttpInfo(String) Broadcasts a raw transaction to the network. Declaration Task<ApiResponse<TransactionID>> RawTransactionAsyncWithHttpInfo(string body) Parameters Type Name Description System.String body The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionID >> Task of ApiResponse (TransactionID) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionWithHttpInfo(Byte[]) Broadcasts a raw transaction to the network. Declaration ApiResponse<TransactionID> RawTransactionWithHttpInfo(byte[] body) Parameters Type Name Description System.Byte [] body The byte encoded signed transaction to broadcast to network Returns Type Description ApiResponse < TransactionID > ApiResponse of TransactionID Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SuggestedFee() Get the suggested fee Declaration TransactionFee SuggestedFee() Returns Type Description TransactionFee TransactionFee Remarks Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SuggestedFeeAsync() Get the suggested fee Declaration Task<TransactionFee> SuggestedFeeAsync() Returns Type Description System.Threading.Tasks.Task < TransactionFee > Task of TransactionFee Remarks Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SuggestedFeeAsyncWithHttpInfo() Get the suggested fee Declaration Task<ApiResponse<TransactionFee>> SuggestedFeeAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionFee >> Task of ApiResponse (TransactionFee) Remarks Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SuggestedFeeWithHttpInfo() Get the suggested fee Declaration ApiResponse<TransactionFee> SuggestedFeeWithHttpInfo() Returns Type Description ApiResponse < TransactionFee > ApiResponse of TransactionFee Remarks Suggested Fee is returned in units of micro-Algos per byte. Suggested Fee may fall to zero but submitted transactions must still have a fee of at least MinTxnFee for the current network protocol. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSON() Gets the current swagger spec. Declaration string SwaggerJSON() Returns Type Description System.String string Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsync() Gets the current swagger spec. Declaration Task<string> SwaggerJSONAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Task of string Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsyncWithHttpInfo() Gets the current swagger spec. Declaration Task<ApiResponse<string>> SwaggerJSONAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.String >> Task of ApiResponse (string) Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONWithHttpInfo() Gets the current swagger spec. Declaration ApiResponse<string> SwaggerJSONWithHttpInfo() Returns Type Description ApiResponse < System.String > ApiResponse of string Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Transaction(String) Get an information of a single transaction. Declaration Transaction Transaction(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description Transaction Transaction Remarks Returns the transaction information of the given txid. Works only if the indexer is enabled. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionAsync(String) Get an information of a single transaction. Declaration Task<Transaction> TransactionAsync(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < Transaction > Task of Transaction Remarks Returns the transaction information of the given txid. Works only if the indexer is enabled. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionAsyncWithHttpInfo(String) Get an information of a single transaction. Declaration Task<ApiResponse<Transaction>> TransactionAsyncWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < ApiResponse < Transaction >> Task of ApiResponse (Transaction) Remarks Returns the transaction information of the given txid. Works only if the indexer is enabled. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformation(String, String) Get a specific confirmed transaction. Declaration Transaction TransactionInformation(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description Transaction Transaction Remarks Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformationAsync(String, String) Get a specific confirmed transaction. Declaration Task<Transaction> TransactionInformationAsync(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < Transaction > Task of Transaction Remarks Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformationAsyncWithHttpInfo(String, String) Get a specific confirmed transaction. Declaration Task<ApiResponse<Transaction>> TransactionInformationAsyncWithHttpInfo(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description System.Threading.Tasks.Task < ApiResponse < Transaction >> Task of ApiResponse (Transaction) Remarks Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionInformationWithHttpInfo(String, String) Get a specific confirmed transaction. Declaration ApiResponse<Transaction> TransactionInformationWithHttpInfo(string address, string txid) Parameters Type Name Description System.String address An account public key System.String txid A transaction id Returns Type Description ApiResponse < Transaction > ApiResponse of Transaction Remarks Given a wallet address and a transaction id, it returns the confirmed transaction information. This call scans up to <CurrentProtocol>.MaxTxnLife blocks in the past. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParams() Get parameters for constructing a new transaction Declaration TransactionParams TransactionParams() Returns Type Description TransactionParams TransactionParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsync() Get parameters for constructing a new transaction Declaration Task<TransactionParams> TransactionParamsAsync() Returns Type Description System.Threading.Tasks.Task < TransactionParams > Task of TransactionParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsyncWithHttpInfo() Get parameters for constructing a new transaction Declaration Task<ApiResponse<TransactionParams>> TransactionParamsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionParams >> Task of ApiResponse (TransactionParams) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsWithHttpInfo() Get parameters for constructing a new transaction Declaration ApiResponse<TransactionParams> TransactionParamsWithHttpInfo() Returns Type Description ApiResponse < TransactionParams > ApiResponse of TransactionParams Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Transactions(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Declaration TransactionList Transactions(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description TransactionList TransactionList Remarks Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionsAsync(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Declaration Task<TransactionList> TransactionsAsync(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description System.Threading.Tasks.Task < TransactionList > Task of TransactionList Remarks Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionsAsyncWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Declaration Task<ApiResponse<TransactionList>> TransactionsAsyncWithHttpInfo(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionList >> Task of ApiResponse (TransactionList) Remarks Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionsWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>) Get a list of confirmed transactions. Declaration ApiResponse<TransactionList> TransactionsWithHttpInfo(string address, long? firstRound = default(long? ), long? lastRound = default(long? ), DateTime? fromDate = default(DateTime? ), DateTime? toDate = default(DateTime? ), long? max = default(long? )) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > firstRound Do not fetch any transactions before this round. (optional) System.Nullable < System.Int64 > lastRound Do not fetch any transactions after this round. (optional) System.Nullable < System.DateTime > fromDate Do not fetch any transactions before this date. (enabled only with indexer) (optional) System.Nullable < System.DateTime > toDate Do not fetch any transactions after this date. (enabled only with indexer) (optional) System.Nullable < System.Int64 > max maximum transactions to show (default to 100) (optional) Returns Type Description ApiResponse < TransactionList > ApiResponse of TransactionList Remarks Returns the list of confirmed transactions between within a date range. This call is available only when the indexer is running. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionWithHttpInfo(String) Get an information of a single transaction. Declaration ApiResponse<Transaction> TransactionWithHttpInfo(string txid) Parameters Type Name Description System.String txid A transaction id Returns Type Description ApiResponse < Transaction > ApiResponse of Transaction Remarks Returns the transaction information of the given txid. Works only if the indexer is enabled. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlock(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration NodeStatus WaitForBlock(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description NodeStatus NodeStatus Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsync(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration Task<NodeStatus> WaitForBlockAsync(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < NodeStatus > Task of NodeStatus Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsyncWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration Task<ApiResponse<NodeStatus>> WaitForBlockAsyncWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatus >> Task of ApiResponse (NodeStatus) Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration ApiResponse<NodeStatus> WaitForBlockWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description ApiResponse < NodeStatus > ApiResponse of NodeStatus Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.Algod.Model.Account.html": {
    "href": "api/Algorand.Algod.Model.Account.html",
    "title": "Class Account | Dotnet Algorand Documents",
    "keywords": "Class Account Account Description Inheritance System.Object Account Implements System.IEquatable < Account > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class Account : IEquatable<Account>, IValidatableObject Constructors | Improve this Doc View Source Account(String, Nullable<UInt64>, Nullable<UInt64>, Dictionary<Nullable<UInt64>, AssetHolding>, Participation, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, String, Dictionary<Nullable<UInt64>, AssetParams>) Initializes a new instance of the Account class. Declaration public Account(string address = null, ulong? amount = default(ulong? ), ulong? amountwithoutpendingrewards = default(ulong? ), Dictionary<ulong?, AssetHolding> assets = null, Participation participation = null, ulong? pendingrewards = default(ulong? ), ulong? rewards = default(ulong? ), ulong? round = default(ulong? ), string status = null, Dictionary<ulong?, AssetParams> thisassettotal = null) Parameters Type Name Description System.String address Address indicates the account public key (required). System.Nullable < System.UInt64 > amount Amount indicates the total number of MicroAlgos in the account (required). System.Nullable < System.UInt64 > amountwithoutpendingrewards AmountWithoutPendingRewards specifies the amount of MicroAlgos in the account, without the pending rewards. (required). System.Collections.Generic.Dictionary < System.Nullable < System.UInt64 >, AssetHolding > assets Assets specifies the holdings of assets by this account, indexed by the asset ID.. Participation participation participation. System.Nullable < System.UInt64 > pendingrewards PendingRewards specifies the amount of MicroAlgos of pending rewards in this account. (required). System.Nullable < System.UInt64 > rewards Rewards indicates the total rewards of MicroAlgos the account has received, including pending rewards. (required). System.Nullable < System.UInt64 > round Round indicates the round for which this information is relevant (required). System.String status Status indicates the delegation status of the account's MicroAlgos Offline - indicates that the associated account is delegated. Online - indicates that the associated account used as part of the delegation pool. NotParticipating - indicates that the associated account is neither a delegator nor a delegate. (required). System.Collections.Generic.Dictionary < System.Nullable < System.UInt64 >, AssetParams > thisassettotal AssetParams specifies the parameters of assets created by this account.. Properties | Improve this Doc View Source Address Address indicates the account public key Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public string Address { get; set; } Property Value Type Description System.String Address indicates the account public key | Improve this Doc View Source Amount Amount indicates the total number of MicroAlgos in the account Declaration [DataMember(Name = \"amount\", EmitDefaultValue = false)] public ulong? Amount { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Amount indicates the total number of MicroAlgos in the account | Improve this Doc View Source Amountwithoutpendingrewards AmountWithoutPendingRewards specifies the amount of MicroAlgos in the account, without the pending rewards. Declaration [DataMember(Name = \"amountwithoutpendingrewards\", EmitDefaultValue = false)] public ulong? Amountwithoutpendingrewards { get; set; } Property Value Type Description System.Nullable < System.UInt64 > AmountWithoutPendingRewards specifies the amount of MicroAlgos in the account, without the pending rewards. | Improve this Doc View Source Assets Assets specifies the holdings of assets by this account, indexed by the asset ID. Declaration [DataMember(Name = \"assets\", EmitDefaultValue = false)] public Dictionary<ulong?, AssetHolding> Assets { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Nullable < System.UInt64 >, AssetHolding > Assets specifies the holdings of assets by this account, indexed by the asset ID. | Improve this Doc View Source Participation Gets or Sets Participation Declaration [DataMember(Name = \"participation\", EmitDefaultValue = false)] public Participation Participation { get; set; } Property Value Type Description Participation | Improve this Doc View Source Pendingrewards PendingRewards specifies the amount of MicroAlgos of pending rewards in this account. Declaration [DataMember(Name = \"pendingrewards\", EmitDefaultValue = false)] public ulong? Pendingrewards { get; set; } Property Value Type Description System.Nullable < System.UInt64 > PendingRewards specifies the amount of MicroAlgos of pending rewards in this account. | Improve this Doc View Source Rewards Rewards indicates the total rewards of MicroAlgos the account has received, including pending rewards. Declaration [DataMember(Name = \"rewards\", EmitDefaultValue = false)] public ulong? Rewards { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Rewards indicates the total rewards of MicroAlgos the account has received, including pending rewards. | Improve this Doc View Source Round Round indicates the round for which this information is relevant Declaration [DataMember(Name = \"round\", EmitDefaultValue = false)] public ulong? Round { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Round indicates the round for which this information is relevant | Improve this Doc View Source Status Status indicates the delegation status of the account's MicroAlgos Offline - indicates that the associated account is delegated. Online - indicates that the associated account used as part of the delegation pool. NotParticipating - indicates that the associated account is neither a delegator nor a delegate. Declaration [DataMember(Name = \"status\", EmitDefaultValue = false)] public string Status { get; set; } Property Value Type Description System.String Status indicates the delegation status of the account's MicroAlgos Offline - indicates that the associated account is delegated. Online - indicates that the associated account used as part of the delegation pool. NotParticipating - indicates that the associated account is neither a delegator nor a delegate. | Improve this Doc View Source Thisassettotal AssetParams specifies the parameters of assets created by this account. Declaration [DataMember(Name = \"thisassettotal\", EmitDefaultValue = false)] public Dictionary<ulong?, AssetParams> Thisassettotal { get; set; } Property Value Type Description System.Collections.Generic.Dictionary < System.Nullable < System.UInt64 >, AssetParams > AssetParams specifies the parameters of assets created by this account. Methods | Improve this Doc View Source Equals(Account) Returns true if Account instances are equal Declaration public bool Equals(Account input) Parameters Type Name Description Account input Instance of Account to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source GetHolding(Nullable<UInt64>) Declaration public AssetHolding GetHolding(ulong? assetIndex) Parameters Type Name Description System.Nullable < System.UInt64 > assetIndex Returns Type Description AssetHolding | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.Asset.html": {
    "href": "api/Algorand.Algod.Model.Asset.html",
    "title": "Class Asset | Dotnet Algorand Documents",
    "keywords": "Class Asset Asset specifies both the unique identifier and the parameters for an asset Inheritance System.Object Asset Implements System.IEquatable < Asset > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class Asset : IEquatable<Asset>, IValidatableObject Constructors | Improve this Doc View Source Asset(Nullable<UInt64>, AssetParams) Initializes a new instance of the Asset class. Declaration public Asset(ulong? assetIndex = default(ulong? ), AssetParams assetParams = null) Parameters Type Name Description System.Nullable < System.UInt64 > assetIndex AssetIndex is the unique asset identifier (required). AssetParams assetParams assetParams (required). Properties | Improve this Doc View Source AssetIndex AssetIndex is the unique asset identifier Declaration [DataMember(Name = \"AssetIndex\", EmitDefaultValue = false)] public ulong? AssetIndex { get; set; } Property Value Type Description System.Nullable < System.UInt64 > AssetIndex is the unique asset identifier | Improve this Doc View Source AssetParams Gets or Sets AssetParams Declaration [DataMember(Name = \"AssetParams\", EmitDefaultValue = false)] public AssetParams AssetParams { get; set; } Property Value Type Description AssetParams Methods | Improve this Doc View Source Equals(Asset) Returns true if Asset instances are equal Declaration public bool Equals(Asset input) Parameters Type Name Description Asset input Instance of Asset to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.AssetConfigTransactionType.html": {
    "href": "api/Algorand.Algod.Model.AssetConfigTransactionType.html",
    "title": "Class AssetConfigTransactionType | Dotnet Algorand Documents",
    "keywords": "Class AssetConfigTransactionType AssetConfigTransactionType contains the additional fields for an asset config transaction Inheritance System.Object AssetConfigTransactionType Implements System.IEquatable < AssetConfigTransactionType > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetConfigTransactionType : IEquatable<AssetConfigTransactionType>, IValidatableObject Constructors | Improve this Doc View Source AssetConfigTransactionType(Nullable<UInt64>, AssetParams) Initializes a new instance of the AssetConfigTransactionType class. Declaration public AssetConfigTransactionType(ulong? id = default(ulong? ), AssetParams _params = null) Parameters Type Name Description System.Nullable < System.UInt64 > id AssetID is the asset being configured (or empty if creating). AssetParams _params _params. Properties | Improve this Doc View Source Id AssetID is the asset being configured (or empty if creating) Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public ulong? Id { get; set; } Property Value Type Description System.Nullable < System.UInt64 > AssetID is the asset being configured (or empty if creating) | Improve this Doc View Source Params Gets or Sets Params Declaration [DataMember(Name = \"params\", EmitDefaultValue = false)] public AssetParams Params { get; set; } Property Value Type Description AssetParams Methods | Improve this Doc View Source Equals(AssetConfigTransactionType) Returns true if AssetConfigTransactionType instances are equal Declaration public bool Equals(AssetConfigTransactionType input) Parameters Type Name Description AssetConfigTransactionType input Instance of AssetConfigTransactionType to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.AssetFreezeTransactionType.html": {
    "href": "api/Algorand.Algod.Model.AssetFreezeTransactionType.html",
    "title": "Class AssetFreezeTransactionType | Dotnet Algorand Documents",
    "keywords": "Class AssetFreezeTransactionType AssetFreezeTransactionType contains the additional fields for an asset freeze transaction Inheritance System.Object AssetFreezeTransactionType Implements System.IEquatable < AssetFreezeTransactionType > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetFreezeTransactionType : IEquatable<AssetFreezeTransactionType>, IValidatableObject Constructors | Improve this Doc View Source AssetFreezeTransactionType(String, Nullable<Boolean>, Nullable<UInt64>) Initializes a new instance of the AssetFreezeTransactionType class. Declaration public AssetFreezeTransactionType(string acct = null, bool? freeze = default(bool? ), ulong? id = default(ulong? )) Parameters Type Name Description System.String acct Account specifies the account where the asset is being frozen or thawed. (required). System.Nullable < System.Boolean > freeze NewFreezeStatus specifies the new freeze status. (required). System.Nullable < System.UInt64 > id AssetID is the asset being configured (or empty if creating) (required). Properties | Improve this Doc View Source Acct Account specifies the account where the asset is being frozen or thawed. Declaration [DataMember(Name = \"acct\", EmitDefaultValue = false)] public string Acct { get; set; } Property Value Type Description System.String Account specifies the account where the asset is being frozen or thawed. | Improve this Doc View Source Freeze NewFreezeStatus specifies the new freeze status. Declaration [DataMember(Name = \"freeze\", EmitDefaultValue = false)] public bool? Freeze { get; set; } Property Value Type Description System.Nullable < System.Boolean > NewFreezeStatus specifies the new freeze status. | Improve this Doc View Source Id AssetID is the asset being configured (or empty if creating) Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public ulong? Id { get; set; } Property Value Type Description System.Nullable < System.UInt64 > AssetID is the asset being configured (or empty if creating) Methods | Improve this Doc View Source Equals(AssetFreezeTransactionType) Returns true if AssetFreezeTransactionType instances are equal Declaration public bool Equals(AssetFreezeTransactionType input) Parameters Type Name Description AssetFreezeTransactionType input Instance of AssetFreezeTransactionType to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.AssetHolding.html": {
    "href": "api/Algorand.Algod.Model.AssetHolding.html",
    "title": "Class AssetHolding | Dotnet Algorand Documents",
    "keywords": "Class AssetHolding Inheritance System.Object AssetHolding Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [JsonObject] public class AssetHolding Constructors | Improve this Doc View Source AssetHolding() Declaration public AssetHolding() Properties | Improve this Doc View Source Amount Declaration [JsonProperty(PropertyName = \"amount\")] public ulong? Amount { get; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source Creator Declaration [JsonProperty(PropertyName = \"creator\")] public string Creator { get; } Property Value Type Description System.String | Improve this Doc View Source Frozen Declaration [JsonProperty(PropertyName = \"frozen\")] public bool? Frozen { get; } Property Value Type Description System.Nullable < System.Boolean >"
  },
  "api/Algorand.Algod.Model.AssetList.html": {
    "href": "api/Algorand.Algod.Model.AssetList.html",
    "title": "Class AssetList | Dotnet Algorand Documents",
    "keywords": "Class AssetList AssetList contains a list of assets Inheritance System.Object AssetList Implements System.IEquatable < AssetList > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetList : IEquatable<AssetList>, IValidatableObject Constructors | Improve this Doc View Source AssetList(List<Asset>) Initializes a new instance of the AssetList class. Declaration public AssetList(List<Asset> assets = null) Parameters Type Name Description System.Collections.Generic.List < Asset > assets AssetList is a list of assets (required). Properties | Improve this Doc View Source Assets AssetList is a list of assets Declaration [DataMember(Name = \"assets\", EmitDefaultValue = false)] public List<Asset> Assets { get; set; } Property Value Type Description System.Collections.Generic.List < Asset > AssetList is a list of assets Methods | Improve this Doc View Source Equals(AssetList) Returns true if AssetList instances are equal Declaration public bool Equals(AssetList input) Parameters Type Name Description AssetList input Instance of AssetList to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.AssetParams.html": {
    "href": "api/Algorand.Algod.Model.AssetParams.html",
    "title": "Class AssetParams | Dotnet Algorand Documents",
    "keywords": "Class AssetParams AssetParams Inheritance System.Object AssetParams Implements System.IEquatable < AssetParams > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetParams : IEquatable<AssetParams>, IValidatableObject Constructors | Improve this Doc View Source AssetParams(String, String, String, Nullable<Boolean>, String, String, String, String, Nullable<UInt64>, String, String) Initializes a new instance of the AssetParams class. Declaration public AssetParams(string assetname = null, string clawbackaddr = null, string creator = null, bool? defaultfrozen = default(bool? ), string freezeaddr = null, string managerkey = null, string metadatahash = null, string reserveaddr = null, ulong? total = default(ulong? ), string unitname = null, string url = null) Parameters Type Name Description System.String assetname AssetName specifies the name of this asset, as supplied by the creator.. System.String clawbackaddr ClawbackAddr specifies the address used to clawback holdings of this asset. If empty, clawback is not permitted.. System.String creator Creator specifies the address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. (required). System.Nullable < System.Boolean > defaultfrozen DefaultFrozen specifies whether holdings in this asset are frozen by default.. System.String freezeaddr FreezeAddr specifies the address used to freeze holdings of this asset. If empty, freezing is not permitted.. System.String managerkey ManagerAddr specifies the address used to manage the keys of this asset and to destroy it.. System.String metadatahash MetadataHash specifies a commitment to some unspecified asset metadata. The format of this metadata is up to the application.. System.String reserveaddr ReserveAddr specifies the address holding reserve (non-minted) units of this asset.. System.Nullable < System.UInt64 > total Total specifies the total number of units of this asset. (required). System.String unitname UnitName specifies the name of a unit of this asset, as supplied by the creator.. System.String url URL specifies a URL where more information about the asset can be retrieved. Properties | Improve this Doc View Source Assetname AssetName specifies the name of this asset, as supplied by the creator. Declaration [DataMember(Name = \"assetname\", EmitDefaultValue = false)] public string Assetname { get; set; } Property Value Type Description System.String AssetName specifies the name of this asset, as supplied by the creator. | Improve this Doc View Source Clawbackaddr ClawbackAddr specifies the address used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration [DataMember(Name = \"clawbackaddr\", EmitDefaultValue = false)] public string Clawbackaddr { get; set; } Property Value Type Description System.String ClawbackAddr specifies the address used to clawback holdings of this asset. If empty, clawback is not permitted. | Improve this Doc View Source Creator Creator specifies the address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration [DataMember(Name = \"creator\", EmitDefaultValue = false)] public string Creator { get; set; } Property Value Type Description System.String Creator specifies the address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. | Improve this Doc View Source Defaultfrozen DefaultFrozen specifies whether holdings in this asset are frozen by default. Declaration [DataMember(Name = \"defaultfrozen\", EmitDefaultValue = false)] public bool? Defaultfrozen { get; set; } Property Value Type Description System.Nullable < System.Boolean > DefaultFrozen specifies whether holdings in this asset are frozen by default. | Improve this Doc View Source Freezeaddr FreezeAddr specifies the address used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration [DataMember(Name = \"freezeaddr\", EmitDefaultValue = false)] public string Freezeaddr { get; set; } Property Value Type Description System.String FreezeAddr specifies the address used to freeze holdings of this asset. If empty, freezing is not permitted. | Improve this Doc View Source Managerkey ManagerAddr specifies the address used to manage the keys of this asset and to destroy it. Declaration [DataMember(Name = \"managerkey\", EmitDefaultValue = false)] public string Managerkey { get; set; } Property Value Type Description System.String ManagerAddr specifies the address used to manage the keys of this asset and to destroy it. | Improve this Doc View Source Metadatahash MetadataHash specifies a commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration [DataMember(Name = \"metadatahash\", EmitDefaultValue = false)] public string Metadatahash { get; set; } Property Value Type Description System.String MetadataHash specifies a commitment to some unspecified asset metadata. The format of this metadata is up to the application. | Improve this Doc View Source Reserveaddr ReserveAddr specifies the address holding reserve (non-minted) units of this asset. Declaration [DataMember(Name = \"reserveaddr\", EmitDefaultValue = false)] public string Reserveaddr { get; set; } Property Value Type Description System.String ReserveAddr specifies the address holding reserve (non-minted) units of this asset. | Improve this Doc View Source Total Total specifies the total number of units of this asset. Declaration [DataMember(Name = \"total\", EmitDefaultValue = false)] public ulong? Total { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Total specifies the total number of units of this asset. | Improve this Doc View Source Unitname UnitName specifies the name of a unit of this asset, as supplied by the creator. Declaration [DataMember(Name = \"unitname\", EmitDefaultValue = false)] public string Unitname { get; set; } Property Value Type Description System.String UnitName specifies the name of a unit of this asset, as supplied by the creator. | Improve this Doc View Source Url URL specifies a URL where more information about the asset can be retrieved Declaration [DataMember(Name = \"url\", EmitDefaultValue = false)] public string Url { get; set; } Property Value Type Description System.String URL specifies a URL where more information about the asset can be retrieved Methods | Improve this Doc View Source Equals(AssetParams) Returns true if AssetParams instances are equal Declaration public bool Equals(AssetParams input) Parameters Type Name Description AssetParams input Instance of AssetParams to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.AssetTransferTransactionType.html": {
    "href": "api/Algorand.Algod.Model.AssetTransferTransactionType.html",
    "title": "Class AssetTransferTransactionType | Dotnet Algorand Documents",
    "keywords": "Class AssetTransferTransactionType AssetTransferTransactionType contains the additional fields for an asset transfer transaction Inheritance System.Object AssetTransferTransactionType Implements System.IEquatable < AssetTransferTransactionType > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetTransferTransactionType : IEquatable<AssetTransferTransactionType>, IValidatableObject Constructors | Improve this Doc View Source AssetTransferTransactionType(Nullable<UInt64>, String, Nullable<UInt64>, String, String) Initializes a new instance of the AssetTransferTransactionType class. Declaration public AssetTransferTransactionType(ulong? amt = default(ulong? ), string closeto = null, ulong? id = default(ulong? ), string rcv = null, string snd = null) Parameters Type Name Description System.Nullable < System.UInt64 > amt Amount is the amount being transferred. (required). System.String closeto CloseTo is the destination for remaining funds (if closing).. System.Nullable < System.UInt64 > id AssetID is the asset being configured (or empty if creating) (required). System.String rcv Receiver is the recipient account. (required). System.String snd Sender is the source account (if using clawback).. Properties | Improve this Doc View Source Amt Amount is the amount being transferred. Declaration [DataMember(Name = \"amt\", EmitDefaultValue = false)] public ulong? Amt { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Amount is the amount being transferred. | Improve this Doc View Source Closeto CloseTo is the destination for remaining funds (if closing). Declaration [DataMember(Name = \"closeto\", EmitDefaultValue = false)] public string Closeto { get; set; } Property Value Type Description System.String CloseTo is the destination for remaining funds (if closing). | Improve this Doc View Source Id AssetID is the asset being configured (or empty if creating) Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public ulong? Id { get; set; } Property Value Type Description System.Nullable < System.UInt64 > AssetID is the asset being configured (or empty if creating) | Improve this Doc View Source Rcv Receiver is the recipient account. Declaration [DataMember(Name = \"rcv\", EmitDefaultValue = false)] public string Rcv { get; set; } Property Value Type Description System.String Receiver is the recipient account. | Improve this Doc View Source Snd Sender is the source account (if using clawback). Declaration [DataMember(Name = \"snd\", EmitDefaultValue = false)] public string Snd { get; set; } Property Value Type Description System.String Sender is the source account (if using clawback). Methods | Improve this Doc View Source Equals(AssetTransferTransactionType) Returns true if AssetTransferTransactionType instances are equal Declaration public bool Equals(AssetTransferTransactionType input) Parameters Type Name Description AssetTransferTransactionType input Instance of AssetTransferTransactionType to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.Block.html": {
    "href": "api/Algorand.Algod.Model.Block.html",
    "title": "Class Block | Dotnet Algorand Documents",
    "keywords": "Class Block Block contains a block information Inheritance System.Object Block Implements System.IEquatable < Block > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class Block : IEquatable<Block>, IValidatableObject Constructors | Improve this Doc View Source Block(String, Nullable<UInt64>, String, String, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, String, String, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, String, Nullable<Int64>, String, TransactionList, Nullable<Boolean>, String) Initializes a new instance of the Block class. Declaration public Block(string currentProtocol = null, ulong? frac = default(ulong? ), string hash = null, string nextProtocol = null, ulong? nextProtocolApprovals = default(ulong? ), ulong? nextProtocolSwitchOn = default(ulong? ), ulong? nextProtocolVoteBefore = default(ulong? ), ulong? period = default(ulong? ), string previousBlockHash = null, string proposer = null, ulong? rate = default(ulong? ), ulong? reward = default(ulong? ), ulong? round = default(ulong? ), string seed = null, long? timestamp = default(long? ), string txnRoot = null, TransactionList txns = null, bool? upgradeApprove = default(bool? ), string upgradePropose = null) Parameters Type Name Description System.String currentProtocol CurrentProtocol is a string that represents the current protocol (required). System.Nullable < System.UInt64 > frac The number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round.. System.String hash Hash is the current block hash (required). System.String nextProtocol NextProtocol is a string that represents the next proposed protocol (required). System.Nullable < System.UInt64 > nextProtocolApprovals NextProtocolApprovals is the number of blocks which approved the protocol upgrade (required). System.Nullable < System.UInt64 > nextProtocolSwitchOn NextProtocolSwitchOn is the round on which the protocol upgrade will take effect (required). System.Nullable < System.UInt64 > nextProtocolVoteBefore NextProtocolVoteBefore is the deadline round for this protocol upgrade (No votes will be consider after this round) (required). System.Nullable < System.UInt64 > period Period is the period on which the block was confirmed (required). System.String previousBlockHash PreviousBlockHash is the previous block hash (required). System.String proposer Proposer is the address of this block proposer (required). System.Nullable < System.UInt64 > rate The number of new MicroAlgos added to the participation stake from rewards at the next round.. System.Nullable < System.UInt64 > reward RewardsLevel specifies how many rewards, in MicroAlgos, have been distributed to each config.Protocol.RewardUnit of MicroAlgos since genesis.. System.Nullable < System.UInt64 > round Round is the current round on which this block was appended to the chain (required). System.String seed Seed is the sortition seed (required). System.Nullable < System.Int64 > timestamp TimeStamp in seconds since epoch (required). System.String txnRoot TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. (required). TransactionList txns txns. System.Nullable < System.Boolean > upgradeApprove UpgradeApprove indicates a yes vote for the current proposal (required). System.String upgradePropose UpgradePropose indicates a proposed upgrade (required). Properties | Improve this Doc View Source CurrentProtocol CurrentProtocol is a string that represents the current protocol Declaration [DataMember(Name = \"currentProtocol\", EmitDefaultValue = false)] public string CurrentProtocol { get; set; } Property Value Type Description System.String CurrentProtocol is a string that represents the current protocol | Improve this Doc View Source Frac The number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Declaration [DataMember(Name = \"frac\", EmitDefaultValue = false)] public ulong? Frac { get; set; } Property Value Type Description System.Nullable < System.UInt64 > The number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. | Improve this Doc View Source Hash Hash is the current block hash Declaration [DataMember(Name = \"hash\", EmitDefaultValue = false)] public string Hash { get; set; } Property Value Type Description System.String Hash is the current block hash | Improve this Doc View Source NextProtocol NextProtocol is a string that represents the next proposed protocol Declaration [DataMember(Name = \"nextProtocol\", EmitDefaultValue = false)] public string NextProtocol { get; set; } Property Value Type Description System.String NextProtocol is a string that represents the next proposed protocol | Improve this Doc View Source NextProtocolApprovals NextProtocolApprovals is the number of blocks which approved the protocol upgrade Declaration [DataMember(Name = \"nextProtocolApprovals\", EmitDefaultValue = false)] public ulong? NextProtocolApprovals { get; set; } Property Value Type Description System.Nullable < System.UInt64 > NextProtocolApprovals is the number of blocks which approved the protocol upgrade | Improve this Doc View Source NextProtocolSwitchOn NextProtocolSwitchOn is the round on which the protocol upgrade will take effect Declaration [DataMember(Name = \"nextProtocolSwitchOn\", EmitDefaultValue = false)] public ulong? NextProtocolSwitchOn { get; set; } Property Value Type Description System.Nullable < System.UInt64 > NextProtocolSwitchOn is the round on which the protocol upgrade will take effect | Improve this Doc View Source NextProtocolVoteBefore NextProtocolVoteBefore is the deadline round for this protocol upgrade (No votes will be consider after this round) Declaration [DataMember(Name = \"nextProtocolVoteBefore\", EmitDefaultValue = false)] public ulong? NextProtocolVoteBefore { get; set; } Property Value Type Description System.Nullable < System.UInt64 > NextProtocolVoteBefore is the deadline round for this protocol upgrade (No votes will be consider after this round) | Improve this Doc View Source Period Period is the period on which the block was confirmed Declaration [DataMember(Name = \"period\", EmitDefaultValue = false)] public ulong? Period { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Period is the period on which the block was confirmed | Improve this Doc View Source PreviousBlockHash PreviousBlockHash is the previous block hash Declaration [DataMember(Name = \"previousBlockHash\", EmitDefaultValue = false)] public string PreviousBlockHash { get; set; } Property Value Type Description System.String PreviousBlockHash is the previous block hash | Improve this Doc View Source Proposer Proposer is the address of this block proposer Declaration [DataMember(Name = \"proposer\", EmitDefaultValue = false)] public string Proposer { get; set; } Property Value Type Description System.String Proposer is the address of this block proposer | Improve this Doc View Source Rate The number of new MicroAlgos added to the participation stake from rewards at the next round. Declaration [DataMember(Name = \"rate\", EmitDefaultValue = false)] public ulong? Rate { get; set; } Property Value Type Description System.Nullable < System.UInt64 > The number of new MicroAlgos added to the participation stake from rewards at the next round. | Improve this Doc View Source Reward RewardsLevel specifies how many rewards, in MicroAlgos, have been distributed to each config.Protocol.RewardUnit of MicroAlgos since genesis. Declaration [DataMember(Name = \"reward\", EmitDefaultValue = false)] public ulong? Reward { get; set; } Property Value Type Description System.Nullable < System.UInt64 > RewardsLevel specifies how many rewards, in MicroAlgos, have been distributed to each config.Protocol.RewardUnit of MicroAlgos since genesis. | Improve this Doc View Source Round Round is the current round on which this block was appended to the chain Declaration [DataMember(Name = \"round\", EmitDefaultValue = false)] public ulong? Round { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Round is the current round on which this block was appended to the chain | Improve this Doc View Source Seed Seed is the sortition seed Declaration [DataMember(Name = \"seed\", EmitDefaultValue = false)] public string Seed { get; set; } Property Value Type Description System.String Seed is the sortition seed | Improve this Doc View Source Timestamp TimeStamp in seconds since epoch Declaration [DataMember(Name = \"timestamp\", EmitDefaultValue = false)] public long? Timestamp { get; set; } Property Value Type Description System.Nullable < System.Int64 > TimeStamp in seconds since epoch | Improve this Doc View Source TxnRoot TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. Declaration [DataMember(Name = \"txnRoot\", EmitDefaultValue = false)] public string TxnRoot { get; set; } Property Value Type Description System.String TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. | Improve this Doc View Source Txns Gets or Sets Txns Declaration [DataMember(Name = \"txns\", EmitDefaultValue = false)] public TransactionList Txns { get; set; } Property Value Type Description TransactionList | Improve this Doc View Source UpgradeApprove UpgradeApprove indicates a yes vote for the current proposal Declaration [DataMember(Name = \"upgradeApprove\", EmitDefaultValue = false)] public bool? UpgradeApprove { get; set; } Property Value Type Description System.Nullable < System.Boolean > UpgradeApprove indicates a yes vote for the current proposal | Improve this Doc View Source UpgradePropose UpgradePropose indicates a proposed upgrade Declaration [DataMember(Name = \"upgradePropose\", EmitDefaultValue = false)] public string UpgradePropose { get; set; } Property Value Type Description System.String UpgradePropose indicates a proposed upgrade Methods | Improve this Doc View Source Equals(Block) Returns true if Block instances are equal Declaration public bool Equals(Block input) Parameters Type Name Description Block input Instance of Block to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.BuildVersion.html": {
    "href": "api/Algorand.Algod.Model.BuildVersion.html",
    "title": "Class BuildVersion | Dotnet Algorand Documents",
    "keywords": "Class BuildVersion BuildVersion Inheritance System.Object BuildVersion Implements System.IEquatable < BuildVersion > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class BuildVersion : IEquatable<BuildVersion>, IValidatableObject Constructors | Improve this Doc View Source BuildVersion(String, Nullable<Int64>, String, String, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the BuildVersion class. Declaration public BuildVersion(string branch = null, long? buildNumber = default(long? ), string channel = null, string commitHash = null, long? major = default(long? ), long? minor = default(long? )) Parameters Type Name Description System.String branch branch (required). System.Nullable < System.Int64 > buildNumber buildNumber (required). System.String channel channel (required). System.String commitHash commitHash (required). System.Nullable < System.Int64 > major major (required). System.Nullable < System.Int64 > minor minor (required). Properties | Improve this Doc View Source Branch Gets or Sets Branch Declaration [DataMember(Name = \"branch\", EmitDefaultValue = false)] public string Branch { get; set; } Property Value Type Description System.String | Improve this Doc View Source BuildNumber Gets or Sets BuildNumber Declaration [DataMember(Name = \"build_number\", EmitDefaultValue = false)] public long? BuildNumber { get; set; } Property Value Type Description System.Nullable < System.Int64 > | Improve this Doc View Source Channel Gets or Sets Channel Declaration [DataMember(Name = \"channel\", EmitDefaultValue = false)] public string Channel { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommitHash Gets or Sets CommitHash Declaration [DataMember(Name = \"commit_hash\", EmitDefaultValue = false)] public string CommitHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Major Gets or Sets Major Declaration [DataMember(Name = \"major\", EmitDefaultValue = false)] public long? Major { get; set; } Property Value Type Description System.Nullable < System.Int64 > | Improve this Doc View Source Minor Gets or Sets Minor Declaration [DataMember(Name = \"minor\", EmitDefaultValue = false)] public long? Minor { get; set; } Property Value Type Description System.Nullable < System.Int64 > Methods | Improve this Doc View Source Equals(BuildVersion) Returns true if BuildVersion instances are equal Declaration public bool Equals(BuildVersion input) Parameters Type Name Description BuildVersion input Instance of BuildVersion to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.html": {
    "href": "api/Algorand.Algod.Model.html",
    "title": "Namespace Algorand.Algod.Model | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.Algod.Model Classes Account Account Description Asset Asset specifies both the unique identifier and the parameters for an asset AssetConfigTransactionType AssetConfigTransactionType contains the additional fields for an asset config transaction AssetFreezeTransactionType AssetFreezeTransactionType contains the additional fields for an asset freeze transaction AssetHolding AssetList AssetList contains a list of assets AssetParams AssetParams AssetTransferTransactionType AssetTransferTransactionType contains the additional fields for an asset transfer transaction Block Block contains a block information BuildVersion BuildVersion KeyregTransactionType KeyregTransactionType contains the additional fields for a keyreg Transaction NodeStatus NodeStatus contains the information about a node status Participation Participation Description PaymentTransactionType PaymentTransactionType contains the additional fields for a payment Transaction PendingTransactions PendingTransactions represents a potentially truncated list of transactions currently in the node's transaction pool. Supply Supply represents the current supply of MicroAlgos in the system Transaction Transaction contains all fields common to all transactions and serves as an envelope to all transactions type TransactionFee TransactionFee contains the suggested fee TransactionID TransactionID Description TransactionList TransactionList contains a list of transactions TransactionParams TransactionParams contains the parameters that help a client construct a new transaction. TransactionResults TransactionResults contains information about the side effects of a transaction Version Note that we annotate this as a model so that legacy clients can directly import a swagger generated Version model."
  },
  "api/Algorand.Algod.Model.KeyregTransactionType.html": {
    "href": "api/Algorand.Algod.Model.KeyregTransactionType.html",
    "title": "Class KeyregTransactionType | Dotnet Algorand Documents",
    "keywords": "Class KeyregTransactionType KeyregTransactionType contains the additional fields for a keyreg Transaction Inheritance System.Object KeyregTransactionType Implements System.IEquatable < KeyregTransactionType > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class KeyregTransactionType : IEquatable<KeyregTransactionType>, IValidatableObject Constructors | Improve this Doc View Source KeyregTransactionType(String, Nullable<UInt64>, Nullable<UInt64>, String, Nullable<UInt64>) Initializes a new instance of the KeyregTransactionType class. Declaration public KeyregTransactionType(string selkey = null, ulong? votefst = default(ulong? ), ulong? votekd = default(ulong? ), string votekey = null, ulong? votelst = default(ulong? )) Parameters Type Name Description System.String selkey SelectionPK is the VRF public key used in key registration transactions. System.Nullable < System.UInt64 > votefst VoteFirst is the first round this participation key is valid. System.Nullable < System.UInt64 > votekd VoteKeyDilution is the dilution for the 2-level participation key. System.String votekey VotePK is the participation public key used in key registration transactions. System.Nullable < System.UInt64 > votelst VoteLast is the last round this participation key is valid. Properties | Improve this Doc View Source Selkey SelectionPK is the VRF public key used in key registration transactions Declaration [DataMember(Name = \"selkey\", EmitDefaultValue = false)] public string Selkey { get; set; } Property Value Type Description System.String SelectionPK is the VRF public key used in key registration transactions | Improve this Doc View Source Votefst VoteFirst is the first round this participation key is valid Declaration [DataMember(Name = \"votefst\", EmitDefaultValue = false)] public ulong? Votefst { get; set; } Property Value Type Description System.Nullable < System.UInt64 > VoteFirst is the first round this participation key is valid | Improve this Doc View Source Votekd VoteKeyDilution is the dilution for the 2-level participation key Declaration [DataMember(Name = \"votekd\", EmitDefaultValue = false)] public ulong? Votekd { get; set; } Property Value Type Description System.Nullable < System.UInt64 > VoteKeyDilution is the dilution for the 2-level participation key | Improve this Doc View Source Votekey VotePK is the participation public key used in key registration transactions Declaration [DataMember(Name = \"votekey\", EmitDefaultValue = false)] public string Votekey { get; set; } Property Value Type Description System.String VotePK is the participation public key used in key registration transactions | Improve this Doc View Source Votelst VoteLast is the last round this participation key is valid Declaration [DataMember(Name = \"votelst\", EmitDefaultValue = false)] public ulong? Votelst { get; set; } Property Value Type Description System.Nullable < System.UInt64 > VoteLast is the last round this participation key is valid Methods | Improve this Doc View Source Equals(KeyregTransactionType) Returns true if KeyregTransactionType instances are equal Declaration public bool Equals(KeyregTransactionType input) Parameters Type Name Description KeyregTransactionType input Instance of KeyregTransactionType to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.NodeStatus.html": {
    "href": "api/Algorand.Algod.Model.NodeStatus.html",
    "title": "Class NodeStatus | Dotnet Algorand Documents",
    "keywords": "Class NodeStatus NodeStatus contains the information about a node status Inheritance System.Object NodeStatus Implements System.IEquatable < NodeStatus > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class NodeStatus : IEquatable<NodeStatus>, IValidatableObject Constructors | Improve this Doc View Source NodeStatus(Nullable<Int64>, Nullable<Boolean>, String, Nullable<UInt64>, String, Nullable<UInt64>, Nullable<Boolean>, Nullable<Int64>) Initializes a new instance of the NodeStatus class. Declaration public NodeStatus(long? catchupTime = default(long? ), bool? hasSyncedSinceStartup = default(bool? ), string lastConsensusVersion = null, ulong? lastRound = default(ulong? ), string nextConsensusVersion = null, ulong? nextConsensusVersionRound = default(ulong? ), bool? nextConsensusVersionSupported = default(bool? ), long? timeSinceLastRound = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > catchupTime CatchupTime in nanoseconds (required). System.Nullable < System.Boolean > hasSyncedSinceStartup HasSyncedSinceStartup indicates whether a round has completed since startup (required). System.String lastConsensusVersion LastVersion indicates the last consensus version supported (required). System.Nullable < System.UInt64 > lastRound LastRound indicates the last round seen (required). System.String nextConsensusVersion NextVersion of consensus protocol to use (required). System.Nullable < System.UInt64 > nextConsensusVersionRound NextVersionRound is the round at which the next consensus version will apply (required). System.Nullable < System.Boolean > nextConsensusVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node (required). System.Nullable < System.Int64 > timeSinceLastRound TimeSinceLastRound in nanoseconds (required). Properties | Improve this Doc View Source CatchupTime CatchupTime in nanoseconds Declaration [DataMember(Name = \"catchupTime\", EmitDefaultValue = false)] public long? CatchupTime { get; set; } Property Value Type Description System.Nullable < System.Int64 > CatchupTime in nanoseconds | Improve this Doc View Source HasSyncedSinceStartup HasSyncedSinceStartup indicates whether a round has completed since startup Declaration [DataMember(Name = \"hasSyncedSinceStartup\", EmitDefaultValue = false)] public bool? HasSyncedSinceStartup { get; set; } Property Value Type Description System.Nullable < System.Boolean > HasSyncedSinceStartup indicates whether a round has completed since startup | Improve this Doc View Source LastConsensusVersion LastVersion indicates the last consensus version supported Declaration [DataMember(Name = \"lastConsensusVersion\", EmitDefaultValue = false)] public string LastConsensusVersion { get; set; } Property Value Type Description System.String LastVersion indicates the last consensus version supported | Improve this Doc View Source LastRound LastRound indicates the last round seen Declaration [DataMember(Name = \"lastRound\", EmitDefaultValue = false)] public ulong? LastRound { get; set; } Property Value Type Description System.Nullable < System.UInt64 > LastRound indicates the last round seen | Improve this Doc View Source NextConsensusVersion NextVersion of consensus protocol to use Declaration [DataMember(Name = \"nextConsensusVersion\", EmitDefaultValue = false)] public string NextConsensusVersion { get; set; } Property Value Type Description System.String NextVersion of consensus protocol to use | Improve this Doc View Source NextConsensusVersionRound NextVersionRound is the round at which the next consensus version will apply Declaration [DataMember(Name = \"nextConsensusVersionRound\", EmitDefaultValue = false)] public ulong? NextConsensusVersionRound { get; set; } Property Value Type Description System.Nullable < System.UInt64 > NextVersionRound is the round at which the next consensus version will apply | Improve this Doc View Source NextConsensusVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node Declaration [DataMember(Name = \"nextConsensusVersionSupported\", EmitDefaultValue = false)] public bool? NextConsensusVersionSupported { get; set; } Property Value Type Description System.Nullable < System.Boolean > NextVersionSupported indicates whether the next consensus version is supported by this node | Improve this Doc View Source TimeSinceLastRound TimeSinceLastRound in nanoseconds Declaration [DataMember(Name = \"timeSinceLastRound\", EmitDefaultValue = false)] public long? TimeSinceLastRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > TimeSinceLastRound in nanoseconds Methods | Improve this Doc View Source Equals(NodeStatus) Returns true if NodeStatus instances are equal Declaration public bool Equals(NodeStatus input) Parameters Type Name Description NodeStatus input Instance of NodeStatus to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.Participation.html": {
    "href": "api/Algorand.Algod.Model.Participation.html",
    "title": "Class Participation | Dotnet Algorand Documents",
    "keywords": "Class Participation Participation Description Inheritance System.Object Participation Implements System.IEquatable < Participation > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class Participation : IEquatable<Participation>, IValidatableObject Constructors | Improve this Doc View Source Participation(String, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, String) Initializes a new instance of the Participation class. Declaration public Participation(string partpkb64 = null, ulong? votefst = default(ulong? ), ulong? votekd = default(ulong? ), ulong? votelst = default(ulong? ), string vrfpkb64 = null) Parameters Type Name Description System.String partpkb64 ParticipationPK is the root participation public key (if any) currently registered for this round (required). System.Nullable < System.UInt64 > votefst VoteFirst is the first round for which this participation is valid. (required). System.Nullable < System.UInt64 > votekd VoteKeyDilution is the number of subkeys in for each batch of participation keys. (required). System.Nullable < System.UInt64 > votelst VoteLast is the last round for which this participation is valid. (required). System.String vrfpkb64 VRFPK is the selection public key (if any) currently registered for this round (required). Properties | Improve this Doc View Source Partpkb64 ParticipationPK is the root participation public key (if any) currently registered for this round Declaration [DataMember(Name = \"partpkb64\", EmitDefaultValue = false)] public string Partpkb64 { get; set; } Property Value Type Description System.String ParticipationPK is the root participation public key (if any) currently registered for this round | Improve this Doc View Source Votefst VoteFirst is the first round for which this participation is valid. Declaration [DataMember(Name = \"votefst\", EmitDefaultValue = false)] public ulong? Votefst { get; set; } Property Value Type Description System.Nullable < System.UInt64 > VoteFirst is the first round for which this participation is valid. | Improve this Doc View Source Votekd VoteKeyDilution is the number of subkeys in for each batch of participation keys. Declaration [DataMember(Name = \"votekd\", EmitDefaultValue = false)] public ulong? Votekd { get; set; } Property Value Type Description System.Nullable < System.UInt64 > VoteKeyDilution is the number of subkeys in for each batch of participation keys. | Improve this Doc View Source Votelst VoteLast is the last round for which this participation is valid. Declaration [DataMember(Name = \"votelst\", EmitDefaultValue = false)] public ulong? Votelst { get; set; } Property Value Type Description System.Nullable < System.UInt64 > VoteLast is the last round for which this participation is valid. | Improve this Doc View Source Vrfpkb64 VRFPK is the selection public key (if any) currently registered for this round Declaration [DataMember(Name = \"vrfpkb64\", EmitDefaultValue = false)] public string Vrfpkb64 { get; set; } Property Value Type Description System.String VRFPK is the selection public key (if any) currently registered for this round Methods | Improve this Doc View Source Equals(Participation) Returns true if Participation instances are equal Declaration public bool Equals(Participation input) Parameters Type Name Description Participation input Instance of Participation to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.PaymentTransactionType.html": {
    "href": "api/Algorand.Algod.Model.PaymentTransactionType.html",
    "title": "Class PaymentTransactionType | Dotnet Algorand Documents",
    "keywords": "Class PaymentTransactionType PaymentTransactionType contains the additional fields for a payment Transaction Inheritance System.Object PaymentTransactionType Implements System.IEquatable < PaymentTransactionType > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class PaymentTransactionType : IEquatable<PaymentTransactionType>, IValidatableObject Constructors | Improve this Doc View Source PaymentTransactionType(Nullable<UInt64>, String, Nullable<UInt64>, Nullable<UInt64>, String, Nullable<UInt64>) Initializes a new instance of the PaymentTransactionType class. Declaration public PaymentTransactionType(ulong? amount = default(ulong? ), string close = null, ulong? closeamount = default(ulong? ), ulong? closerewards = default(ulong? ), string to = null, ulong? torewards = default(ulong? )) Parameters Type Name Description System.Nullable < System.UInt64 > amount Amount is the amount of MicroAlgos intended to be transferred (required). System.String close CloseRemainderTo is the address the sender closed to. System.Nullable < System.UInt64 > closeamount CloseAmount is the amount sent to CloseRemainderTo, for committed transaction. System.Nullable < System.UInt64 > closerewards CloseRewards is the amount of pending rewards applied to the CloseRemainderTo account as part of this transaction.. System.String to To is the receiver's address (required). System.Nullable < System.UInt64 > torewards ToRewards is the amount of pending rewards applied to the To account as part of this transaction.. Properties | Improve this Doc View Source Amount Amount is the amount of MicroAlgos intended to be transferred Declaration [DataMember(Name = \"amount\", EmitDefaultValue = false)] public ulong? Amount { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Amount is the amount of MicroAlgos intended to be transferred | Improve this Doc View Source Close CloseRemainderTo is the address the sender closed to Declaration [DataMember(Name = \"close\", EmitDefaultValue = false)] public string Close { get; set; } Property Value Type Description System.String CloseRemainderTo is the address the sender closed to | Improve this Doc View Source Closeamount CloseAmount is the amount sent to CloseRemainderTo, for committed transaction Declaration [DataMember(Name = \"closeamount\", EmitDefaultValue = false)] public ulong? Closeamount { get; set; } Property Value Type Description System.Nullable < System.UInt64 > CloseAmount is the amount sent to CloseRemainderTo, for committed transaction | Improve this Doc View Source Closerewards CloseRewards is the amount of pending rewards applied to the CloseRemainderTo account as part of this transaction. Declaration [DataMember(Name = \"closerewards\", EmitDefaultValue = false)] public ulong? Closerewards { get; set; } Property Value Type Description System.Nullable < System.UInt64 > CloseRewards is the amount of pending rewards applied to the CloseRemainderTo account as part of this transaction. | Improve this Doc View Source To To is the receiver's address Declaration [DataMember(Name = \"to\", EmitDefaultValue = false)] public string To { get; set; } Property Value Type Description System.String To is the receiver's address | Improve this Doc View Source Torewards ToRewards is the amount of pending rewards applied to the To account as part of this transaction. Declaration [DataMember(Name = \"torewards\", EmitDefaultValue = false)] public ulong? Torewards { get; set; } Property Value Type Description System.Nullable < System.UInt64 > ToRewards is the amount of pending rewards applied to the To account as part of this transaction. Methods | Improve this Doc View Source Equals(PaymentTransactionType) Returns true if PaymentTransactionType instances are equal Declaration public bool Equals(PaymentTransactionType input) Parameters Type Name Description PaymentTransactionType input Instance of PaymentTransactionType to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.PendingTransactions.html": {
    "href": "api/Algorand.Algod.Model.PendingTransactions.html",
    "title": "Class PendingTransactions | Dotnet Algorand Documents",
    "keywords": "Class PendingTransactions PendingTransactions represents a potentially truncated list of transactions currently in the node's transaction pool. Inheritance System.Object PendingTransactions Implements System.IEquatable < PendingTransactions > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class PendingTransactions : IEquatable<PendingTransactions>, IValidatableObject Constructors | Improve this Doc View Source PendingTransactions(Nullable<UInt64>, TransactionList) Initializes a new instance of the PendingTransactions class. Declaration public PendingTransactions(ulong? totalTxns = default(ulong? ), TransactionList truncatedTxns = null) Parameters Type Name Description System.Nullable < System.UInt64 > totalTxns TotalTxns (required). TransactionList truncatedTxns truncatedTxns (required). Properties | Improve this Doc View Source TotalTxns TotalTxns Declaration [DataMember(Name = \"totalTxns\", EmitDefaultValue = false)] public ulong? TotalTxns { get; set; } Property Value Type Description System.Nullable < System.UInt64 > TotalTxns | Improve this Doc View Source TruncatedTxns Gets or Sets TruncatedTxns Declaration [DataMember(Name = \"truncatedTxns\", EmitDefaultValue = false)] public TransactionList TruncatedTxns { get; set; } Property Value Type Description TransactionList Methods | Improve this Doc View Source Equals(PendingTransactions) Returns true if PendingTransactions instances are equal Declaration public bool Equals(PendingTransactions input) Parameters Type Name Description PendingTransactions input Instance of PendingTransactions to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.Supply.html": {
    "href": "api/Algorand.Algod.Model.Supply.html",
    "title": "Class Supply | Dotnet Algorand Documents",
    "keywords": "Class Supply Supply represents the current supply of MicroAlgos in the system Inheritance System.Object Supply Implements System.IEquatable < Supply > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class Supply : IEquatable<Supply>, IValidatableObject Constructors | Improve this Doc View Source Supply(Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>) Initializes a new instance of the Supply class. Declaration public Supply(ulong? onlineMoney = default(ulong? ), ulong? round = default(ulong? ), ulong? totalMoney = default(ulong? )) Parameters Type Name Description System.Nullable < System.UInt64 > onlineMoney OnlineMoney (required). System.Nullable < System.UInt64 > round Round (required). System.Nullable < System.UInt64 > totalMoney TotalMoney (required). Properties | Improve this Doc View Source OnlineMoney OnlineMoney Declaration [DataMember(Name = \"onlineMoney\", EmitDefaultValue = false)] public ulong? OnlineMoney { get; set; } Property Value Type Description System.Nullable < System.UInt64 > OnlineMoney | Improve this Doc View Source Round Round Declaration [DataMember(Name = \"round\", EmitDefaultValue = false)] public ulong? Round { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Round | Improve this Doc View Source TotalMoney TotalMoney Declaration [DataMember(Name = \"totalMoney\", EmitDefaultValue = false)] public ulong? TotalMoney { get; set; } Property Value Type Description System.Nullable < System.UInt64 > TotalMoney Methods | Improve this Doc View Source Equals(Supply) Returns true if Supply instances are equal Declaration public bool Equals(Supply input) Parameters Type Name Description Supply input Instance of Supply to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.Transaction.html": {
    "href": "api/Algorand.Algod.Model.Transaction.html",
    "title": "Class Transaction | Dotnet Algorand Documents",
    "keywords": "Class Transaction Transaction contains all fields common to all transactions and serves as an envelope to all transactions type Inheritance System.Object Transaction Implements System.IEquatable < Transaction > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class Transaction : IEquatable<Transaction>, IValidatableObject Constructors | Improve this Doc View Source Transaction(AssetConfigTransactionType, AssetFreezeTransactionType, AssetTransferTransactionType, Nullable<UInt64>, Nullable<UInt64>, String, Nullable<UInt64>, String, String, String, KeyregTransactionType, Nullable<UInt64>, String, PaymentTransactionType, String, Nullable<UInt64>, String, TransactionResults, String) Initializes a new instance of the Transaction class. Declaration public Transaction(AssetConfigTransactionType curcfg = null, AssetFreezeTransactionType curfrz = null, AssetTransferTransactionType curxfer = null, ulong? fee = default(ulong? ), ulong? firstRound = default(ulong? ), string from = null, ulong? fromrewards = default(ulong? ), string genesisID = null, string genesishashb64 = null, string group = null, KeyregTransactionType keyreg = null, ulong? lastRound = default(ulong? ), string noteb64 = null, PaymentTransactionType payment = null, string poolerror = null, ulong? round = default(ulong? ), string tx = null, TransactionResults txresults = null, string type = null) Parameters Type Name Description AssetConfigTransactionType curcfg curcfg. AssetFreezeTransactionType curfrz curfrz. AssetTransferTransactionType curxfer curxfer. System.Nullable < System.UInt64 > fee Fee is the transaction fee (required). System.Nullable < System.UInt64 > firstRound FirstRound indicates the first valid round for this transaction (required). System.String from From is the sender's address (required). System.Nullable < System.UInt64 > fromrewards FromRewards is the amount of pending rewards applied to the From account as part of this transaction.. System.String genesisID Genesis ID (required). System.String genesishashb64 Genesis hash (required). System.String group Group. KeyregTransactionType keyreg keyreg. System.Nullable < System.UInt64 > lastRound LastRound indicates the last valid round for this transaction (required). System.String noteb64 Note is a free form data. PaymentTransactionType payment payment. System.String poolerror PoolError indicates the transaction was evicted from this node's transaction pool (if non-empty). A non-empty PoolError does not guarantee that the transaction will never be committed; other nodes may not have evicted the transaction and may attempt to commit it in the future.. System.Nullable < System.UInt64 > round ConfirmedRound indicates the block number this transaction appeared in. System.String tx TxID is the transaction ID (required). TransactionResults txresults txresults. System.String type Type is the transaction type (required). Properties | Improve this Doc View Source Curcfg Gets or Sets Curcfg Declaration [DataMember(Name = \"curcfg\", EmitDefaultValue = false)] public AssetConfigTransactionType Curcfg { get; set; } Property Value Type Description AssetConfigTransactionType | Improve this Doc View Source Curfrz Gets or Sets Curfrz Declaration [DataMember(Name = \"curfrz\", EmitDefaultValue = false)] public AssetFreezeTransactionType Curfrz { get; set; } Property Value Type Description AssetFreezeTransactionType | Improve this Doc View Source Curxfer Gets or Sets Curxfer Declaration [DataMember(Name = \"curxfer\", EmitDefaultValue = false)] public AssetTransferTransactionType Curxfer { get; set; } Property Value Type Description AssetTransferTransactionType | Improve this Doc View Source Fee Fee is the transaction fee Declaration [DataMember(Name = \"fee\", EmitDefaultValue = false)] public ulong? Fee { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Fee is the transaction fee | Improve this Doc View Source FirstRound FirstRound indicates the first valid round for this transaction Declaration [DataMember(Name = \"first-round\", EmitDefaultValue = false)] public ulong? FirstRound { get; set; } Property Value Type Description System.Nullable < System.UInt64 > FirstRound indicates the first valid round for this transaction | Improve this Doc View Source From From is the sender's address Declaration [DataMember(Name = \"from\", EmitDefaultValue = false)] public string From { get; set; } Property Value Type Description System.String From is the sender's address | Improve this Doc View Source Fromrewards FromRewards is the amount of pending rewards applied to the From account as part of this transaction. Declaration [DataMember(Name = \"fromrewards\", EmitDefaultValue = false)] public ulong? Fromrewards { get; set; } Property Value Type Description System.Nullable < System.UInt64 > FromRewards is the amount of pending rewards applied to the From account as part of this transaction. | Improve this Doc View Source Genesishashb64 Genesis hash Declaration [DataMember(Name = \"genesishashb64\", EmitDefaultValue = false)] public string Genesishashb64 { get; set; } Property Value Type Description System.String Genesis hash | Improve this Doc View Source GenesisID Genesis ID Declaration [DataMember(Name = \"genesisID\", EmitDefaultValue = false)] public string GenesisID { get; set; } Property Value Type Description System.String Genesis ID | Improve this Doc View Source Group Group Declaration [DataMember(Name = \"group\", EmitDefaultValue = false)] public string Group { get; set; } Property Value Type Description System.String Group | Improve this Doc View Source Keyreg Gets or Sets Keyreg Declaration [DataMember(Name = \"keyreg\", EmitDefaultValue = false)] public KeyregTransactionType Keyreg { get; set; } Property Value Type Description KeyregTransactionType | Improve this Doc View Source LastRound LastRound indicates the last valid round for this transaction Declaration [DataMember(Name = \"last-round\", EmitDefaultValue = false)] public ulong? LastRound { get; set; } Property Value Type Description System.Nullable < System.UInt64 > LastRound indicates the last valid round for this transaction | Improve this Doc View Source Noteb64 Note is a free form data Declaration [DataMember(Name = \"noteb64\", EmitDefaultValue = false)] public string Noteb64 { get; set; } Property Value Type Description System.String Note is a free form data | Improve this Doc View Source Payment Gets or Sets Payment Declaration [DataMember(Name = \"payment\", EmitDefaultValue = false)] public PaymentTransactionType Payment { get; set; } Property Value Type Description PaymentTransactionType | Improve this Doc View Source Poolerror PoolError indicates the transaction was evicted from this node's transaction pool (if non-empty). A non-empty PoolError does not guarantee that the transaction will never be committed; other nodes may not have evicted the transaction and may attempt to commit it in the future. Declaration [DataMember(Name = \"poolerror\", EmitDefaultValue = false)] public string Poolerror { get; set; } Property Value Type Description System.String PoolError indicates the transaction was evicted from this node's transaction pool (if non-empty). A non-empty PoolError does not guarantee that the transaction will never be committed; other nodes may not have evicted the transaction and may attempt to commit it in the future. | Improve this Doc View Source Round ConfirmedRound indicates the block number this transaction appeared in Declaration [DataMember(Name = \"round\", EmitDefaultValue = false)] public ulong? Round { get; set; } Property Value Type Description System.Nullable < System.UInt64 > ConfirmedRound indicates the block number this transaction appeared in | Improve this Doc View Source Tx TxID is the transaction ID Declaration [DataMember(Name = \"tx\", EmitDefaultValue = false)] public string Tx { get; set; } Property Value Type Description System.String TxID is the transaction ID | Improve this Doc View Source Txresults Gets or Sets Txresults Declaration [DataMember(Name = \"txresults\", EmitDefaultValue = false)] public TransactionResults Txresults { get; set; } Property Value Type Description TransactionResults | Improve this Doc View Source Type Type is the transaction type Declaration [DataMember(Name = \"type\", EmitDefaultValue = false)] public string Type { get; set; } Property Value Type Description System.String Type is the transaction type Methods | Improve this Doc View Source Equals(Transaction) Returns true if Transaction instances are equal Declaration public bool Equals(Transaction input) Parameters Type Name Description Transaction input Instance of Transaction to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.TransactionFee.html": {
    "href": "api/Algorand.Algod.Model.TransactionFee.html",
    "title": "Class TransactionFee | Dotnet Algorand Documents",
    "keywords": "Class TransactionFee TransactionFee contains the suggested fee Inheritance System.Object TransactionFee Implements System.IEquatable < TransactionFee > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionFee : IEquatable<TransactionFee>, IValidatableObject Constructors | Improve this Doc View Source TransactionFee(Nullable<UInt64>) Initializes a new instance of the TransactionFee class. Declaration public TransactionFee(ulong? fee = default(ulong? )) Parameters Type Name Description System.Nullable < System.UInt64 > fee Fee is transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. (required). Properties | Improve this Doc View Source Fee Fee is transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration [DataMember(Name = \"fee\", EmitDefaultValue = false)] public ulong? Fee { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Fee is transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. Methods | Improve this Doc View Source Equals(TransactionFee) Returns true if TransactionFee instances are equal Declaration public bool Equals(TransactionFee input) Parameters Type Name Description TransactionFee input Instance of TransactionFee to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.TransactionID.html": {
    "href": "api/Algorand.Algod.Model.TransactionID.html",
    "title": "Class TransactionID | Dotnet Algorand Documents",
    "keywords": "Class TransactionID TransactionID Description Inheritance System.Object TransactionID Implements System.IEquatable < TransactionID > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionID : IEquatable<TransactionID>, IValidatableObject Constructors | Improve this Doc View Source TransactionID(String) Initializes a new instance of the TransactionID class. Declaration public TransactionID(string txId = null) Parameters Type Name Description System.String txId TxId is the string encoding of the transaction hash (required). Properties | Improve this Doc View Source TxId TxId is the string encoding of the transaction hash Declaration [DataMember(Name = \"txId\", EmitDefaultValue = false)] public string TxId { get; set; } Property Value Type Description System.String TxId is the string encoding of the transaction hash Methods | Improve this Doc View Source Equals(TransactionID) Returns true if TransactionID instances are equal Declaration public bool Equals(TransactionID input) Parameters Type Name Description TransactionID input Instance of TransactionID to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.TransactionList.html": {
    "href": "api/Algorand.Algod.Model.TransactionList.html",
    "title": "Class TransactionList | Dotnet Algorand Documents",
    "keywords": "Class TransactionList TransactionList contains a list of transactions Inheritance System.Object TransactionList Implements System.IEquatable < TransactionList > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionList : IEquatable<TransactionList>, IValidatableObject Constructors | Improve this Doc View Source TransactionList(List<Transaction>) Initializes a new instance of the TransactionList class. Declaration public TransactionList(List<Transaction> transactions = null) Parameters Type Name Description System.Collections.Generic.List < Transaction > transactions TransactionList is a list of transactions (required). Properties | Improve this Doc View Source Transactions TransactionList is a list of transactions Declaration [DataMember(Name = \"transactions\", EmitDefaultValue = false)] public List<Transaction> Transactions { get; set; } Property Value Type Description System.Collections.Generic.List < Transaction > TransactionList is a list of transactions Methods | Improve this Doc View Source Equals(TransactionList) Returns true if TransactionList instances are equal Declaration public bool Equals(TransactionList input) Parameters Type Name Description TransactionList input Instance of TransactionList to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.TransactionParams.html": {
    "href": "api/Algorand.Algod.Model.TransactionParams.html",
    "title": "Class TransactionParams | Dotnet Algorand Documents",
    "keywords": "Class TransactionParams TransactionParams contains the parameters that help a client construct a new transaction. Inheritance System.Object TransactionParams Implements System.IEquatable < TransactionParams > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionParams : IEquatable<TransactionParams>, IValidatableObject Constructors | Improve this Doc View Source TransactionParams(String, Nullable<UInt64>, String, String, Nullable<UInt64>, Nullable<UInt64>) Initializes a new instance of the TransactionParams class. Declaration public TransactionParams(string consensusVersion = null, ulong? fee = default(ulong? ), string genesisID = null, string genesishashb64 = null, ulong? lastRound = default(ulong? ), ulong? minFee = default(ulong? )) Parameters Type Name Description System.String consensusVersion ConsensusVersion indicates the consensus protocol version as of LastRound. (required). System.Nullable < System.UInt64 > fee Fee is the suggested transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. (required). System.String genesisID Genesis ID (required). System.String genesishashb64 Genesis hash (required). System.Nullable < System.UInt64 > lastRound LastRound indicates the last round seen (required). System.Nullable < System.UInt64 > minFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol.. Properties | Improve this Doc View Source ConsensusVersion ConsensusVersion indicates the consensus protocol version as of LastRound. Declaration [DataMember(Name = \"consensusVersion\", EmitDefaultValue = false)] public string ConsensusVersion { get; set; } Property Value Type Description System.String ConsensusVersion indicates the consensus protocol version as of LastRound. | Improve this Doc View Source Fee Fee is the suggested transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration [DataMember(Name = \"fee\", EmitDefaultValue = false)] public ulong? Fee { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Fee is the suggested transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. | Improve this Doc View Source Genesishashb64 Genesis hash Declaration [DataMember(Name = \"genesishashb64\", EmitDefaultValue = false)] public string Genesishashb64 { get; set; } Property Value Type Description System.String Genesis hash | Improve this Doc View Source GenesisID Genesis ID Declaration [DataMember(Name = \"genesisID\", EmitDefaultValue = false)] public string GenesisID { get; set; } Property Value Type Description System.String Genesis ID | Improve this Doc View Source LastRound LastRound indicates the last round seen Declaration [DataMember(Name = \"lastRound\", EmitDefaultValue = false)] public ulong? LastRound { get; set; } Property Value Type Description System.Nullable < System.UInt64 > LastRound indicates the last round seen | Improve this Doc View Source MinFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Declaration [DataMember(Name = \"minFee\", EmitDefaultValue = false)] public ulong? MinFee { get; set; } Property Value Type Description System.Nullable < System.UInt64 > The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Methods | Improve this Doc View Source Equals(TransactionParams) Returns true if TransactionParams instances are equal Declaration public bool Equals(TransactionParams input) Parameters Type Name Description TransactionParams input Instance of TransactionParams to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.TransactionResults.html": {
    "href": "api/Algorand.Algod.Model.TransactionResults.html",
    "title": "Class TransactionResults | Dotnet Algorand Documents",
    "keywords": "Class TransactionResults TransactionResults contains information about the side effects of a transaction Inheritance System.Object TransactionResults Implements System.IEquatable < TransactionResults > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionResults : IEquatable<TransactionResults>, IValidatableObject Constructors | Improve this Doc View Source TransactionResults(Nullable<UInt64>) Initializes a new instance of the TransactionResults class. Declaration public TransactionResults(ulong? createdasset = default(ulong? )) Parameters Type Name Description System.Nullable < System.UInt64 > createdasset CreatedAssetIndex indicates the asset index of an asset created by this txn. Properties | Improve this Doc View Source Createdasset CreatedAssetIndex indicates the asset index of an asset created by this txn Declaration [DataMember(Name = \"createdasset\", EmitDefaultValue = false)] public ulong? Createdasset { get; set; } Property Value Type Description System.Nullable < System.UInt64 > CreatedAssetIndex indicates the asset index of an asset created by this txn Methods | Improve this Doc View Source Equals(TransactionResults) Returns true if TransactionResults instances are equal Declaration public bool Equals(TransactionResults input) Parameters Type Name Description TransactionResults input Instance of TransactionResults to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Algod.Model.Version.html": {
    "href": "api/Algorand.Algod.Model.Version.html",
    "title": "Class Version | Dotnet Algorand Documents",
    "keywords": "Class Version Note that we annotate this as a model so that legacy clients can directly import a swagger generated Version model. Inheritance System.Object Version Implements System.IEquatable < Version > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Algod.Model Assembly : Algorand.dll Syntax [DataContract] public class Version : IEquatable<Version>, IValidatableObject Constructors | Improve this Doc View Source Version(BuildVersion, String, String, List<String>) Initializes a new instance of the Version class. Declaration public Version(BuildVersion build = null, string genesisHashB64 = null, string genesisId = null, List<string> versions = null) Parameters Type Name Description BuildVersion build build (required). System.String genesisHashB64 genesisHashB64 (required). System.String genesisId genesisId (required). System.Collections.Generic.List < System.String > versions versions (required). Properties | Improve this Doc View Source Build Gets or Sets Build Declaration [DataMember(Name = \"build\", EmitDefaultValue = false)] public BuildVersion Build { get; set; } Property Value Type Description BuildVersion | Improve this Doc View Source GenesisHashB64 Gets or Sets GenesisHashB64 Declaration [DataMember(Name = \"genesis_hash_b64\", EmitDefaultValue = false)] public string GenesisHashB64 { get; set; } Property Value Type Description System.String | Improve this Doc View Source GenesisId Gets or Sets GenesisId Declaration [DataMember(Name = \"genesis_id\", EmitDefaultValue = false)] public string GenesisId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Versions Gets or Sets Versions Declaration [DataMember(Name = \"versions\", EmitDefaultValue = false)] public List<string> Versions { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Methods | Improve this Doc View Source Equals(Version) Returns true if Version instances are equal Declaration public bool Equals(Version input) Parameters Type Name Description Version input Instance of Version to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Bid.html": {
    "href": "api/Algorand.Bid.html",
    "title": "Class Bid | Dotnet Algorand Documents",
    "keywords": "Class Bid A raw serializable Bid class. Inheritance System.Object Bid Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject] public class Bid Constructors | Improve this Doc View Source Bid() Declaration public Bid() | Improve this Doc View Source Bid(Address, Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>) Create a new bid Declaration public Bid(Address bidderKey, Address auctionKey, ulong? bidCurrency, ulong? maxPrice, ulong? bidID, ulong? auctionID) Parameters Type Name Description Address bidderKey Address auctionKey System.Nullable < System.UInt64 > bidCurrency System.Nullable < System.UInt64 > maxPrice System.Nullable < System.UInt64 > bidID System.Nullable < System.UInt64 > auctionID | Improve this Doc View Source Bid(Byte[], Byte[], Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>) Declaration [JsonConstructor] public Bid([JsonProperty(PropertyName = \"bidder\")] byte[] bidderKey, [JsonProperty(PropertyName = \"auc\")] byte[] auctionKey, [JsonProperty(PropertyName = \"cur\")] ulong? bidCurrency, [JsonProperty(PropertyName = \"price\")] ulong? maxPrice, [JsonProperty(PropertyName = \"id\")] ulong? bidID, [JsonProperty(PropertyName = \"aid\")] ulong? auctionID) Parameters Type Name Description System.Byte [] bidderKey System.Byte [] auctionKey System.Nullable < System.UInt64 > bidCurrency System.Nullable < System.UInt64 > maxPrice System.Nullable < System.UInt64 > bidID System.Nullable < System.UInt64 > auctionID Fields | Improve this Doc View Source auctionID Declaration [JsonProperty(PropertyName = \"aid\")] public ulong? auctionID Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source auctionKey Declaration [JsonProperty(PropertyName = \"auc\")] public Address auctionKey Field Value Type Description Address | Improve this Doc View Source bidCurrency Declaration [JsonProperty(PropertyName = \"cur\")] public ulong? bidCurrency Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source bidderKey Declaration [JsonProperty(PropertyName = \"bidder\")] public Address bidderKey Field Value Type Description Address | Improve this Doc View Source bidID Declaration [JsonProperty(PropertyName = \"id\")] public ulong? bidID Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source maxPrice Declaration [JsonProperty(PropertyName = \"price\")] public ulong? maxPrice Field Value Type Description System.Nullable < System.UInt64 > Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/Algorand.ByteConstBlock.html": {
    "href": "api/Algorand.ByteConstBlock.html",
    "title": "Class ByteConstBlock | Dotnet Algorand Documents",
    "keywords": "Class ByteConstBlock Inheritance System.Object ByteConstBlock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class ByteConstBlock Constructors | Improve this Doc View Source ByteConstBlock(Int32, List<Byte[]>) Declaration public ByteConstBlock(int size, List<byte[]> results) Parameters Type Name Description System.Int32 size System.Collections.Generic.List < System.Byte []> results Fields | Improve this Doc View Source results Declaration public List<byte[]> results Field Value Type Description System.Collections.Generic.List < System.Byte []> | Improve this Doc View Source size Declaration public int size Field Value Type Description System.Int32"
  },
  "api/Algorand.Client.ApiClient.html": {
    "href": "api/Algorand.Client.ApiClient.html",
    "title": "Class ApiClient | Dotnet Algorand Documents",
    "keywords": "Class ApiClient API client is mainly responsible for making the HTTP call to the API backend. Inheritance System.Object ApiClient Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Client Assembly : Algorand.dll Syntax public class ApiClient Constructors | Improve this Doc View Source ApiClient() Initializes a new instance of the ApiClient class with default configuration. Declaration public ApiClient() | Improve this Doc View Source ApiClient(Configuration) Initializes a new instance of the ApiClient class with default base path (http://localhost). Declaration public ApiClient(Configuration config) Parameters Type Name Description Configuration config An instance of Configuration. | Improve this Doc View Source ApiClient(String) Initializes a new instance of the ApiClient class with default configuration. Declaration public ApiClient(string basePath = \"http://localhost\") Parameters Type Name Description System.String basePath The base path. Fields | Improve this Doc View Source Default Gets or sets the default API client for making HTTP calls. Declaration [Obsolete(\"ApiClient.Default is deprecated, please use 'Configuration.Default.ApiClient' instead.\")] public static ApiClient Default Field Value Type Description ApiClient The default API client. Properties | Improve this Doc View Source Configuration Gets or sets an instance of the IReadableConfiguration. Declaration public IReadableConfiguration Configuration { get; set; } Property Value Type Description IReadableConfiguration An instance of the IReadableConfiguration. Remarks IReadableConfiguration helps us to avoid modifying possibly global configuration values from within a given client. It does not guarantee thread-safety of the Configuration instance in any way. | Improve this Doc View Source RestClient Gets or sets the RestClient. Declaration public RestClient RestClient { get; set; } Property Value Type Description RestSharp.RestClient An instance of the RestClient Methods | Improve this Doc View Source Base64Encode(String) Encode string in base64 format. Declaration public static string Base64Encode(string text) Parameters Type Name Description System.String text String to be encoded. Returns Type Description System.String Encoded string. | Improve this Doc View Source CallApi(String, Method, List<KeyValuePair<String, String>>, Object, Dictionary<String, String>, Dictionary<String, String>, Dictionary<String, FileParameter>, Dictionary<String, String>, String) Makes the HTTP request (Sync). Declaration public object CallApi(string path, Method method, List<KeyValuePair<string, string>> queryParams, object postBody, Dictionary<string, string> headerParams, Dictionary<string, string> formParams, Dictionary<string, FileParameter> fileParams, Dictionary<string, string> pathParams, string contentType) Parameters Type Name Description System.String path URL path. RestSharp.Method method HTTP method. System.Collections.Generic.List < System.Collections.Generic.KeyValuePair < System.String , System.String >> queryParams Query parameters. System.Object postBody HTTP body (POST request). System.Collections.Generic.Dictionary < System.String , System.String > headerParams Header parameters. System.Collections.Generic.Dictionary < System.String , System.String > formParams Form parameters. System.Collections.Generic.Dictionary < System.String , RestSharp.FileParameter > fileParams File parameters. System.Collections.Generic.Dictionary < System.String , System.String > pathParams Path parameters. System.String contentType Content Type of the request Returns Type Description System.Object Object | Improve this Doc View Source CallApiAsync(String, Method, List<KeyValuePair<String, String>>, Object, Dictionary<String, String>, Dictionary<String, String>, Dictionary<String, FileParameter>, Dictionary<String, String>, String) Makes the asynchronous HTTP request. Declaration public Task<object> CallApiAsync(string path, Method method, List<KeyValuePair<string, string>> queryParams, object postBody, Dictionary<string, string> headerParams, Dictionary<string, string> formParams, Dictionary<string, FileParameter> fileParams, Dictionary<string, string> pathParams, string contentType) Parameters Type Name Description System.String path URL path. RestSharp.Method method HTTP method. System.Collections.Generic.List < System.Collections.Generic.KeyValuePair < System.String , System.String >> queryParams Query parameters. System.Object postBody HTTP body (POST request). System.Collections.Generic.Dictionary < System.String , System.String > headerParams Header parameters. System.Collections.Generic.Dictionary < System.String , System.String > formParams Form parameters. System.Collections.Generic.Dictionary < System.String , RestSharp.FileParameter > fileParams File parameters. System.Collections.Generic.Dictionary < System.String , System.String > pathParams Path parameters. System.String contentType Content type. Returns Type Description System.Threading.Tasks.Task < System.Object > The Task instance. | Improve this Doc View Source ConvertType(Object, Type) Dynamically cast the object into target type. Declaration public static dynamic ConvertType(dynamic fromObject, Type toObject) Parameters Type Name Description System.Object fromObject Object to be casted System.Type toObject Target type Returns Type Description System.Object Casted object | Improve this Doc View Source Deserialize(IRestResponse, Type) Deserialize the JSON string into a proper object. Declaration public object Deserialize(IRestResponse response, Type type) Parameters Type Name Description RestSharp.IRestResponse response The HTTP response. System.Type type Object type. Returns Type Description System.Object Object representation of the JSON string. | Improve this Doc View Source EscapeString(String) Escape string (url-encoded). Declaration public string EscapeString(string str) Parameters Type Name Description System.String str String to be escaped. Returns Type Description System.String Escaped string. | Improve this Doc View Source IsJsonMime(String) Check if the given MIME is a JSON MIME. JSON MIME examples: application/json application/json; charset=UTF8 APPLICATION/JSON application/vnd.company+json Declaration public bool IsJsonMime(string mime) Parameters Type Name Description System.String mime MIME Returns Type Description System.Boolean Returns True if MIME type is json. | Improve this Doc View Source ParameterToFile(String, Stream) Create FileParameter based on Stream. Declaration public FileParameter ParameterToFile(string name, Stream stream) Parameters Type Name Description System.String name Parameter name. System.IO.Stream stream Input stream. Returns Type Description RestSharp.FileParameter FileParameter. | Improve this Doc View Source ParameterToKeyValuePairs(String, String, Object) Convert params to key/value pairs. Use collectionFormat to properly format lists and collections. Declaration public IEnumerable<KeyValuePair<string, string>> ParameterToKeyValuePairs(string collectionFormat, string name, object value) Parameters Type Name Description System.String collectionFormat System.String name Key name. System.Object value Value object. Returns Type Description System.Collections.Generic.IEnumerable < System.Collections.Generic.KeyValuePair < System.String , System.String >> A list of KeyValuePairs | Improve this Doc View Source ParameterToString(Object) If parameter is DateTime, output in a formatted string (default ISO 8601), customizable with Configuration.DateTime. If parameter is a list, join the list with \",\". Otherwise just return the string. Declaration public string ParameterToString(object obj) Parameters Type Name Description System.Object obj The parameter (header, path, query, form). Returns Type Description System.String Formatted string. | Improve this Doc View Source ReadAsBytes(Stream) Convert stream to byte array Declaration public static byte[] ReadAsBytes(Stream inputStream) Parameters Type Name Description System.IO.Stream inputStream Input stream to be converted Returns Type Description System.Byte [] Byte array | Improve this Doc View Source SanitizeFilename(String) Sanitize filename by removing the path Declaration public static string SanitizeFilename(string filename) Parameters Type Name Description System.String filename Filename Returns Type Description System.String Filename | Improve this Doc View Source SelectHeaderAccept(String[]) Select the Accept header's value from the given accepts array: if JSON exists in the given array, use it; otherwise use all of them (joining into a string) Declaration public string SelectHeaderAccept(string[] accepts) Parameters Type Name Description System.String [] accepts The accepts array to select from. Returns Type Description System.String The Accept header to use. | Improve this Doc View Source SelectHeaderContentType(String[]) Select the Content-Type header's value from the given content-type array: if JSON type exists in the given array, use it; otherwise use the first one defined in 'consumes' Declaration public string SelectHeaderContentType(string[] contentTypes) Parameters Type Name Description System.String [] contentTypes The Content-Type array to select from. Returns Type Description System.String The Content-Type header to use. | Improve this Doc View Source Serialize(Object) Serialize an input (model) into JSON string Declaration public string Serialize(object obj) Parameters Type Name Description System.Object obj Object. Returns Type Description System.String JSON string. | Improve this Doc View Source UrlEncode(String) URL encode a string Credit/Ref: https://github.com/restsharp/RestSharp/blob/master/RestSharp/Extensions/StringExtensions.cs#L50 Declaration public static string UrlEncode(string input) Parameters Type Name Description System.String input String to be URL encoded Returns Type Description System.String Byte array"
  },
  "api/Algorand.Client.ApiException.html": {
    "href": "api/Algorand.Client.ApiException.html",
    "title": "Class ApiException | Dotnet Algorand Documents",
    "keywords": "Class ApiException API Exception Inheritance System.Object System.Exception ApiException Implements System.Runtime.Serialization.ISerializable Inherited Members System.Exception.GetBaseException() System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext) System.Exception.GetType() System.Exception.ToString() System.Exception.Data System.Exception.HelpLink System.Exception.HResult System.Exception.InnerException System.Exception.Message System.Exception.Source System.Exception.StackTrace System.Exception.TargetSite System.Exception.SerializeObjectState System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Client Assembly : Algorand.dll Syntax public class ApiException : Exception, ISerializable Constructors | Improve this Doc View Source ApiException() Initializes a new instance of the ApiException class. Declaration public ApiException() | Improve this Doc View Source ApiException(Int32, String) Initializes a new instance of the ApiException class. Declaration public ApiException(int errorCode, string message) Parameters Type Name Description System.Int32 errorCode HTTP status code. System.String message Error message. | Improve this Doc View Source ApiException(Int32, String, Object) Initializes a new instance of the ApiException class. Declaration public ApiException(int errorCode, string message, dynamic errorContent = null) Parameters Type Name Description System.Int32 errorCode HTTP status code. System.String message Error message. System.Object errorContent Error content. Properties | Improve this Doc View Source ErrorCode Gets or sets the error code (HTTP status code) Declaration public int ErrorCode { get; set; } Property Value Type Description System.Int32 The error code (HTTP status code). | Improve this Doc View Source ErrorContent Gets or sets the error content (body json object) Declaration public dynamic ErrorContent { get; } Property Value Type Description System.Object The error content (Http response body). Implements System.Runtime.Serialization.ISerializable"
  },
  "api/Algorand.Client.ApiResponse-1.html": {
    "href": "api/Algorand.Client.ApiResponse-1.html",
    "title": "Class ApiResponse<T> | Dotnet Algorand Documents",
    "keywords": "Class ApiResponse<T> API Response Inheritance System.Object ApiResponse<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Client Assembly : Algorand.dll Syntax public class ApiResponse<T> Type Parameters Name Description T Constructors | Improve this Doc View Source ApiResponse(Int32, IDictionary<String, String>, T) Initializes a new instance of the ApiResponse<T> class. Declaration public ApiResponse(int statusCode, IDictionary<string, string> headers, T data) Parameters Type Name Description System.Int32 statusCode HTTP status code. System.Collections.Generic.IDictionary < System.String , System.String > headers HTTP headers. T data Data (parsed HTTP body) Properties | Improve this Doc View Source Data Gets or sets the data (parsed HTTP body) Declaration public T Data { get; } Property Value Type Description T The data. | Improve this Doc View Source Headers Gets or sets the HTTP headers Declaration public IDictionary<string, string> Headers { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > HTTP headers | Improve this Doc View Source StatusCode Gets or sets the status code (HTTP status code) Declaration public int StatusCode { get; } Property Value Type Description System.Int32 The status code."
  },
  "api/Algorand.Client.Configuration.html": {
    "href": "api/Algorand.Client.Configuration.html",
    "title": "Class Configuration | Dotnet Algorand Documents",
    "keywords": "Class Configuration Represents a set of configuration settings Inheritance System.Object Configuration GlobalConfiguration Implements IReadableConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Client Assembly : Algorand.dll Syntax public class Configuration : IReadableConfiguration Constructors | Improve this Doc View Source Configuration() Initializes a new instance of the Configuration class Declaration public Configuration() | Improve this Doc View Source Configuration(ApiClient) Initializes a new instance of the Configuration class. Declaration [Obsolete(\"This constructor caused unexpected sharing of static data. It is no longer supported.\", true)] public Configuration(ApiClient apiClient) Parameters Type Name Description ApiClient apiClient Api client. | Improve this Doc View Source Configuration(ApiClient, IDictionary<String, String>, String, String, String, IDictionary<String, String>, IDictionary<String, String>, String, String, Int32, String) Initializes a new instance of the Configuration class with different settings Declaration [Obsolete(\"Use explicit object construction and setting of properties.\", true)] public Configuration(ApiClient apiClient = null, IDictionary<string, string> defaultHeader = null, string username = null, string password = null, string accessToken = null, IDictionary<string, string> apiKey = null, IDictionary<string, string> apiKeyPrefix = null, string tempFolderPath = null, string dateTimeFormat = null, int timeout = 100000, string userAgent = \"Swagger-Codegen/0.2.0.0/csharp\") Parameters Type Name Description ApiClient apiClient Api client System.Collections.Generic.IDictionary < System.String , System.String > defaultHeader Dictionary of default HTTP header System.String username Username System.String password Password System.String accessToken accessToken System.Collections.Generic.IDictionary < System.String , System.String > apiKey Dictionary of API key System.Collections.Generic.IDictionary < System.String , System.String > apiKeyPrefix Dictionary of API key prefix System.String tempFolderPath Temp folder path System.String dateTimeFormat DateTime format string System.Int32 timeout HTTP connection timeout (in milliseconds) System.String userAgent HTTP user agent | Improve this Doc View Source Configuration(IDictionary<String, String>, IDictionary<String, String>, IDictionary<String, String>, String) Initializes a new instance of the Configuration class Declaration public Configuration(IDictionary<string, string> defaultHeader, IDictionary<string, string> apiKey, IDictionary<string, string> apiKeyPrefix, string basePath = \"http://localhost\") Parameters Type Name Description System.Collections.Generic.IDictionary < System.String , System.String > defaultHeader System.Collections.Generic.IDictionary < System.String , System.String > apiKey System.Collections.Generic.IDictionary < System.String , System.String > apiKeyPrefix System.String basePath Fields | Improve this Doc View Source DefaultExceptionFactory Default creation of exceptions for a given method name and response object Declaration public static readonly ExceptionFactory DefaultExceptionFactory Field Value Type Description ExceptionFactory | Improve this Doc View Source ISO8601_DATETIME_FORMAT Identifier for ISO 8601 DateTime Format Declaration public const string ISO8601_DATETIME_FORMAT = \"o\" Field Value Type Description System.String Remarks See https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx#Anchor_8 for more information. | Improve this Doc View Source Version Version of the package. Declaration public const string Version = \"0.2.0.0\" Field Value Type Description System.String Version of the package. Properties | Improve this Doc View Source AccessToken Gets or sets the access token for OAuth2 authentication. Declaration public virtual string AccessToken { get; set; } Property Value Type Description System.String The access token. | Improve this Doc View Source ApiClient Gets an instance of an ApiClient for this configuration Declaration public virtual ApiClient ApiClient { get; } Property Value Type Description ApiClient | Improve this Doc View Source ApiKey Gets or sets the API key based on the authentication name. Declaration public virtual IDictionary<string, string> ApiKey { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > The API key. | Improve this Doc View Source ApiKeyPrefix Gets or sets the prefix (e.g. Token) of the API key based on the authentication name. Declaration public virtual IDictionary<string, string> ApiKeyPrefix { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > The prefix of the API key. | Improve this Doc View Source BasePath Gets or sets the base path for API access. Declaration public virtual string BasePath { get; set; } Property Value Type Description System.String | Improve this Doc View Source DateTimeFormat Gets or sets the date time format used when serializing in the ApiClient By default, it's set to ISO 8601 - \"o\", for others see: https://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx and https://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx No validation is done to ensure that the string you're providing is valid Declaration public virtual string DateTimeFormat { get; set; } Property Value Type Description System.String The DateTimeFormat string | Improve this Doc View Source Default Gets or sets the default Configuration. Declaration public static Configuration Default { get; set; } Property Value Type Description Configuration Configuration. | Improve this Doc View Source DefaultHeader Gets or sets the default header. Declaration public virtual IDictionary<string, string> DefaultHeader { get; set; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > | Improve this Doc View Source Password Gets or sets the password (HTTP basic authentication). Declaration public virtual string Password { get; set; } Property Value Type Description System.String The password. | Improve this Doc View Source TempFolderPath Gets or sets the temporary folder path to store the files downloaded from the server. Declaration public virtual string TempFolderPath { get; set; } Property Value Type Description System.String Folder path. | Improve this Doc View Source Timeout Gets or sets the HTTP timeout (milliseconds) of ApiClient. Default to 100000 milliseconds. Declaration public virtual int Timeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UserAgent Gets or sets the HTTP user agent. Declaration public virtual string UserAgent { get; set; } Property Value Type Description System.String Http user agent. | Improve this Doc View Source Username Gets or sets the username (HTTP basic authentication). Declaration public virtual string Username { get; set; } Property Value Type Description System.String The username. Methods | Improve this Doc View Source AddApiKey(String, String) Add Api Key Header. Declaration public void AddApiKey(string key, string value) Parameters Type Name Description System.String key Api Key name. System.String value Api Key value. | Improve this Doc View Source AddApiKeyPrefix(String, String) Sets the API key prefix. Declaration public void AddApiKeyPrefix(string key, string value) Parameters Type Name Description System.String key Api Key name. System.String value Api Key value. | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source CreateApiClient() Creates a new ApiClient based on this Configuration instance. Declaration public ApiClient CreateApiClient() Returns Type Description ApiClient | Improve this Doc View Source GetApiKeyWithPrefix(String) Gets the API key with prefix. Declaration public string GetApiKeyWithPrefix(string apiKeyIdentifier) Parameters Type Name Description System.String apiKeyIdentifier API key identifier (authentication scheme). Returns Type Description System.String API key with prefix. | Improve this Doc View Source ToDebugReport() Returns a string with essential information for debugging. Declaration public static string ToDebugReport() Returns Type Description System.String Implements IReadableConfiguration"
  },
  "api/Algorand.Client.ExceptionFactory.html": {
    "href": "api/Algorand.Client.ExceptionFactory.html",
    "title": "Delegate ExceptionFactory | Dotnet Algorand Documents",
    "keywords": "Delegate ExceptionFactory A delegate to ExceptionFactory method Namespace : Algorand.Client Assembly : Algorand.dll Syntax public delegate Exception ExceptionFactory(string methodName, IRestResponse response); Parameters Type Name Description System.String methodName Method name RestSharp.IRestResponse response Response Returns Type Description System.Exception Exceptions"
  },
  "api/Algorand.Client.GlobalConfiguration.html": {
    "href": "api/Algorand.Client.GlobalConfiguration.html",
    "title": "Class GlobalConfiguration | Dotnet Algorand Documents",
    "keywords": "Class GlobalConfiguration GlobalConfiguration provides a compile-time extension point for globally configuring API Clients. Inheritance System.Object Configuration GlobalConfiguration Implements IReadableConfiguration Inherited Members Configuration.Version Configuration.ISO8601_DATETIME_FORMAT Configuration.DefaultExceptionFactory Configuration.Default Configuration.ApiClient Configuration.BasePath Configuration.DefaultHeader Configuration.Timeout Configuration.UserAgent Configuration.Username Configuration.Password Configuration.GetApiKeyWithPrefix(String) Configuration.AccessToken Configuration.TempFolderPath Configuration.DateTimeFormat Configuration.ApiKeyPrefix Configuration.ApiKey Configuration.AddDefaultHeader(String, String) Configuration.CreateApiClient() Configuration.ToDebugReport() Configuration.AddApiKey(String, String) Configuration.AddApiKeyPrefix(String, String) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Client Assembly : Algorand.dll Syntax public class GlobalConfiguration : Configuration, IReadableConfiguration Remarks A customized implementation via partial class may reside in another file and may be excluded from automatic generation via a .swagger-codegen-ignore file. Implements IReadableConfiguration"
  },
  "api/Algorand.Client.html": {
    "href": "api/Algorand.Client.html",
    "title": "Namespace Algorand.Client | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.Client Classes ApiClient API client is mainly responsible for making the HTTP call to the API backend. ApiException API Exception ApiResponse<T> API Response Configuration Represents a set of configuration settings GlobalConfiguration GlobalConfiguration provides a compile-time extension point for globally configuring API Clients. SwaggerDateConverter Formatter for 'date' swagger formats ss defined by full-date - RFC3339 see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types Interfaces IApiAccessor Represents configuration aspects required to interact with the API endpoints. IReadableConfiguration Represents a readable-only configuration contract. Delegates ExceptionFactory A delegate to ExceptionFactory method"
  },
  "api/Algorand.Client.IApiAccessor.html": {
    "href": "api/Algorand.Client.IApiAccessor.html",
    "title": "Interface IApiAccessor | Dotnet Algorand Documents",
    "keywords": "Interface IApiAccessor Represents configuration aspects required to interact with the API endpoints. Namespace : Algorand.Client Assembly : Algorand.dll Syntax public interface IApiAccessor Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration string GetBasePath() Returns Type Description System.String The base path"
  },
  "api/Algorand.Client.IReadableConfiguration.html": {
    "href": "api/Algorand.Client.IReadableConfiguration.html",
    "title": "Interface IReadableConfiguration | Dotnet Algorand Documents",
    "keywords": "Interface IReadableConfiguration Represents a readable-only configuration contract. Namespace : Algorand.Client Assembly : Algorand.dll Syntax public interface IReadableConfiguration Properties | Improve this Doc View Source AccessToken Gets the access token. Declaration string AccessToken { get; } Property Value Type Description System.String Access token. | Improve this Doc View Source ApiKey Gets the API key. Declaration IDictionary<string, string> ApiKey { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > API key. | Improve this Doc View Source ApiKeyPrefix Gets the API key prefix. Declaration IDictionary<string, string> ApiKeyPrefix { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > API key prefix. | Improve this Doc View Source BasePath Gets the base path. Declaration string BasePath { get; } Property Value Type Description System.String Base path. | Improve this Doc View Source DateTimeFormat Gets the date time format. Declaration string DateTimeFormat { get; } Property Value Type Description System.String Date time foramt. | Improve this Doc View Source DefaultHeader Gets the default header. Declaration IDictionary<string, string> DefaultHeader { get; } Property Value Type Description System.Collections.Generic.IDictionary < System.String , System.String > Default header. | Improve this Doc View Source Password Gets the password. Declaration string Password { get; } Property Value Type Description System.String Password. | Improve this Doc View Source TempFolderPath Gets the temp folder path. Declaration string TempFolderPath { get; } Property Value Type Description System.String Temp folder path. | Improve this Doc View Source Timeout Gets the HTTP connection timeout (in milliseconds) Declaration int Timeout { get; } Property Value Type Description System.Int32 HTTP connection timeout. | Improve this Doc View Source UserAgent Gets the user agent. Declaration string UserAgent { get; } Property Value Type Description System.String User agent. | Improve this Doc View Source Username Gets the username. Declaration string Username { get; } Property Value Type Description System.String Username. Methods | Improve this Doc View Source GetApiKeyWithPrefix(String) Gets the API key with prefix. Declaration string GetApiKeyWithPrefix(string apiKeyIdentifier) Parameters Type Name Description System.String apiKeyIdentifier API key identifier (authentication scheme). Returns Type Description System.String API key with prefix."
  },
  "api/Algorand.Client.SwaggerDateConverter.html": {
    "href": "api/Algorand.Client.SwaggerDateConverter.html",
    "title": "Class SwaggerDateConverter | Dotnet Algorand Documents",
    "keywords": "Class SwaggerDateConverter Formatter for 'date' swagger formats ss defined by full-date - RFC3339 see https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types Inheritance System.Object Newtonsoft.Json.JsonConverter Newtonsoft.Json.Converters.DateTimeConverterBase Newtonsoft.Json.Converters.IsoDateTimeConverter SwaggerDateConverter Inherited Members Newtonsoft.Json.Converters.IsoDateTimeConverter.WriteJson(Newtonsoft.Json.JsonWriter, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.Converters.IsoDateTimeConverter.ReadJson(Newtonsoft.Json.JsonReader, System.Type, System.Object, Newtonsoft.Json.JsonSerializer) Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeStyles Newtonsoft.Json.Converters.IsoDateTimeConverter.DateTimeFormat Newtonsoft.Json.Converters.IsoDateTimeConverter.Culture Newtonsoft.Json.Converters.DateTimeConverterBase.CanConvert(System.Type) Newtonsoft.Json.JsonConverter.CanRead Newtonsoft.Json.JsonConverter.CanWrite System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Client Assembly : Algorand.dll Syntax public class SwaggerDateConverter : IsoDateTimeConverter Constructors | Improve this Doc View Source SwaggerDateConverter() Initializes a new instance of the SwaggerDateConverter class. Declaration public SwaggerDateConverter()"
  },
  "api/Algorand.Digest.html": {
    "href": "api/Algorand.Digest.html",
    "title": "Class Digest | Dotnet Algorand Documents",
    "keywords": "Class Digest A serializable class representing a SHA512-256 Digest Inheritance System.Object Digest Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand Assembly : Algorand.dll Syntax [JsonConverter(typeof(BytesConverter))] public class Digest Constructors | Improve this Doc View Source Digest() default values for serializer to ignore Declaration public Digest() | Improve this Doc View Source Digest(Byte[]) Create a new digest. Declaration [JsonConstructor] public Digest(byte[] bytes) Parameters Type Name Description System.Byte [] bytes a length 32 byte array | Improve this Doc View Source Digest(String) Create a new digest from a base64 encoded string. Declaration public Digest(string base64String) Parameters Type Name Description System.String base64String base64 encoded string Properties | Improve this Doc View Source Bytes Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte [] Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/Algorand.Encoder.html": {
    "href": "api/Algorand.Encoder.html",
    "title": "Class Encoder | Dotnet Algorand Documents",
    "keywords": "Class Encoder Convenience method for serializing and deserializing arbitrary objects to json or msgpack. Inheritance System.Object Encoder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class Encoder Methods | Improve this Doc View Source DecodeFromJson<T>(String) Decode a json string to an object. Declaration public static T DecodeFromJson<T>(string json) Parameters Type Name Description System.String json json string Returns Type Description T object Type Parameters Name Description T object type | Improve this Doc View Source DecodeFromMsgPack<T>(Byte[]) Convenience method for deserializing arbitrary objects encoded with canonical msg-pack Declaration public static T DecodeFromMsgPack<T>(byte[] input) Parameters Type Name Description System.Byte [] input input byte array representing canonical msg-pack encoding Returns Type Description T deserialized object Type Parameters Name Description T object type | Improve this Doc View Source EncodeToHexStr(Byte[]) Convenience method for writing bytes as hex. Declaration public static string EncodeToHexStr(byte[] bytes) Parameters Type Name Description System.Byte [] bytes bytes input to encodeToMsgPack as hex string Returns Type Description System.String encoded hex string | Improve this Doc View Source EncodeToJson(Object) Encode an object as json. Declaration public static string EncodeToJson(object o) Parameters Type Name Description System.Object o object to encode Returns Type Description System.String json string | Improve this Doc View Source EncodeToMsgPack(Object) Convenience method for serializing arbitrary objects. Declaration public static byte[] EncodeToMsgPack(object o) Parameters Type Name Description System.Object o the object to serializing Returns Type Description System.Byte [] serialized object"
  },
  "api/Algorand.html": {
    "href": "api/Algorand.html",
    "title": "Namespace Algorand | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand Classes Account Create and manage secrets, and perform account-based work such as signing transactions. Address Address represents a serializable 32-byte length Algorand address. Bid A raw serializable Bid class. ByteConstBlock Digest A serializable class representing a SHA512-256 Digest Encoder Convenience method for serializing and deserializing arbitrary objects to json or msgpack. IntConstBlock Logic Logic class provides static checkProgram function that can be used for client-side program validation for size and execution cost. LogicsigSignature Serializable logicsig class. LogicsigSignature is constructed from a program and optional arguments. Signature sig and MultisigSignature msig property are available for modification by it's clients. Mnemonic Provides an easy way to create mnemonics from 32-byte length keys. MultisigAddress MultisigAddress is a convenience class for handling multisignature public identities. MultisigSignature Serializable raw multisig class. MultisigSubsig Serializable multisig sub-signature ParticipationPublicKey A serializable class representing a participation key. ProgramData Metadata related to a teal program. Signature A raw serializable signature class. SignedBid A serializable raw signed bid class. SignedTransaction A serializable convenience type for packaging transactions with their signatures. TEALProgram TEALProgram Transaction A raw serializable transaction class, used to generate transactions to broadcast to the network. This is distinct from algod.model.Transaction, which is only returned for GET requests to algod. Transaction.AssetParams Asset Params Transaction.Type TxType represents a transaction type. TxGroup TxGroup exports computeGroupID and assignGroupID functions Utils Convenience methods for algorand sdk. VarintResult VRFPublicKey Wordlist mnemonic word list"
  },
  "api/Algorand.IntConstBlock.html": {
    "href": "api/Algorand.IntConstBlock.html",
    "title": "Class IntConstBlock | Dotnet Algorand Documents",
    "keywords": "Class IntConstBlock Inheritance System.Object IntConstBlock Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class IntConstBlock Constructors | Improve this Doc View Source IntConstBlock(Int32, List<Int32>) Declaration public IntConstBlock(int size, List<int> results) Parameters Type Name Description System.Int32 size System.Collections.Generic.List < System.Int32 > results Fields | Improve this Doc View Source results Declaration public List<int> results Field Value Type Description System.Collections.Generic.List < System.Int32 > | Improve this Doc View Source size Declaration public int size Field Value Type Description System.Int32"
  },
  "api/Algorand.Kmd.Api.DefaultApi.html": {
    "href": "api/Algorand.Kmd.Api.DefaultApi.html",
    "title": "Class DefaultApi | Dotnet Algorand Documents",
    "keywords": "Class DefaultApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object DefaultApi KmdApi Implements IDefaultApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Kmd.Api Assembly : Algorand.dll Syntax public class DefaultApi : IDefaultApi, IApiAccessor Constructors | Improve this Doc View Source DefaultApi() Initializes a new instance of the DefaultApi class Declaration public DefaultApi() | Improve this Doc View Source DefaultApi(Configuration) Initializes a new instance of the DefaultApi class using Configuration object Declaration public DefaultApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source DefaultApi(String) Initializes a new instance of the DefaultApi class. Declaration public DefaultApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source CreateWallet(CreateWalletRequest) Create a wallet Create a new wallet (collection of keys) with the given parameters. Declaration public APIV1POSTWalletResponse CreateWallet(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description APIV1POSTWalletResponse APIV1POSTWalletResponse | Improve this Doc View Source CreateWalletAsync(CreateWalletRequest) Create a wallet Create a new wallet (collection of keys) with the given parameters. Declaration public Task<APIV1POSTWalletResponse> CreateWalletAsync(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletResponse > Task of APIV1POSTWalletResponse | Improve this Doc View Source CreateWalletAsyncWithHttpInfo(CreateWalletRequest) Create a wallet Create a new wallet (collection of keys) with the given parameters. Declaration public Task<ApiResponse<APIV1POSTWalletResponse>> CreateWalletAsyncWithHttpInfo(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletResponse >> Task of ApiResponse (APIV1POSTWalletResponse) | Improve this Doc View Source CreateWalletWithHttpInfo(CreateWalletRequest) Create a wallet Create a new wallet (collection of keys) with the given parameters. Declaration public ApiResponse<APIV1POSTWalletResponse> CreateWalletWithHttpInfo(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description ApiResponse < APIV1POSTWalletResponse > ApiResponse of APIV1POSTWalletResponse | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source DeleteKey(DeleteKeyRequest) Delete a key Deletes the key with the passed public key from the wallet. Declaration public APIV1DELETEKeyResponse DeleteKey(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description APIV1DELETEKeyResponse APIV1DELETEKeyResponse | Improve this Doc View Source DeleteKeyAsync(DeleteKeyRequest) Delete a key Deletes the key with the passed public key from the wallet. Declaration public Task<APIV1DELETEKeyResponse> DeleteKeyAsync(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1DELETEKeyResponse > Task of APIV1DELETEKeyResponse | Improve this Doc View Source DeleteKeyAsyncWithHttpInfo(DeleteKeyRequest) Delete a key Deletes the key with the passed public key from the wallet. Declaration public Task<ApiResponse<APIV1DELETEKeyResponse>> DeleteKeyAsyncWithHttpInfo(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1DELETEKeyResponse >> Task of ApiResponse (APIV1DELETEKeyResponse) | Improve this Doc View Source DeleteKeyWithHttpInfo(DeleteKeyRequest) Delete a key Deletes the key with the passed public key from the wallet. Declaration public ApiResponse<APIV1DELETEKeyResponse> DeleteKeyWithHttpInfo(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description ApiResponse < APIV1DELETEKeyResponse > ApiResponse of APIV1DELETEKeyResponse | Improve this Doc View Source DeleteMultisig(DeleteMultisigRequest) Delete a multisig Deletes multisig preimage information for the passed address from the wallet. Declaration public APIV1POSTMultisigDeleteResponse DeleteMultisig(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description APIV1POSTMultisigDeleteResponse APIV1POSTMultisigDeleteResponse | Improve this Doc View Source DeleteMultisigAsync(DeleteMultisigRequest) Delete a multisig Deletes multisig preimage information for the passed address from the wallet. Declaration public Task<APIV1POSTMultisigDeleteResponse> DeleteMultisigAsync(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigDeleteResponse > Task of APIV1POSTMultisigDeleteResponse | Improve this Doc View Source DeleteMultisigAsyncWithHttpInfo(DeleteMultisigRequest) Delete a multisig Deletes multisig preimage information for the passed address from the wallet. Declaration public Task<ApiResponse<APIV1POSTMultisigDeleteResponse>> DeleteMultisigAsyncWithHttpInfo(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigDeleteResponse >> Task of ApiResponse (APIV1POSTMultisigDeleteResponse) | Improve this Doc View Source DeleteMultisigWithHttpInfo(DeleteMultisigRequest) Delete a multisig Deletes multisig preimage information for the passed address from the wallet. Declaration public ApiResponse<APIV1POSTMultisigDeleteResponse> DeleteMultisigWithHttpInfo(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigDeleteResponse > ApiResponse of APIV1POSTMultisigDeleteResponse | Improve this Doc View Source ExportKey(ExportKeyRequest) Export a key Export the secret key associated with the passed public key. Declaration public APIV1POSTKeyExportResponse ExportKey(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description APIV1POSTKeyExportResponse APIV1POSTKeyExportResponse | Improve this Doc View Source ExportKeyAsync(ExportKeyRequest) Export a key Export the secret key associated with the passed public key. Declaration public Task<APIV1POSTKeyExportResponse> ExportKeyAsync(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeyExportResponse > Task of APIV1POSTKeyExportResponse | Improve this Doc View Source ExportKeyAsyncWithHttpInfo(ExportKeyRequest) Export a key Export the secret key associated with the passed public key. Declaration public Task<ApiResponse<APIV1POSTKeyExportResponse>> ExportKeyAsyncWithHttpInfo(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeyExportResponse >> Task of ApiResponse (APIV1POSTKeyExportResponse) | Improve this Doc View Source ExportKeyWithHttpInfo(ExportKeyRequest) Export a key Export the secret key associated with the passed public key. Declaration public ApiResponse<APIV1POSTKeyExportResponse> ExportKeyWithHttpInfo(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description ApiResponse < APIV1POSTKeyExportResponse > ApiResponse of APIV1POSTKeyExportResponse | Improve this Doc View Source ExportMasterKey(ExportMasterKeyRequest) Export the master derivation key from a wallet Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration public APIV1POSTMasterKeyExportResponse ExportMasterKey(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description APIV1POSTMasterKeyExportResponse APIV1POSTMasterKeyExportResponse | Improve this Doc View Source ExportMasterKeyAsync(ExportMasterKeyRequest) Export the master derivation key from a wallet Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration public Task<APIV1POSTMasterKeyExportResponse> ExportMasterKeyAsync(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMasterKeyExportResponse > Task of APIV1POSTMasterKeyExportResponse | Improve this Doc View Source ExportMasterKeyAsyncWithHttpInfo(ExportMasterKeyRequest) Export the master derivation key from a wallet Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration public Task<ApiResponse<APIV1POSTMasterKeyExportResponse>> ExportMasterKeyAsyncWithHttpInfo(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMasterKeyExportResponse >> Task of ApiResponse (APIV1POSTMasterKeyExportResponse) | Improve this Doc View Source ExportMasterKeyWithHttpInfo(ExportMasterKeyRequest) Export the master derivation key from a wallet Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. Declaration public ApiResponse<APIV1POSTMasterKeyExportResponse> ExportMasterKeyWithHttpInfo(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description ApiResponse < APIV1POSTMasterKeyExportResponse > ApiResponse of APIV1POSTMasterKeyExportResponse | Improve this Doc View Source ExportMultisig(ExportMultisigRequest) Export multisig address metadata Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration public APIV1POSTMultisigExportResponse ExportMultisig(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description APIV1POSTMultisigExportResponse APIV1POSTMultisigExportResponse | Improve this Doc View Source ExportMultisigAsync(ExportMultisigRequest) Export multisig address metadata Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration public Task<APIV1POSTMultisigExportResponse> ExportMultisigAsync(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigExportResponse > Task of APIV1POSTMultisigExportResponse | Improve this Doc View Source ExportMultisigAsyncWithHttpInfo(ExportMultisigRequest) Export multisig address metadata Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration public Task<ApiResponse<APIV1POSTMultisigExportResponse>> ExportMultisigAsyncWithHttpInfo(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigExportResponse >> Task of ApiResponse (APIV1POSTMultisigExportResponse) | Improve this Doc View Source ExportMultisigWithHttpInfo(ExportMultisigRequest) Export multisig address metadata Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. Declaration public ApiResponse<APIV1POSTMultisigExportResponse> ExportMultisigWithHttpInfo(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigExportResponse > ApiResponse of APIV1POSTMultisigExportResponse | Improve this Doc View Source GenerateKey(GenerateKeyRequest) Generate a key Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration public APIV1POSTKeyResponse GenerateKey(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description APIV1POSTKeyResponse APIV1POSTKeyResponse | Improve this Doc View Source GenerateKeyAsync(GenerateKeyRequest) Generate a key Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration public Task<APIV1POSTKeyResponse> GenerateKeyAsync(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeyResponse > Task of APIV1POSTKeyResponse | Improve this Doc View Source GenerateKeyAsyncWithHttpInfo(GenerateKeyRequest) Generate a key Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration public Task<ApiResponse<APIV1POSTKeyResponse>> GenerateKeyAsyncWithHttpInfo(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeyResponse >> Task of ApiResponse (APIV1POSTKeyResponse) | Improve this Doc View Source GenerateKeyWithHttpInfo(GenerateKeyRequest) Generate a key Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. Declaration public ApiResponse<APIV1POSTKeyResponse> GenerateKeyWithHttpInfo(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description ApiResponse < APIV1POSTKeyResponse > ApiResponse of APIV1POSTKeyResponse | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source GetWalletInfo(WalletInfoRequest) Get wallet info Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. Declaration public APIV1POSTWalletInfoResponse GetWalletInfo(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description APIV1POSTWalletInfoResponse APIV1POSTWalletInfoResponse | Improve this Doc View Source GetWalletInfoAsync(WalletInfoRequest) Get wallet info Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. Declaration public Task<APIV1POSTWalletInfoResponse> GetWalletInfoAsync(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletInfoResponse > Task of APIV1POSTWalletInfoResponse | Improve this Doc View Source GetWalletInfoAsyncWithHttpInfo(WalletInfoRequest) Get wallet info Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. Declaration public Task<ApiResponse<APIV1POSTWalletInfoResponse>> GetWalletInfoAsyncWithHttpInfo(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletInfoResponse >> Task of ApiResponse (APIV1POSTWalletInfoResponse) | Improve this Doc View Source GetWalletInfoWithHttpInfo(WalletInfoRequest) Get wallet info Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. Declaration public ApiResponse<APIV1POSTWalletInfoResponse> GetWalletInfoWithHttpInfo(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description ApiResponse < APIV1POSTWalletInfoResponse > ApiResponse of APIV1POSTWalletInfoResponse | Improve this Doc View Source ImportKey(ImportKeyRequest) Import a key Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration public APIV1POSTKeyImportResponse ImportKey(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description APIV1POSTKeyImportResponse APIV1POSTKeyImportResponse | Improve this Doc View Source ImportKeyAsync(ImportKeyRequest) Import a key Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration public Task<APIV1POSTKeyImportResponse> ImportKeyAsync(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeyImportResponse > Task of APIV1POSTKeyImportResponse | Improve this Doc View Source ImportKeyAsyncWithHttpInfo(ImportKeyRequest) Import a key Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration public Task<ApiResponse<APIV1POSTKeyImportResponse>> ImportKeyAsyncWithHttpInfo(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeyImportResponse >> Task of ApiResponse (APIV1POSTKeyImportResponse) | Improve this Doc View Source ImportKeyWithHttpInfo(ImportKeyRequest) Import a key Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. Declaration public ApiResponse<APIV1POSTKeyImportResponse> ImportKeyWithHttpInfo(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description ApiResponse < APIV1POSTKeyImportResponse > ApiResponse of APIV1POSTKeyImportResponse | Improve this Doc View Source ImportMultisig(ImportMultisigRequest) Import a multisig account Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration public APIV1POSTMultisigImportResponse ImportMultisig(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description APIV1POSTMultisigImportResponse APIV1POSTMultisigImportResponse | Improve this Doc View Source ImportMultisigAsync(ImportMultisigRequest) Import a multisig account Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration public Task<APIV1POSTMultisigImportResponse> ImportMultisigAsync(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigImportResponse > Task of APIV1POSTMultisigImportResponse | Improve this Doc View Source ImportMultisigAsyncWithHttpInfo(ImportMultisigRequest) Import a multisig account Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration public Task<ApiResponse<APIV1POSTMultisigImportResponse>> ImportMultisigAsyncWithHttpInfo(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigImportResponse >> Task of ApiResponse (APIV1POSTMultisigImportResponse) | Improve this Doc View Source ImportMultisigWithHttpInfo(ImportMultisigRequest) Import a multisig account Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. Declaration public ApiResponse<APIV1POSTMultisigImportResponse> ImportMultisigWithHttpInfo(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigImportResponse > ApiResponse of APIV1POSTMultisigImportResponse | Improve this Doc View Source InitWalletHandleToken(InitWalletHandleTokenRequest) Initialize a wallet handle token Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . Declaration public APIV1POSTWalletInitResponse InitWalletHandleToken(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description APIV1POSTWalletInitResponse APIV1POSTWalletInitResponse | Improve this Doc View Source InitWalletHandleTokenAsync(InitWalletHandleTokenRequest) Initialize a wallet handle token Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . Declaration public Task<APIV1POSTWalletInitResponse> InitWalletHandleTokenAsync(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletInitResponse > Task of APIV1POSTWalletInitResponse | Improve this Doc View Source InitWalletHandleTokenAsyncWithHttpInfo(InitWalletHandleTokenRequest) Initialize a wallet handle token Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . Declaration public Task<ApiResponse<APIV1POSTWalletInitResponse>> InitWalletHandleTokenAsyncWithHttpInfo(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletInitResponse >> Task of ApiResponse (APIV1POSTWalletInitResponse) | Improve this Doc View Source InitWalletHandleTokenWithHttpInfo(InitWalletHandleTokenRequest) Initialize a wallet handle token Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . Declaration public ApiResponse<APIV1POSTWalletInitResponse> InitWalletHandleTokenWithHttpInfo(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description ApiResponse < APIV1POSTWalletInitResponse > ApiResponse of APIV1POSTWalletInitResponse | Improve this Doc View Source ListKeysInWallet(ListKeysRequest) List keys in wallet Lists all of the public keys in this wallet. All of them have a stored private key. Declaration public APIV1POSTKeysListResponse ListKeysInWallet(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description APIV1POSTKeysListResponse APIV1POSTKeysListResponse | Improve this Doc View Source ListKeysInWalletAsync(ListKeysRequest) List keys in wallet Lists all of the public keys in this wallet. All of them have a stored private key. Declaration public Task<APIV1POSTKeysListResponse> ListKeysInWalletAsync(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeysListResponse > Task of APIV1POSTKeysListResponse | Improve this Doc View Source ListKeysInWalletAsyncWithHttpInfo(ListKeysRequest) List keys in wallet Lists all of the public keys in this wallet. All of them have a stored private key. Declaration public Task<ApiResponse<APIV1POSTKeysListResponse>> ListKeysInWalletAsyncWithHttpInfo(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeysListResponse >> Task of ApiResponse (APIV1POSTKeysListResponse) | Improve this Doc View Source ListKeysInWalletWithHttpInfo(ListKeysRequest) List keys in wallet Lists all of the public keys in this wallet. All of them have a stored private key. Declaration public ApiResponse<APIV1POSTKeysListResponse> ListKeysInWalletWithHttpInfo(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description ApiResponse < APIV1POSTKeysListResponse > ApiResponse of APIV1POSTKeysListResponse | Improve this Doc View Source ListMultisg(ListMultisigRequest) List multisig accounts Lists all of the multisig accounts whose preimages this wallet stores Declaration public APIV1POSTMultisigListResponse ListMultisg(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description APIV1POSTMultisigListResponse APIV1POSTMultisigListResponse | Improve this Doc View Source ListMultisgAsync(ListMultisigRequest) List multisig accounts Lists all of the multisig accounts whose preimages this wallet stores Declaration public Task<APIV1POSTMultisigListResponse> ListMultisgAsync(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigListResponse > Task of APIV1POSTMultisigListResponse | Improve this Doc View Source ListMultisgAsyncWithHttpInfo(ListMultisigRequest) List multisig accounts Lists all of the multisig accounts whose preimages this wallet stores Declaration public Task<ApiResponse<APIV1POSTMultisigListResponse>> ListMultisgAsyncWithHttpInfo(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigListResponse >> Task of ApiResponse (APIV1POSTMultisigListResponse) | Improve this Doc View Source ListMultisgWithHttpInfo(ListMultisigRequest) List multisig accounts Lists all of the multisig accounts whose preimages this wallet stores Declaration public ApiResponse<APIV1POSTMultisigListResponse> ListMultisgWithHttpInfo(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigListResponse > ApiResponse of APIV1POSTMultisigListResponse | Improve this Doc View Source ListWallets() List wallets Lists all of the wallets that kmd is aware of. Declaration public APIV1GETWalletsResponse ListWallets() Returns Type Description APIV1GETWalletsResponse APIV1GETWalletsResponse | Improve this Doc View Source ListWalletsAsync() List wallets Lists all of the wallets that kmd is aware of. Declaration public Task<APIV1GETWalletsResponse> ListWalletsAsync() Returns Type Description System.Threading.Tasks.Task < APIV1GETWalletsResponse > Task of APIV1GETWalletsResponse | Improve this Doc View Source ListWalletsAsyncWithHttpInfo() List wallets Lists all of the wallets that kmd is aware of. Declaration public Task<ApiResponse<APIV1GETWalletsResponse>> ListWalletsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1GETWalletsResponse >> Task of ApiResponse (APIV1GETWalletsResponse) | Improve this Doc View Source ListWalletsWithHttpInfo() List wallets Lists all of the wallets that kmd is aware of. Declaration public ApiResponse<APIV1GETWalletsResponse> ListWalletsWithHttpInfo() Returns Type Description ApiResponse < APIV1GETWalletsResponse > ApiResponse of APIV1GETWalletsResponse | Improve this Doc View Source ReleaseWalletHandleToken(ReleaseWalletHandleTokenRequest) Release a wallet handle token Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. Declaration public APIV1POSTWalletReleaseResponse ReleaseWalletHandleToken(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description APIV1POSTWalletReleaseResponse APIV1POSTWalletReleaseResponse | Improve this Doc View Source ReleaseWalletHandleTokenAsync(ReleaseWalletHandleTokenRequest) Release a wallet handle token Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. Declaration public Task<APIV1POSTWalletReleaseResponse> ReleaseWalletHandleTokenAsync(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletReleaseResponse > Task of APIV1POSTWalletReleaseResponse | Improve this Doc View Source ReleaseWalletHandleTokenAsyncWithHttpInfo(ReleaseWalletHandleTokenRequest) Release a wallet handle token Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. Declaration public Task<ApiResponse<APIV1POSTWalletReleaseResponse>> ReleaseWalletHandleTokenAsyncWithHttpInfo(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletReleaseResponse >> Task of ApiResponse (APIV1POSTWalletReleaseResponse) | Improve this Doc View Source ReleaseWalletHandleTokenWithHttpInfo(ReleaseWalletHandleTokenRequest) Release a wallet handle token Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. Declaration public ApiResponse<APIV1POSTWalletReleaseResponse> ReleaseWalletHandleTokenWithHttpInfo(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description ApiResponse < APIV1POSTWalletReleaseResponse > ApiResponse of APIV1POSTWalletReleaseResponse | Improve this Doc View Source RenameWallet(RenameWalletRequest) Rename a wallet Rename the underlying wallet to something else Declaration public APIV1POSTWalletRenameResponse RenameWallet(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description APIV1POSTWalletRenameResponse APIV1POSTWalletRenameResponse | Improve this Doc View Source RenameWalletAsync(RenameWalletRequest) Rename a wallet Rename the underlying wallet to something else Declaration public Task<APIV1POSTWalletRenameResponse> RenameWalletAsync(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletRenameResponse > Task of APIV1POSTWalletRenameResponse | Improve this Doc View Source RenameWalletAsyncWithHttpInfo(RenameWalletRequest) Rename a wallet Rename the underlying wallet to something else Declaration public Task<ApiResponse<APIV1POSTWalletRenameResponse>> RenameWalletAsyncWithHttpInfo(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletRenameResponse >> Task of ApiResponse (APIV1POSTWalletRenameResponse) | Improve this Doc View Source RenameWalletWithHttpInfo(RenameWalletRequest) Rename a wallet Rename the underlying wallet to something else Declaration public ApiResponse<APIV1POSTWalletRenameResponse> RenameWalletWithHttpInfo(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description ApiResponse < APIV1POSTWalletRenameResponse > ApiResponse of APIV1POSTWalletRenameResponse | Improve this Doc View Source RenewWalletHandleToken(RenewWalletHandleTokenRequest) Renew a wallet handle token Renew a wallet handle token, increasing its expiration duration to its initial value Declaration public APIV1POSTWalletRenewResponse RenewWalletHandleToken(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description APIV1POSTWalletRenewResponse APIV1POSTWalletRenewResponse | Improve this Doc View Source RenewWalletHandleTokenAsync(RenewWalletHandleTokenRequest) Renew a wallet handle token Renew a wallet handle token, increasing its expiration duration to its initial value Declaration public Task<APIV1POSTWalletRenewResponse> RenewWalletHandleTokenAsync(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletRenewResponse > Task of APIV1POSTWalletRenewResponse | Improve this Doc View Source RenewWalletHandleTokenAsyncWithHttpInfo(RenewWalletHandleTokenRequest) Renew a wallet handle token Renew a wallet handle token, increasing its expiration duration to its initial value Declaration public Task<ApiResponse<APIV1POSTWalletRenewResponse>> RenewWalletHandleTokenAsyncWithHttpInfo(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletRenewResponse >> Task of ApiResponse (APIV1POSTWalletRenewResponse) | Improve this Doc View Source RenewWalletHandleTokenWithHttpInfo(RenewWalletHandleTokenRequest) Renew a wallet handle token Renew a wallet handle token, increasing its expiration duration to its initial value Declaration public ApiResponse<APIV1POSTWalletRenewResponse> RenewWalletHandleTokenWithHttpInfo(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description ApiResponse < APIV1POSTWalletRenewResponse > ApiResponse of APIV1POSTWalletRenewResponse | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath | Improve this Doc View Source SignMultisigTransaction(SignMultisigRequest) Sign a multisig transaction Start a multisig signature, or add a signature to a partially completed multisig signature object. Declaration public APIV1POSTMultisigTransactionSignResponse SignMultisigTransaction(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description APIV1POSTMultisigTransactionSignResponse APIV1POSTMultisigTransactionSignResponse | Improve this Doc View Source SignMultisigTransactionAsync(SignMultisigRequest) Sign a multisig transaction Start a multisig signature, or add a signature to a partially completed multisig signature object. Declaration public Task<APIV1POSTMultisigTransactionSignResponse> SignMultisigTransactionAsync(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigTransactionSignResponse > Task of APIV1POSTMultisigTransactionSignResponse | Improve this Doc View Source SignMultisigTransactionAsyncWithHttpInfo(SignMultisigRequest) Sign a multisig transaction Start a multisig signature, or add a signature to a partially completed multisig signature object. Declaration public Task<ApiResponse<APIV1POSTMultisigTransactionSignResponse>> SignMultisigTransactionAsyncWithHttpInfo(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigTransactionSignResponse >> Task of ApiResponse (APIV1POSTMultisigTransactionSignResponse) | Improve this Doc View Source SignMultisigTransactionWithHttpInfo(SignMultisigRequest) Sign a multisig transaction Start a multisig signature, or add a signature to a partially completed multisig signature object. Declaration public ApiResponse<APIV1POSTMultisigTransactionSignResponse> SignMultisigTransactionWithHttpInfo(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigTransactionSignResponse > ApiResponse of APIV1POSTMultisigTransactionSignResponse | Improve this Doc View Source SignTransaction(SignTransactionRequest) Sign a transaction Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction. Declaration public APIV1POSTTransactionSignResponse SignTransaction(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description APIV1POSTTransactionSignResponse APIV1POSTTransactionSignResponse | Improve this Doc View Source SignTransactionAsync(SignTransactionRequest) Sign a transaction Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction. Declaration public Task<APIV1POSTTransactionSignResponse> SignTransactionAsync(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTTransactionSignResponse > Task of APIV1POSTTransactionSignResponse | Improve this Doc View Source SignTransactionAsyncWithHttpInfo(SignTransactionRequest) Sign a transaction Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction. Declaration public Task<ApiResponse<APIV1POSTTransactionSignResponse>> SignTransactionAsyncWithHttpInfo(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTTransactionSignResponse >> Task of ApiResponse (APIV1POSTTransactionSignResponse) | Improve this Doc View Source SignTransactionWithHttpInfo(SignTransactionRequest) Sign a transaction Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction. Declaration public ApiResponse<APIV1POSTTransactionSignResponse> SignTransactionWithHttpInfo(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description ApiResponse < APIV1POSTTransactionSignResponse > ApiResponse of APIV1POSTTransactionSignResponse Implements IDefaultApi IApiAccessor"
  },
  "api/Algorand.Kmd.Api.html": {
    "href": "api/Algorand.Kmd.Api.html",
    "title": "Namespace Algorand.Kmd.Api | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.Kmd.Api Classes DefaultApi Represents a collection of functions to interact with the API endpoints KmdApi Interfaces IDefaultApi Represents a collection of functions to interact with the API endpoints"
  },
  "api/Algorand.Kmd.Api.IDefaultApi.html": {
    "href": "api/Algorand.Kmd.Api.IDefaultApi.html",
    "title": "Interface IDefaultApi | Dotnet Algorand Documents",
    "keywords": "Interface IDefaultApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.Kmd.Api Assembly : Algorand.dll Syntax public interface IDefaultApi : IApiAccessor Methods | Improve this Doc View Source CreateWallet(CreateWalletRequest) Create a wallet Declaration APIV1POSTWalletResponse CreateWallet(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description APIV1POSTWalletResponse APIV1POSTWalletResponse Remarks Create a new wallet (collection of keys) with the given parameters. | Improve this Doc View Source CreateWalletAsync(CreateWalletRequest) Create a wallet Declaration Task<APIV1POSTWalletResponse> CreateWalletAsync(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletResponse > Task of APIV1POSTWalletResponse Remarks Create a new wallet (collection of keys) with the given parameters. | Improve this Doc View Source CreateWalletAsyncWithHttpInfo(CreateWalletRequest) Create a wallet Declaration Task<ApiResponse<APIV1POSTWalletResponse>> CreateWalletAsyncWithHttpInfo(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletResponse >> Task of ApiResponse (APIV1POSTWalletResponse) Remarks Create a new wallet (collection of keys) with the given parameters. | Improve this Doc View Source CreateWalletWithHttpInfo(CreateWalletRequest) Create a wallet Declaration ApiResponse<APIV1POSTWalletResponse> CreateWalletWithHttpInfo(CreateWalletRequest body) Parameters Type Name Description CreateWalletRequest body Returns Type Description ApiResponse < APIV1POSTWalletResponse > ApiResponse of APIV1POSTWalletResponse Remarks Create a new wallet (collection of keys) with the given parameters. | Improve this Doc View Source DeleteKey(DeleteKeyRequest) Delete a key Declaration APIV1DELETEKeyResponse DeleteKey(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description APIV1DELETEKeyResponse APIV1DELETEKeyResponse Remarks Deletes the key with the passed public key from the wallet. | Improve this Doc View Source DeleteKeyAsync(DeleteKeyRequest) Delete a key Declaration Task<APIV1DELETEKeyResponse> DeleteKeyAsync(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1DELETEKeyResponse > Task of APIV1DELETEKeyResponse Remarks Deletes the key with the passed public key from the wallet. | Improve this Doc View Source DeleteKeyAsyncWithHttpInfo(DeleteKeyRequest) Delete a key Declaration Task<ApiResponse<APIV1DELETEKeyResponse>> DeleteKeyAsyncWithHttpInfo(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1DELETEKeyResponse >> Task of ApiResponse (APIV1DELETEKeyResponse) Remarks Deletes the key with the passed public key from the wallet. | Improve this Doc View Source DeleteKeyWithHttpInfo(DeleteKeyRequest) Delete a key Declaration ApiResponse<APIV1DELETEKeyResponse> DeleteKeyWithHttpInfo(DeleteKeyRequest body) Parameters Type Name Description DeleteKeyRequest body Returns Type Description ApiResponse < APIV1DELETEKeyResponse > ApiResponse of APIV1DELETEKeyResponse Remarks Deletes the key with the passed public key from the wallet. | Improve this Doc View Source DeleteMultisig(DeleteMultisigRequest) Delete a multisig Declaration APIV1POSTMultisigDeleteResponse DeleteMultisig(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description APIV1POSTMultisigDeleteResponse APIV1POSTMultisigDeleteResponse Remarks Deletes multisig preimage information for the passed address from the wallet. | Improve this Doc View Source DeleteMultisigAsync(DeleteMultisigRequest) Delete a multisig Declaration Task<APIV1POSTMultisigDeleteResponse> DeleteMultisigAsync(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigDeleteResponse > Task of APIV1POSTMultisigDeleteResponse Remarks Deletes multisig preimage information for the passed address from the wallet. | Improve this Doc View Source DeleteMultisigAsyncWithHttpInfo(DeleteMultisigRequest) Delete a multisig Declaration Task<ApiResponse<APIV1POSTMultisigDeleteResponse>> DeleteMultisigAsyncWithHttpInfo(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigDeleteResponse >> Task of ApiResponse (APIV1POSTMultisigDeleteResponse) Remarks Deletes multisig preimage information for the passed address from the wallet. | Improve this Doc View Source DeleteMultisigWithHttpInfo(DeleteMultisigRequest) Delete a multisig Declaration ApiResponse<APIV1POSTMultisigDeleteResponse> DeleteMultisigWithHttpInfo(DeleteMultisigRequest body) Parameters Type Name Description DeleteMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigDeleteResponse > ApiResponse of APIV1POSTMultisigDeleteResponse Remarks Deletes multisig preimage information for the passed address from the wallet. | Improve this Doc View Source ExportKey(ExportKeyRequest) Export a key Declaration APIV1POSTKeyExportResponse ExportKey(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description APIV1POSTKeyExportResponse APIV1POSTKeyExportResponse Remarks Export the secret key associated with the passed public key. | Improve this Doc View Source ExportKeyAsync(ExportKeyRequest) Export a key Declaration Task<APIV1POSTKeyExportResponse> ExportKeyAsync(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeyExportResponse > Task of APIV1POSTKeyExportResponse Remarks Export the secret key associated with the passed public key. | Improve this Doc View Source ExportKeyAsyncWithHttpInfo(ExportKeyRequest) Export a key Declaration Task<ApiResponse<APIV1POSTKeyExportResponse>> ExportKeyAsyncWithHttpInfo(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeyExportResponse >> Task of ApiResponse (APIV1POSTKeyExportResponse) Remarks Export the secret key associated with the passed public key. | Improve this Doc View Source ExportKeyWithHttpInfo(ExportKeyRequest) Export a key Declaration ApiResponse<APIV1POSTKeyExportResponse> ExportKeyWithHttpInfo(ExportKeyRequest body) Parameters Type Name Description ExportKeyRequest body Returns Type Description ApiResponse < APIV1POSTKeyExportResponse > ApiResponse of APIV1POSTKeyExportResponse Remarks Export the secret key associated with the passed public key. | Improve this Doc View Source ExportMasterKey(ExportMasterKeyRequest) Export the master derivation key from a wallet Declaration APIV1POSTMasterKeyExportResponse ExportMasterKey(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description APIV1POSTMasterKeyExportResponse APIV1POSTMasterKeyExportResponse Remarks Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. | Improve this Doc View Source ExportMasterKeyAsync(ExportMasterKeyRequest) Export the master derivation key from a wallet Declaration Task<APIV1POSTMasterKeyExportResponse> ExportMasterKeyAsync(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMasterKeyExportResponse > Task of APIV1POSTMasterKeyExportResponse Remarks Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. | Improve this Doc View Source ExportMasterKeyAsyncWithHttpInfo(ExportMasterKeyRequest) Export the master derivation key from a wallet Declaration Task<ApiResponse<APIV1POSTMasterKeyExportResponse>> ExportMasterKeyAsyncWithHttpInfo(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMasterKeyExportResponse >> Task of ApiResponse (APIV1POSTMasterKeyExportResponse) Remarks Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. | Improve this Doc View Source ExportMasterKeyWithHttpInfo(ExportMasterKeyRequest) Export the master derivation key from a wallet Declaration ApiResponse<APIV1POSTMasterKeyExportResponse> ExportMasterKeyWithHttpInfo(ExportMasterKeyRequest body) Parameters Type Name Description ExportMasterKeyRequest body Returns Type Description ApiResponse < APIV1POSTMasterKeyExportResponse > ApiResponse of APIV1POSTMasterKeyExportResponse Remarks Export the master derivation key from the wallet. This key is a master &quot;backup&quot; key for the underlying wallet. With it, you can regenerate all of the wallets that have been generated with this wallet's POST /v1/key endpoint. This key will not allow you to recover keys imported from other wallets, however. | Improve this Doc View Source ExportMultisig(ExportMultisigRequest) Export multisig address metadata Declaration APIV1POSTMultisigExportResponse ExportMultisig(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description APIV1POSTMultisigExportResponse APIV1POSTMultisigExportResponse Remarks Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. | Improve this Doc View Source ExportMultisigAsync(ExportMultisigRequest) Export multisig address metadata Declaration Task<APIV1POSTMultisigExportResponse> ExportMultisigAsync(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigExportResponse > Task of APIV1POSTMultisigExportResponse Remarks Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. | Improve this Doc View Source ExportMultisigAsyncWithHttpInfo(ExportMultisigRequest) Export multisig address metadata Declaration Task<ApiResponse<APIV1POSTMultisigExportResponse>> ExportMultisigAsyncWithHttpInfo(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigExportResponse >> Task of ApiResponse (APIV1POSTMultisigExportResponse) Remarks Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. | Improve this Doc View Source ExportMultisigWithHttpInfo(ExportMultisigRequest) Export multisig address metadata Declaration ApiResponse<APIV1POSTMultisigExportResponse> ExportMultisigWithHttpInfo(ExportMultisigRequest body) Parameters Type Name Description ExportMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigExportResponse > ApiResponse of APIV1POSTMultisigExportResponse Remarks Given a multisig address whose preimage this wallet stores, returns the information used to generate the address, including public keys, threshold, and multisig version. | Improve this Doc View Source GenerateKey(GenerateKeyRequest) Generate a key Declaration APIV1POSTKeyResponse GenerateKey(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description APIV1POSTKeyResponse APIV1POSTKeyResponse Remarks Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. | Improve this Doc View Source GenerateKeyAsync(GenerateKeyRequest) Generate a key Declaration Task<APIV1POSTKeyResponse> GenerateKeyAsync(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeyResponse > Task of APIV1POSTKeyResponse Remarks Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. | Improve this Doc View Source GenerateKeyAsyncWithHttpInfo(GenerateKeyRequest) Generate a key Declaration Task<ApiResponse<APIV1POSTKeyResponse>> GenerateKeyAsyncWithHttpInfo(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeyResponse >> Task of ApiResponse (APIV1POSTKeyResponse) Remarks Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. | Improve this Doc View Source GenerateKeyWithHttpInfo(GenerateKeyRequest) Generate a key Declaration ApiResponse<APIV1POSTKeyResponse> GenerateKeyWithHttpInfo(GenerateKeyRequest body) Parameters Type Name Description GenerateKeyRequest body Returns Type Description ApiResponse < APIV1POSTKeyResponse > ApiResponse of APIV1POSTKeyResponse Remarks Generates the next key in the deterministic key sequence (as determined by the master derivation key) and adds it to the wallet, returning the public key. | Improve this Doc View Source GetWalletInfo(WalletInfoRequest) Get wallet info Declaration APIV1POSTWalletInfoResponse GetWalletInfo(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description APIV1POSTWalletInfoResponse APIV1POSTWalletInfoResponse Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. | Improve this Doc View Source GetWalletInfoAsync(WalletInfoRequest) Get wallet info Declaration Task<APIV1POSTWalletInfoResponse> GetWalletInfoAsync(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletInfoResponse > Task of APIV1POSTWalletInfoResponse Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. | Improve this Doc View Source GetWalletInfoAsyncWithHttpInfo(WalletInfoRequest) Get wallet info Declaration Task<ApiResponse<APIV1POSTWalletInfoResponse>> GetWalletInfoAsyncWithHttpInfo(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletInfoResponse >> Task of ApiResponse (APIV1POSTWalletInfoResponse) Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. | Improve this Doc View Source GetWalletInfoWithHttpInfo(WalletInfoRequest) Get wallet info Declaration ApiResponse<APIV1POSTWalletInfoResponse> GetWalletInfoWithHttpInfo(WalletInfoRequest body) Parameters Type Name Description WalletInfoRequest body Returns Type Description ApiResponse < APIV1POSTWalletInfoResponse > ApiResponse of APIV1POSTWalletInfoResponse Remarks Returns information about the wallet associated with the passed wallet handle token. Additionally returns expiration information about the token itself. | Improve this Doc View Source ImportKey(ImportKeyRequest) Import a key Declaration APIV1POSTKeyImportResponse ImportKey(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description APIV1POSTKeyImportResponse APIV1POSTKeyImportResponse Remarks Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. | Improve this Doc View Source ImportKeyAsync(ImportKeyRequest) Import a key Declaration Task<APIV1POSTKeyImportResponse> ImportKeyAsync(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeyImportResponse > Task of APIV1POSTKeyImportResponse Remarks Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. | Improve this Doc View Source ImportKeyAsyncWithHttpInfo(ImportKeyRequest) Import a key Declaration Task<ApiResponse<APIV1POSTKeyImportResponse>> ImportKeyAsyncWithHttpInfo(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeyImportResponse >> Task of ApiResponse (APIV1POSTKeyImportResponse) Remarks Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. | Improve this Doc View Source ImportKeyWithHttpInfo(ImportKeyRequest) Import a key Declaration ApiResponse<APIV1POSTKeyImportResponse> ImportKeyWithHttpInfo(ImportKeyRequest body) Parameters Type Name Description ImportKeyRequest body Returns Type Description ApiResponse < APIV1POSTKeyImportResponse > ApiResponse of APIV1POSTKeyImportResponse Remarks Import an externally generated key into the wallet. Note that if you wish to back up the imported key, you must do so by backing up the entire wallet database, because imported keys were not derived from the wallet's master derivation key. | Improve this Doc View Source ImportMultisig(ImportMultisigRequest) Import a multisig account Declaration APIV1POSTMultisigImportResponse ImportMultisig(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description APIV1POSTMultisigImportResponse APIV1POSTMultisigImportResponse Remarks Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. | Improve this Doc View Source ImportMultisigAsync(ImportMultisigRequest) Import a multisig account Declaration Task<APIV1POSTMultisigImportResponse> ImportMultisigAsync(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigImportResponse > Task of APIV1POSTMultisigImportResponse Remarks Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. | Improve this Doc View Source ImportMultisigAsyncWithHttpInfo(ImportMultisigRequest) Import a multisig account Declaration Task<ApiResponse<APIV1POSTMultisigImportResponse>> ImportMultisigAsyncWithHttpInfo(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigImportResponse >> Task of ApiResponse (APIV1POSTMultisigImportResponse) Remarks Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. | Improve this Doc View Source ImportMultisigWithHttpInfo(ImportMultisigRequest) Import a multisig account Declaration ApiResponse<APIV1POSTMultisigImportResponse> ImportMultisigWithHttpInfo(ImportMultisigRequest body) Parameters Type Name Description ImportMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigImportResponse > ApiResponse of APIV1POSTMultisigImportResponse Remarks Generates a multisig account from the passed public keys array and multisig metadata, and stores all of this in the wallet. | Improve this Doc View Source InitWalletHandleToken(InitWalletHandleTokenRequest) Initialize a wallet handle token Declaration APIV1POSTWalletInitResponse InitWalletHandleToken(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description APIV1POSTWalletInitResponse APIV1POSTWalletInitResponse Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . | Improve this Doc View Source InitWalletHandleTokenAsync(InitWalletHandleTokenRequest) Initialize a wallet handle token Declaration Task<APIV1POSTWalletInitResponse> InitWalletHandleTokenAsync(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletInitResponse > Task of APIV1POSTWalletInitResponse Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . | Improve this Doc View Source InitWalletHandleTokenAsyncWithHttpInfo(InitWalletHandleTokenRequest) Initialize a wallet handle token Declaration Task<ApiResponse<APIV1POSTWalletInitResponse>> InitWalletHandleTokenAsyncWithHttpInfo(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletInitResponse >> Task of ApiResponse (APIV1POSTWalletInitResponse) Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . | Improve this Doc View Source InitWalletHandleTokenWithHttpInfo(InitWalletHandleTokenRequest) Initialize a wallet handle token Declaration ApiResponse<APIV1POSTWalletInitResponse> InitWalletHandleTokenWithHttpInfo(InitWalletHandleTokenRequest body) Parameters Type Name Description InitWalletHandleTokenRequest body Returns Type Description ApiResponse < APIV1POSTWalletInitResponse > ApiResponse of APIV1POSTWalletInitResponse Remarks Unlock the wallet and return a wallet handle token that can be used for subsequent operations. These tokens expire periodically and must be renewed. You can POST the token to /v1/wallet/info to see how much time remains until expiration, and renew it with /v1/wallet/renew . When you're done, you can invalidate the token with /v1/wallet/release . | Improve this Doc View Source ListKeysInWallet(ListKeysRequest) List keys in wallet Declaration APIV1POSTKeysListResponse ListKeysInWallet(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description APIV1POSTKeysListResponse APIV1POSTKeysListResponse Remarks Lists all of the public keys in this wallet. All of them have a stored private key. | Improve this Doc View Source ListKeysInWalletAsync(ListKeysRequest) List keys in wallet Declaration Task<APIV1POSTKeysListResponse> ListKeysInWalletAsync(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTKeysListResponse > Task of APIV1POSTKeysListResponse Remarks Lists all of the public keys in this wallet. All of them have a stored private key. | Improve this Doc View Source ListKeysInWalletAsyncWithHttpInfo(ListKeysRequest) List keys in wallet Declaration Task<ApiResponse<APIV1POSTKeysListResponse>> ListKeysInWalletAsyncWithHttpInfo(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTKeysListResponse >> Task of ApiResponse (APIV1POSTKeysListResponse) Remarks Lists all of the public keys in this wallet. All of them have a stored private key. | Improve this Doc View Source ListKeysInWalletWithHttpInfo(ListKeysRequest) List keys in wallet Declaration ApiResponse<APIV1POSTKeysListResponse> ListKeysInWalletWithHttpInfo(ListKeysRequest body) Parameters Type Name Description ListKeysRequest body Returns Type Description ApiResponse < APIV1POSTKeysListResponse > ApiResponse of APIV1POSTKeysListResponse Remarks Lists all of the public keys in this wallet. All of them have a stored private key. | Improve this Doc View Source ListMultisg(ListMultisigRequest) List multisig accounts Declaration APIV1POSTMultisigListResponse ListMultisg(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description APIV1POSTMultisigListResponse APIV1POSTMultisigListResponse Remarks Lists all of the multisig accounts whose preimages this wallet stores | Improve this Doc View Source ListMultisgAsync(ListMultisigRequest) List multisig accounts Declaration Task<APIV1POSTMultisigListResponse> ListMultisgAsync(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigListResponse > Task of APIV1POSTMultisigListResponse Remarks Lists all of the multisig accounts whose preimages this wallet stores | Improve this Doc View Source ListMultisgAsyncWithHttpInfo(ListMultisigRequest) List multisig accounts Declaration Task<ApiResponse<APIV1POSTMultisigListResponse>> ListMultisgAsyncWithHttpInfo(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigListResponse >> Task of ApiResponse (APIV1POSTMultisigListResponse) Remarks Lists all of the multisig accounts whose preimages this wallet stores | Improve this Doc View Source ListMultisgWithHttpInfo(ListMultisigRequest) List multisig accounts Declaration ApiResponse<APIV1POSTMultisigListResponse> ListMultisgWithHttpInfo(ListMultisigRequest body) Parameters Type Name Description ListMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigListResponse > ApiResponse of APIV1POSTMultisigListResponse Remarks Lists all of the multisig accounts whose preimages this wallet stores | Improve this Doc View Source ListWallets() List wallets Declaration APIV1GETWalletsResponse ListWallets() Returns Type Description APIV1GETWalletsResponse APIV1GETWalletsResponse Remarks Lists all of the wallets that kmd is aware of. | Improve this Doc View Source ListWalletsAsync() List wallets Declaration Task<APIV1GETWalletsResponse> ListWalletsAsync() Returns Type Description System.Threading.Tasks.Task < APIV1GETWalletsResponse > Task of APIV1GETWalletsResponse Remarks Lists all of the wallets that kmd is aware of. | Improve this Doc View Source ListWalletsAsyncWithHttpInfo() List wallets Declaration Task<ApiResponse<APIV1GETWalletsResponse>> ListWalletsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1GETWalletsResponse >> Task of ApiResponse (APIV1GETWalletsResponse) Remarks Lists all of the wallets that kmd is aware of. | Improve this Doc View Source ListWalletsWithHttpInfo() List wallets Declaration ApiResponse<APIV1GETWalletsResponse> ListWalletsWithHttpInfo() Returns Type Description ApiResponse < APIV1GETWalletsResponse > ApiResponse of APIV1GETWalletsResponse Remarks Lists all of the wallets that kmd is aware of. | Improve this Doc View Source ReleaseWalletHandleToken(ReleaseWalletHandleTokenRequest) Release a wallet handle token Declaration APIV1POSTWalletReleaseResponse ReleaseWalletHandleToken(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description APIV1POSTWalletReleaseResponse APIV1POSTWalletReleaseResponse Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. | Improve this Doc View Source ReleaseWalletHandleTokenAsync(ReleaseWalletHandleTokenRequest) Release a wallet handle token Declaration Task<APIV1POSTWalletReleaseResponse> ReleaseWalletHandleTokenAsync(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletReleaseResponse > Task of APIV1POSTWalletReleaseResponse Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. | Improve this Doc View Source ReleaseWalletHandleTokenAsyncWithHttpInfo(ReleaseWalletHandleTokenRequest) Release a wallet handle token Declaration Task<ApiResponse<APIV1POSTWalletReleaseResponse>> ReleaseWalletHandleTokenAsyncWithHttpInfo(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletReleaseResponse >> Task of ApiResponse (APIV1POSTWalletReleaseResponse) Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. | Improve this Doc View Source ReleaseWalletHandleTokenWithHttpInfo(ReleaseWalletHandleTokenRequest) Release a wallet handle token Declaration ApiResponse<APIV1POSTWalletReleaseResponse> ReleaseWalletHandleTokenWithHttpInfo(ReleaseWalletHandleTokenRequest body) Parameters Type Name Description ReleaseWalletHandleTokenRequest body Returns Type Description ApiResponse < APIV1POSTWalletReleaseResponse > ApiResponse of APIV1POSTWalletReleaseResponse Remarks Invalidate the passed wallet handle token, making it invalid for use in subsequent requests. | Improve this Doc View Source RenameWallet(RenameWalletRequest) Rename a wallet Declaration APIV1POSTWalletRenameResponse RenameWallet(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description APIV1POSTWalletRenameResponse APIV1POSTWalletRenameResponse Remarks Rename the underlying wallet to something else | Improve this Doc View Source RenameWalletAsync(RenameWalletRequest) Rename a wallet Declaration Task<APIV1POSTWalletRenameResponse> RenameWalletAsync(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletRenameResponse > Task of APIV1POSTWalletRenameResponse Remarks Rename the underlying wallet to something else | Improve this Doc View Source RenameWalletAsyncWithHttpInfo(RenameWalletRequest) Rename a wallet Declaration Task<ApiResponse<APIV1POSTWalletRenameResponse>> RenameWalletAsyncWithHttpInfo(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletRenameResponse >> Task of ApiResponse (APIV1POSTWalletRenameResponse) Remarks Rename the underlying wallet to something else | Improve this Doc View Source RenameWalletWithHttpInfo(RenameWalletRequest) Rename a wallet Declaration ApiResponse<APIV1POSTWalletRenameResponse> RenameWalletWithHttpInfo(RenameWalletRequest body) Parameters Type Name Description RenameWalletRequest body Returns Type Description ApiResponse < APIV1POSTWalletRenameResponse > ApiResponse of APIV1POSTWalletRenameResponse Remarks Rename the underlying wallet to something else | Improve this Doc View Source RenewWalletHandleToken(RenewWalletHandleTokenRequest) Renew a wallet handle token Declaration APIV1POSTWalletRenewResponse RenewWalletHandleToken(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description APIV1POSTWalletRenewResponse APIV1POSTWalletRenewResponse Remarks Renew a wallet handle token, increasing its expiration duration to its initial value | Improve this Doc View Source RenewWalletHandleTokenAsync(RenewWalletHandleTokenRequest) Renew a wallet handle token Declaration Task<APIV1POSTWalletRenewResponse> RenewWalletHandleTokenAsync(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTWalletRenewResponse > Task of APIV1POSTWalletRenewResponse Remarks Renew a wallet handle token, increasing its expiration duration to its initial value | Improve this Doc View Source RenewWalletHandleTokenAsyncWithHttpInfo(RenewWalletHandleTokenRequest) Renew a wallet handle token Declaration Task<ApiResponse<APIV1POSTWalletRenewResponse>> RenewWalletHandleTokenAsyncWithHttpInfo(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTWalletRenewResponse >> Task of ApiResponse (APIV1POSTWalletRenewResponse) Remarks Renew a wallet handle token, increasing its expiration duration to its initial value | Improve this Doc View Source RenewWalletHandleTokenWithHttpInfo(RenewWalletHandleTokenRequest) Renew a wallet handle token Declaration ApiResponse<APIV1POSTWalletRenewResponse> RenewWalletHandleTokenWithHttpInfo(RenewWalletHandleTokenRequest body) Parameters Type Name Description RenewWalletHandleTokenRequest body Returns Type Description ApiResponse < APIV1POSTWalletRenewResponse > ApiResponse of APIV1POSTWalletRenewResponse Remarks Renew a wallet handle token, increasing its expiration duration to its initial value | Improve this Doc View Source SignMultisigTransaction(SignMultisigRequest) Sign a multisig transaction Declaration APIV1POSTMultisigTransactionSignResponse SignMultisigTransaction(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description APIV1POSTMultisigTransactionSignResponse APIV1POSTMultisigTransactionSignResponse Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. | Improve this Doc View Source SignMultisigTransactionAsync(SignMultisigRequest) Sign a multisig transaction Declaration Task<APIV1POSTMultisigTransactionSignResponse> SignMultisigTransactionAsync(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTMultisigTransactionSignResponse > Task of APIV1POSTMultisigTransactionSignResponse Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. | Improve this Doc View Source SignMultisigTransactionAsyncWithHttpInfo(SignMultisigRequest) Sign a multisig transaction Declaration Task<ApiResponse<APIV1POSTMultisigTransactionSignResponse>> SignMultisigTransactionAsyncWithHttpInfo(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTMultisigTransactionSignResponse >> Task of ApiResponse (APIV1POSTMultisigTransactionSignResponse) Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. | Improve this Doc View Source SignMultisigTransactionWithHttpInfo(SignMultisigRequest) Sign a multisig transaction Declaration ApiResponse<APIV1POSTMultisigTransactionSignResponse> SignMultisigTransactionWithHttpInfo(SignMultisigRequest body) Parameters Type Name Description SignMultisigRequest body Returns Type Description ApiResponse < APIV1POSTMultisigTransactionSignResponse > ApiResponse of APIV1POSTMultisigTransactionSignResponse Remarks Start a multisig signature, or add a signature to a partially completed multisig signature object. | Improve this Doc View Source SignTransaction(SignTransactionRequest) Sign a transaction Declaration APIV1POSTTransactionSignResponse SignTransaction(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description APIV1POSTTransactionSignResponse APIV1POSTTransactionSignResponse Remarks Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction. | Improve this Doc View Source SignTransactionAsync(SignTransactionRequest) Sign a transaction Declaration Task<APIV1POSTTransactionSignResponse> SignTransactionAsync(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description System.Threading.Tasks.Task < APIV1POSTTransactionSignResponse > Task of APIV1POSTTransactionSignResponse Remarks Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction. | Improve this Doc View Source SignTransactionAsyncWithHttpInfo(SignTransactionRequest) Sign a transaction Declaration Task<ApiResponse<APIV1POSTTransactionSignResponse>> SignTransactionAsyncWithHttpInfo(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description System.Threading.Tasks.Task < ApiResponse < APIV1POSTTransactionSignResponse >> Task of ApiResponse (APIV1POSTTransactionSignResponse) Remarks Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction. | Improve this Doc View Source SignTransactionWithHttpInfo(SignTransactionRequest) Sign a transaction Declaration ApiResponse<APIV1POSTTransactionSignResponse> SignTransactionWithHttpInfo(SignTransactionRequest body) Parameters Type Name Description SignTransactionRequest body Returns Type Description ApiResponse < APIV1POSTTransactionSignResponse > ApiResponse of APIV1POSTTransactionSignResponse Remarks Signs the passed transaction with a key from the wallet, determined by the sender encoded in the transaction."
  },
  "api/Algorand.Kmd.Api.KmdApi.html": {
    "href": "api/Algorand.Kmd.Api.KmdApi.html",
    "title": "Class KmdApi | Dotnet Algorand Documents",
    "keywords": "Class KmdApi Inheritance System.Object DefaultApi KmdApi Implements IDefaultApi IApiAccessor Inherited Members DefaultApi.GetBasePath() DefaultApi.SetBasePath(String) DefaultApi.Configuration DefaultApi.ExceptionFactory DefaultApi.DefaultHeader() DefaultApi.AddDefaultHeader(String, String) DefaultApi.CreateWallet(CreateWalletRequest) DefaultApi.CreateWalletWithHttpInfo(CreateWalletRequest) DefaultApi.CreateWalletAsync(CreateWalletRequest) DefaultApi.CreateWalletAsyncWithHttpInfo(CreateWalletRequest) DefaultApi.DeleteKey(DeleteKeyRequest) DefaultApi.DeleteKeyWithHttpInfo(DeleteKeyRequest) DefaultApi.DeleteKeyAsync(DeleteKeyRequest) DefaultApi.DeleteKeyAsyncWithHttpInfo(DeleteKeyRequest) DefaultApi.DeleteMultisig(DeleteMultisigRequest) DefaultApi.DeleteMultisigWithHttpInfo(DeleteMultisigRequest) DefaultApi.DeleteMultisigAsync(DeleteMultisigRequest) DefaultApi.DeleteMultisigAsyncWithHttpInfo(DeleteMultisigRequest) DefaultApi.ExportKey(ExportKeyRequest) DefaultApi.ExportKeyWithHttpInfo(ExportKeyRequest) DefaultApi.ExportKeyAsync(ExportKeyRequest) DefaultApi.ExportKeyAsyncWithHttpInfo(ExportKeyRequest) DefaultApi.ExportMasterKey(ExportMasterKeyRequest) DefaultApi.ExportMasterKeyWithHttpInfo(ExportMasterKeyRequest) DefaultApi.ExportMasterKeyAsync(ExportMasterKeyRequest) DefaultApi.ExportMasterKeyAsyncWithHttpInfo(ExportMasterKeyRequest) DefaultApi.ExportMultisig(ExportMultisigRequest) DefaultApi.ExportMultisigWithHttpInfo(ExportMultisigRequest) DefaultApi.ExportMultisigAsync(ExportMultisigRequest) DefaultApi.ExportMultisigAsyncWithHttpInfo(ExportMultisigRequest) DefaultApi.GenerateKey(GenerateKeyRequest) DefaultApi.GenerateKeyWithHttpInfo(GenerateKeyRequest) DefaultApi.GenerateKeyAsync(GenerateKeyRequest) DefaultApi.GenerateKeyAsyncWithHttpInfo(GenerateKeyRequest) DefaultApi.GetWalletInfo(WalletInfoRequest) DefaultApi.GetWalletInfoWithHttpInfo(WalletInfoRequest) DefaultApi.GetWalletInfoAsync(WalletInfoRequest) DefaultApi.GetWalletInfoAsyncWithHttpInfo(WalletInfoRequest) DefaultApi.ImportKey(ImportKeyRequest) DefaultApi.ImportKeyWithHttpInfo(ImportKeyRequest) DefaultApi.ImportKeyAsync(ImportKeyRequest) DefaultApi.ImportKeyAsyncWithHttpInfo(ImportKeyRequest) DefaultApi.ImportMultisig(ImportMultisigRequest) DefaultApi.ImportMultisigWithHttpInfo(ImportMultisigRequest) DefaultApi.ImportMultisigAsync(ImportMultisigRequest) DefaultApi.ImportMultisigAsyncWithHttpInfo(ImportMultisigRequest) DefaultApi.InitWalletHandleToken(InitWalletHandleTokenRequest) DefaultApi.InitWalletHandleTokenWithHttpInfo(InitWalletHandleTokenRequest) DefaultApi.InitWalletHandleTokenAsync(InitWalletHandleTokenRequest) DefaultApi.InitWalletHandleTokenAsyncWithHttpInfo(InitWalletHandleTokenRequest) DefaultApi.ListKeysInWallet(ListKeysRequest) DefaultApi.ListKeysInWalletWithHttpInfo(ListKeysRequest) DefaultApi.ListKeysInWalletAsync(ListKeysRequest) DefaultApi.ListKeysInWalletAsyncWithHttpInfo(ListKeysRequest) DefaultApi.ListMultisg(ListMultisigRequest) DefaultApi.ListMultisgWithHttpInfo(ListMultisigRequest) DefaultApi.ListMultisgAsync(ListMultisigRequest) DefaultApi.ListMultisgAsyncWithHttpInfo(ListMultisigRequest) DefaultApi.ListWallets() DefaultApi.ListWalletsWithHttpInfo() DefaultApi.ListWalletsAsync() DefaultApi.ListWalletsAsyncWithHttpInfo() DefaultApi.ReleaseWalletHandleToken(ReleaseWalletHandleTokenRequest) DefaultApi.ReleaseWalletHandleTokenWithHttpInfo(ReleaseWalletHandleTokenRequest) DefaultApi.ReleaseWalletHandleTokenAsync(ReleaseWalletHandleTokenRequest) DefaultApi.ReleaseWalletHandleTokenAsyncWithHttpInfo(ReleaseWalletHandleTokenRequest) DefaultApi.RenameWallet(RenameWalletRequest) DefaultApi.RenameWalletWithHttpInfo(RenameWalletRequest) DefaultApi.RenameWalletAsync(RenameWalletRequest) DefaultApi.RenameWalletAsyncWithHttpInfo(RenameWalletRequest) DefaultApi.RenewWalletHandleToken(RenewWalletHandleTokenRequest) DefaultApi.RenewWalletHandleTokenWithHttpInfo(RenewWalletHandleTokenRequest) DefaultApi.RenewWalletHandleTokenAsync(RenewWalletHandleTokenRequest) DefaultApi.RenewWalletHandleTokenAsyncWithHttpInfo(RenewWalletHandleTokenRequest) DefaultApi.SignMultisigTransaction(SignMultisigRequest) DefaultApi.SignMultisigTransactionWithHttpInfo(SignMultisigRequest) DefaultApi.SignMultisigTransactionAsync(SignMultisigRequest) DefaultApi.SignMultisigTransactionAsyncWithHttpInfo(SignMultisigRequest) DefaultApi.SignTransaction(SignTransactionRequest) DefaultApi.SignTransactionWithHttpInfo(SignTransactionRequest) DefaultApi.SignTransactionAsync(SignTransactionRequest) DefaultApi.SignTransactionAsyncWithHttpInfo(SignTransactionRequest) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.Kmd.Api Assembly : Algorand.dll Syntax public class KmdApi : DefaultApi, IDefaultApi, IApiAccessor Constructors | Improve this Doc View Source KmdApi() Declaration public KmdApi() | Improve this Doc View Source KmdApi(Configuration) Declaration public KmdApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration | Improve this Doc View Source KmdApi(String) Declaration public KmdApi(string basePath) Parameters Type Name Description System.String basePath Implements IDefaultApi IApiAccessor"
  },
  "api/Algorand.Kmd.Model.Address.html": {
    "href": "api/Algorand.Kmd.Model.Address.html",
    "title": "Class Address | Dotnet Algorand Documents",
    "keywords": "Class Address Address Inheritance System.Object Address Implements System.IEquatable < Address > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class Address : IEquatable<Address>, IValidatableObject Constructors | Improve this Doc View Source Address() Initializes a new instance of the Address class. Declaration public Address() Methods | Improve this Doc View Source Equals(Address) Returns true if Address instances are equal Declaration public bool Equals(Address input) Parameters Type Name Description Address input Instance of Address to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1DELETEKeyResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1DELETEKeyResponse.html",
    "title": "Class APIV1DELETEKeyResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1DELETEKeyResponse APIV1DELETEKeyResponse is the response to DELETE /v1/key friendly:DeleteKeyResponse Inheritance System.Object APIV1DELETEKeyResponse Implements System.IEquatable < APIV1DELETEKeyResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1DELETEKeyResponse : IEquatable<APIV1DELETEKeyResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1DELETEKeyResponse(Nullable<Boolean>, String) Initializes a new instance of the APIV1DELETEKeyResponse class. Declaration public APIV1DELETEKeyResponse(bool? error = default(bool? ), string message = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(APIV1DELETEKeyResponse) Returns true if APIV1DELETEKeyResponse instances are equal Declaration public bool Equals(APIV1DELETEKeyResponse input) Parameters Type Name Description APIV1DELETEKeyResponse input Instance of APIV1DELETEKeyResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1GETWalletsResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1GETWalletsResponse.html",
    "title": "Class APIV1GETWalletsResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1GETWalletsResponse APIV1GETWalletsResponse is the response to GET /v1/wallets friendly:ListWalletsResponse Inheritance System.Object APIV1GETWalletsResponse Implements System.IEquatable < APIV1GETWalletsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1GETWalletsResponse : IEquatable<APIV1GETWalletsResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1GETWalletsResponse(Nullable<Boolean>, String, List<APIV1Wallet>) Initializes a new instance of the APIV1GETWalletsResponse class. Declaration public APIV1GETWalletsResponse(bool? error = default(bool? ), string message = null, List<APIV1Wallet> wallets = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. System.Collections.Generic.List < APIV1Wallet > wallets wallets. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source Wallets Gets or Sets Wallets Declaration [DataMember(Name = \"wallets\", EmitDefaultValue = false)] public List<APIV1Wallet> Wallets { get; set; } Property Value Type Description System.Collections.Generic.List < APIV1Wallet > Methods | Improve this Doc View Source Equals(APIV1GETWalletsResponse) Returns true if APIV1GETWalletsResponse instances are equal Declaration public bool Equals(APIV1GETWalletsResponse input) Parameters Type Name Description APIV1GETWalletsResponse input Instance of APIV1GETWalletsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTKeyExportResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTKeyExportResponse.html",
    "title": "Class APIV1POSTKeyExportResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTKeyExportResponse APIV1POSTKeyExportResponse is the reponse to POST /v1/key/export friendly:ExportKeyResponse Inheritance System.Object APIV1POSTKeyExportResponse Implements System.IEquatable < APIV1POSTKeyExportResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTKeyExportResponse : IEquatable<APIV1POSTKeyExportResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTKeyExportResponse(Nullable<Boolean>, String, PrivateKey) Initializes a new instance of the APIV1POSTKeyExportResponse class. Declaration public APIV1POSTKeyExportResponse(bool? error = default(bool? ), string message = null, PrivateKey privateKey = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. PrivateKey privateKey privateKey. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrivateKey Gets or Sets PrivateKey Declaration [DataMember(Name = \"private_key\", EmitDefaultValue = false)] public PrivateKey PrivateKey { get; set; } Property Value Type Description PrivateKey Methods | Improve this Doc View Source Equals(APIV1POSTKeyExportResponse) Returns true if APIV1POSTKeyExportResponse instances are equal Declaration public bool Equals(APIV1POSTKeyExportResponse input) Parameters Type Name Description APIV1POSTKeyExportResponse input Instance of APIV1POSTKeyExportResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTKeyImportResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTKeyImportResponse.html",
    "title": "Class APIV1POSTKeyImportResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTKeyImportResponse APIV1POSTKeyImportResponse is the repsonse to POST /v1/key/import friendly:ImportKeyResponse Inheritance System.Object APIV1POSTKeyImportResponse Implements System.IEquatable < APIV1POSTKeyImportResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTKeyImportResponse : IEquatable<APIV1POSTKeyImportResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTKeyImportResponse(Nullable<Boolean>, String, PublicKey) Initializes a new instance of the APIV1POSTKeyImportResponse class. Declaration public APIV1POSTKeyImportResponse(bool? error = default(bool? ), string message = null, PublicKey publicKey = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. PublicKey publicKey publicKey. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source PublicKey Gets or Sets PublicKey Declaration [DataMember(Name = \"public_key\", EmitDefaultValue = false)] public PublicKey PublicKey { get; set; } Property Value Type Description PublicKey Methods | Improve this Doc View Source Equals(APIV1POSTKeyImportResponse) Returns true if APIV1POSTKeyImportResponse instances are equal Declaration public bool Equals(APIV1POSTKeyImportResponse input) Parameters Type Name Description APIV1POSTKeyImportResponse input Instance of APIV1POSTKeyImportResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTKeyResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTKeyResponse.html",
    "title": "Class APIV1POSTKeyResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTKeyResponse APIV1POSTKeyResponse is the response to POST /v1/key friendly:GenerateKeyResponse Inheritance System.Object APIV1POSTKeyResponse Implements System.IEquatable < APIV1POSTKeyResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTKeyResponse : IEquatable<APIV1POSTKeyResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTKeyResponse(Nullable<Boolean>, String, PublicKey) Initializes a new instance of the APIV1POSTKeyResponse class. Declaration public APIV1POSTKeyResponse(bool? error = default(bool? ), string message = null, PublicKey publicKey = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. PublicKey publicKey publicKey. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source PublicKey Gets or Sets PublicKey Declaration [DataMember(Name = \"public_key\", EmitDefaultValue = false)] public PublicKey PublicKey { get; set; } Property Value Type Description PublicKey Methods | Improve this Doc View Source Equals(APIV1POSTKeyResponse) Returns true if APIV1POSTKeyResponse instances are equal Declaration public bool Equals(APIV1POSTKeyResponse input) Parameters Type Name Description APIV1POSTKeyResponse input Instance of APIV1POSTKeyResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTKeysListResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTKeysListResponse.html",
    "title": "Class APIV1POSTKeysListResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTKeysListResponse APIV1POSTKeysListResponse is the response to POST /v1/keys/list friendly:ListKeysResponse Inheritance System.Object APIV1POSTKeysListResponse Implements System.IEquatable < APIV1POSTKeysListResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTKeysListResponse : IEquatable<APIV1POSTKeysListResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTKeysListResponse(Nullable<Boolean>, String, List<PublicKey>) Initializes a new instance of the APIV1POSTKeysListResponse class. Declaration public APIV1POSTKeysListResponse(bool? error = default(bool? ), string message = null, List<PublicKey> publicKeys = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. System.Collections.Generic.List < PublicKey > publicKeys publicKeys. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source PublicKeys Gets or Sets PublicKeys Declaration [DataMember(Name = \"public_keys\", EmitDefaultValue = false)] public List<PublicKey> PublicKeys { get; set; } Property Value Type Description System.Collections.Generic.List < PublicKey > Methods | Improve this Doc View Source Equals(APIV1POSTKeysListResponse) Returns true if APIV1POSTKeysListResponse instances are equal Declaration public bool Equals(APIV1POSTKeysListResponse input) Parameters Type Name Description APIV1POSTKeysListResponse input Instance of APIV1POSTKeysListResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTMasterKeyExportResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTMasterKeyExportResponse.html",
    "title": "Class APIV1POSTMasterKeyExportResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTMasterKeyExportResponse APIV1POSTMasterKeyExportResponse is the reponse to POST /v1/master_key/export friendly:ExportMasterKeyResponse Inheritance System.Object APIV1POSTMasterKeyExportResponse Implements System.IEquatable < APIV1POSTMasterKeyExportResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTMasterKeyExportResponse : IEquatable<APIV1POSTMasterKeyExportResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTMasterKeyExportResponse(Nullable<Boolean>, MasterDerivationKey, String) Initializes a new instance of the APIV1POSTMasterKeyExportResponse class. Declaration public APIV1POSTMasterKeyExportResponse(bool? error = default(bool? ), MasterDerivationKey masterDerivationKey = null, string message = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. MasterDerivationKey masterDerivationKey masterDerivationKey. System.String message message. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MasterDerivationKey Gets or Sets MasterDerivationKey Declaration [DataMember(Name = \"master_derivation_key\", EmitDefaultValue = false)] public MasterDerivationKey MasterDerivationKey { get; set; } Property Value Type Description MasterDerivationKey | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(APIV1POSTMasterKeyExportResponse) Returns true if APIV1POSTMasterKeyExportResponse instances are equal Declaration public bool Equals(APIV1POSTMasterKeyExportResponse input) Parameters Type Name Description APIV1POSTMasterKeyExportResponse input Instance of APIV1POSTMasterKeyExportResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTMultisigDeleteResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTMultisigDeleteResponse.html",
    "title": "Class APIV1POSTMultisigDeleteResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTMultisigDeleteResponse APIV1POSTMultisigDeleteResponse is the response to POST /v1/multisig/delete` friendly:DeleteMultisigResponse Inheritance System.Object APIV1POSTMultisigDeleteResponse Implements System.IEquatable < APIV1POSTMultisigDeleteResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTMultisigDeleteResponse : IEquatable<APIV1POSTMultisigDeleteResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTMultisigDeleteResponse(Nullable<Boolean>, String) Initializes a new instance of the APIV1POSTMultisigDeleteResponse class. Declaration public APIV1POSTMultisigDeleteResponse(bool? error = default(bool? ), string message = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(APIV1POSTMultisigDeleteResponse) Returns true if APIV1POSTMultisigDeleteResponse instances are equal Declaration public bool Equals(APIV1POSTMultisigDeleteResponse input) Parameters Type Name Description APIV1POSTMultisigDeleteResponse input Instance of APIV1POSTMultisigDeleteResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTMultisigExportResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTMultisigExportResponse.html",
    "title": "Class APIV1POSTMultisigExportResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTMultisigExportResponse APIV1POSTMultisigExportResponse is the response to POST /v1/multisig/export friendly:ExportMultisigResponse Inheritance System.Object APIV1POSTMultisigExportResponse Implements System.IEquatable < APIV1POSTMultisigExportResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTMultisigExportResponse : IEquatable<APIV1POSTMultisigExportResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTMultisigExportResponse(Nullable<Boolean>, String, Nullable<Int32>, List<PublicKey>, Nullable<Int32>) Initializes a new instance of the APIV1POSTMultisigExportResponse class. Declaration public APIV1POSTMultisigExportResponse(bool? error = default(bool? ), string message = null, int? multisigVersion = default(int? ), List<PublicKey> pks = null, int? threshold = default(int? )) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. System.Nullable < System.Int32 > multisigVersion multisigVersion. System.Collections.Generic.List < PublicKey > pks pks. System.Nullable < System.Int32 > threshold threshold. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source MultisigVersion Gets or Sets MultisigVersion Declaration [DataMember(Name = \"multisig_version\", EmitDefaultValue = false)] public int? MultisigVersion { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Pks Gets or Sets Pks Declaration [DataMember(Name = \"pks\", EmitDefaultValue = false)] public List<PublicKey> Pks { get; set; } Property Value Type Description System.Collections.Generic.List < PublicKey > | Improve this Doc View Source Threshold Gets or Sets Threshold Declaration [DataMember(Name = \"threshold\", EmitDefaultValue = false)] public int? Threshold { get; set; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source Equals(APIV1POSTMultisigExportResponse) Returns true if APIV1POSTMultisigExportResponse instances are equal Declaration public bool Equals(APIV1POSTMultisigExportResponse input) Parameters Type Name Description APIV1POSTMultisigExportResponse input Instance of APIV1POSTMultisigExportResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTMultisigImportResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTMultisigImportResponse.html",
    "title": "Class APIV1POSTMultisigImportResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTMultisigImportResponse APIV1POSTMultisigImportResponse is the response to POST /v1/multisig/import friendly:ImportMultisigResponse Inheritance System.Object APIV1POSTMultisigImportResponse Implements System.IEquatable < APIV1POSTMultisigImportResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTMultisigImportResponse : IEquatable<APIV1POSTMultisigImportResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTMultisigImportResponse(Address, Nullable<Boolean>, String) Initializes a new instance of the APIV1POSTMultisigImportResponse class. Declaration public APIV1POSTMultisigImportResponse(Address address = null, bool? error = default(bool? ), string message = null) Parameters Type Name Description Address address address. System.Nullable < System.Boolean > error error. System.String message message. Properties | Improve this Doc View Source Address Gets or Sets Address Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public Address Address { get; set; } Property Value Type Description Address | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(APIV1POSTMultisigImportResponse) Returns true if APIV1POSTMultisigImportResponse instances are equal Declaration public bool Equals(APIV1POSTMultisigImportResponse input) Parameters Type Name Description APIV1POSTMultisigImportResponse input Instance of APIV1POSTMultisigImportResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTMultisigListResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTMultisigListResponse.html",
    "title": "Class APIV1POSTMultisigListResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTMultisigListResponse APIV1POSTMultisigListResponse is the response to POST /v1/multisig/list friendly:ListMultisigResponse Inheritance System.Object APIV1POSTMultisigListResponse Implements System.IEquatable < APIV1POSTMultisigListResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTMultisigListResponse : IEquatable<APIV1POSTMultisigListResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTMultisigListResponse(List<Address>, Nullable<Boolean>, String) Initializes a new instance of the APIV1POSTMultisigListResponse class. Declaration public APIV1POSTMultisigListResponse(List<Address> addresses = null, bool? error = default(bool? ), string message = null) Parameters Type Name Description System.Collections.Generic.List < Address > addresses addresses. System.Nullable < System.Boolean > error error. System.String message message. Properties | Improve this Doc View Source Addresses Gets or Sets Addresses Declaration [DataMember(Name = \"addresses\", EmitDefaultValue = false)] public List<Address> Addresses { get; set; } Property Value Type Description System.Collections.Generic.List < Address > | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(APIV1POSTMultisigListResponse) Returns true if APIV1POSTMultisigListResponse instances are equal Declaration public bool Equals(APIV1POSTMultisigListResponse input) Parameters Type Name Description APIV1POSTMultisigListResponse input Instance of APIV1POSTMultisigListResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTMultisigTransactionSignResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTMultisigTransactionSignResponse.html",
    "title": "Class APIV1POSTMultisigTransactionSignResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTMultisigTransactionSignResponse APIV1POSTMultisigTransactionSignResponse is the repsonse to POST /v1/multisig/sign friendly:SignMultisigResponse Inheritance System.Object APIV1POSTMultisigTransactionSignResponse Implements System.IEquatable < APIV1POSTMultisigTransactionSignResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTMultisigTransactionSignResponse : IEquatable<APIV1POSTMultisigTransactionSignResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTMultisigTransactionSignResponse(Nullable<Boolean>, String, MultisigSig) Initializes a new instance of the APIV1POSTMultisigTransactionSignResponse class. Declaration public APIV1POSTMultisigTransactionSignResponse(bool? error = default(bool? ), string message = null, MultisigSig multisig = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. MultisigSig multisig multisig. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source Multisig Gets or Sets Multisig Declaration [DataMember(Name = \"multisig\", EmitDefaultValue = false)] public MultisigSig Multisig { get; set; } Property Value Type Description MultisigSig Methods | Improve this Doc View Source Equals(APIV1POSTMultisigTransactionSignResponse) Returns true if APIV1POSTMultisigTransactionSignResponse instances are equal Declaration public bool Equals(APIV1POSTMultisigTransactionSignResponse input) Parameters Type Name Description APIV1POSTMultisigTransactionSignResponse input Instance of APIV1POSTMultisigTransactionSignResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTTransactionSignResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTTransactionSignResponse.html",
    "title": "Class APIV1POSTTransactionSignResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTTransactionSignResponse APIV1POSTTransactionSignResponse is the repsonse to POST /v1/transaction/sign friendly:SignTransactionResponse Inheritance System.Object APIV1POSTTransactionSignResponse Implements System.IEquatable < APIV1POSTTransactionSignResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTTransactionSignResponse : IEquatable<APIV1POSTTransactionSignResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTTransactionSignResponse(Nullable<Boolean>, String, List<Nullable<Int32>>) Initializes a new instance of the APIV1POSTTransactionSignResponse class. Declaration public APIV1POSTTransactionSignResponse(bool? error = default(bool? ), string message = null, List<int?> signedTransaction = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. System.Collections.Generic.List < System.Nullable < System.Int32 >> signedTransaction signedTransaction. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source SignedTransaction Gets or Sets SignedTransaction Declaration [DataMember(Name = \"signed_transaction\", EmitDefaultValue = false)] public List<int?> SignedTransaction { get; set; } Property Value Type Description System.Collections.Generic.List < System.Nullable < System.Int32 >> Methods | Improve this Doc View Source Equals(APIV1POSTTransactionSignResponse) Returns true if APIV1POSTTransactionSignResponse instances are equal Declaration public bool Equals(APIV1POSTTransactionSignResponse input) Parameters Type Name Description APIV1POSTTransactionSignResponse input Instance of APIV1POSTTransactionSignResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTWalletInfoResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTWalletInfoResponse.html",
    "title": "Class APIV1POSTWalletInfoResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTWalletInfoResponse APIV1POSTWalletInfoResponse is the response to POST /v1/wallet/info friendly:WalletInfoResponse Inheritance System.Object APIV1POSTWalletInfoResponse Implements System.IEquatable < APIV1POSTWalletInfoResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTWalletInfoResponse : IEquatable<APIV1POSTWalletInfoResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTWalletInfoResponse(Nullable<Boolean>, String, APIV1WalletHandle) Initializes a new instance of the APIV1POSTWalletInfoResponse class. Declaration public APIV1POSTWalletInfoResponse(bool? error = default(bool? ), string message = null, APIV1WalletHandle walletHandle = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. APIV1WalletHandle walletHandle walletHandle. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletHandle Gets or Sets WalletHandle Declaration [DataMember(Name = \"wallet_handle\", EmitDefaultValue = false)] public APIV1WalletHandle WalletHandle { get; set; } Property Value Type Description APIV1WalletHandle Methods | Improve this Doc View Source Equals(APIV1POSTWalletInfoResponse) Returns true if APIV1POSTWalletInfoResponse instances are equal Declaration public bool Equals(APIV1POSTWalletInfoResponse input) Parameters Type Name Description APIV1POSTWalletInfoResponse input Instance of APIV1POSTWalletInfoResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTWalletInitResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTWalletInitResponse.html",
    "title": "Class APIV1POSTWalletInitResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTWalletInitResponse APIV1POSTWalletInitResponse is the response to POST /v1/wallet/init friendly:InitWalletHandleTokenResponse Inheritance System.Object APIV1POSTWalletInitResponse Implements System.IEquatable < APIV1POSTWalletInitResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTWalletInitResponse : IEquatable<APIV1POSTWalletInitResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTWalletInitResponse(Nullable<Boolean>, String, String) Initializes a new instance of the APIV1POSTWalletInitResponse class. Declaration public APIV1POSTWalletInitResponse(bool? error = default(bool? ), string message = null, string walletHandleToken = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(APIV1POSTWalletInitResponse) Returns true if APIV1POSTWalletInitResponse instances are equal Declaration public bool Equals(APIV1POSTWalletInitResponse input) Parameters Type Name Description APIV1POSTWalletInitResponse input Instance of APIV1POSTWalletInitResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTWalletReleaseResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTWalletReleaseResponse.html",
    "title": "Class APIV1POSTWalletReleaseResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTWalletReleaseResponse APIV1POSTWalletReleaseResponse is the response to POST /v1/wallet/release friendly:ReleaseWalletHandleTokenResponse Inheritance System.Object APIV1POSTWalletReleaseResponse Implements System.IEquatable < APIV1POSTWalletReleaseResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTWalletReleaseResponse : IEquatable<APIV1POSTWalletReleaseResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTWalletReleaseResponse(Nullable<Boolean>, String) Initializes a new instance of the APIV1POSTWalletReleaseResponse class. Declaration public APIV1POSTWalletReleaseResponse(bool? error = default(bool? ), string message = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(APIV1POSTWalletReleaseResponse) Returns true if APIV1POSTWalletReleaseResponse instances are equal Declaration public bool Equals(APIV1POSTWalletReleaseResponse input) Parameters Type Name Description APIV1POSTWalletReleaseResponse input Instance of APIV1POSTWalletReleaseResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTWalletRenameResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTWalletRenameResponse.html",
    "title": "Class APIV1POSTWalletRenameResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTWalletRenameResponse APIV1POSTWalletRenameResponse is the response to POST /v1/wallet/rename friendly:RenameWalletResponse Inheritance System.Object APIV1POSTWalletRenameResponse Implements System.IEquatable < APIV1POSTWalletRenameResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTWalletRenameResponse : IEquatable<APIV1POSTWalletRenameResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTWalletRenameResponse(Nullable<Boolean>, String, APIV1Wallet) Initializes a new instance of the APIV1POSTWalletRenameResponse class. Declaration public APIV1POSTWalletRenameResponse(bool? error = default(bool? ), string message = null, APIV1Wallet wallet = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. APIV1Wallet wallet wallet. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source Wallet Gets or Sets Wallet Declaration [DataMember(Name = \"wallet\", EmitDefaultValue = false)] public APIV1Wallet Wallet { get; set; } Property Value Type Description APIV1Wallet Methods | Improve this Doc View Source Equals(APIV1POSTWalletRenameResponse) Returns true if APIV1POSTWalletRenameResponse instances are equal Declaration public bool Equals(APIV1POSTWalletRenameResponse input) Parameters Type Name Description APIV1POSTWalletRenameResponse input Instance of APIV1POSTWalletRenameResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTWalletRenewResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTWalletRenewResponse.html",
    "title": "Class APIV1POSTWalletRenewResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTWalletRenewResponse APIV1POSTWalletRenewResponse is the response to POST /v1/wallet/renew friendly:RenewWalletHandleTokenResponse Inheritance System.Object APIV1POSTWalletRenewResponse Implements System.IEquatable < APIV1POSTWalletRenewResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTWalletRenewResponse : IEquatable<APIV1POSTWalletRenewResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTWalletRenewResponse(Nullable<Boolean>, String, APIV1WalletHandle) Initializes a new instance of the APIV1POSTWalletRenewResponse class. Declaration public APIV1POSTWalletRenewResponse(bool? error = default(bool? ), string message = null, APIV1WalletHandle walletHandle = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. APIV1WalletHandle walletHandle walletHandle. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletHandle Gets or Sets WalletHandle Declaration [DataMember(Name = \"wallet_handle\", EmitDefaultValue = false)] public APIV1WalletHandle WalletHandle { get; set; } Property Value Type Description APIV1WalletHandle Methods | Improve this Doc View Source Equals(APIV1POSTWalletRenewResponse) Returns true if APIV1POSTWalletRenewResponse instances are equal Declaration public bool Equals(APIV1POSTWalletRenewResponse input) Parameters Type Name Description APIV1POSTWalletRenewResponse input Instance of APIV1POSTWalletRenewResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1POSTWalletResponse.html": {
    "href": "api/Algorand.Kmd.Model.APIV1POSTWalletResponse.html",
    "title": "Class APIV1POSTWalletResponse | Dotnet Algorand Documents",
    "keywords": "Class APIV1POSTWalletResponse APIV1POSTWalletResponse is the response to POST /v1/wallet friendly:CreateWalletResponse Inheritance System.Object APIV1POSTWalletResponse Implements System.IEquatable < APIV1POSTWalletResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1POSTWalletResponse : IEquatable<APIV1POSTWalletResponse>, IValidatableObject Constructors | Improve this Doc View Source APIV1POSTWalletResponse(Nullable<Boolean>, String, APIV1Wallet) Initializes a new instance of the APIV1POSTWalletResponse class. Declaration public APIV1POSTWalletResponse(bool? error = default(bool? ), string message = null, APIV1Wallet wallet = null) Parameters Type Name Description System.Nullable < System.Boolean > error error. System.String message message. APIV1Wallet wallet wallet. Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public bool? Error { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source Wallet Gets or Sets Wallet Declaration [DataMember(Name = \"wallet\", EmitDefaultValue = false)] public APIV1Wallet Wallet { get; set; } Property Value Type Description APIV1Wallet Methods | Improve this Doc View Source Equals(APIV1POSTWalletResponse) Returns true if APIV1POSTWalletResponse instances are equal Declaration public bool Equals(APIV1POSTWalletResponse input) Parameters Type Name Description APIV1POSTWalletResponse input Instance of APIV1POSTWalletResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1Request.html": {
    "href": "api/Algorand.Kmd.Model.APIV1Request.html",
    "title": "Class APIV1Request | Dotnet Algorand Documents",
    "keywords": "Class APIV1Request APIV1Request is the interface that all API V1 requests must satisfy Inheritance System.Object APIV1Request Implements System.IEquatable < APIV1Request > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1Request : IEquatable<APIV1Request>, IValidatableObject Constructors | Improve this Doc View Source APIV1Request() Initializes a new instance of the APIV1Request class. Declaration public APIV1Request() Methods | Improve this Doc View Source Equals(APIV1Request) Returns true if APIV1Request instances are equal Declaration public bool Equals(APIV1Request input) Parameters Type Name Description APIV1Request input Instance of APIV1Request to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1RequestEnvelope.html": {
    "href": "api/Algorand.Kmd.Model.APIV1RequestEnvelope.html",
    "title": "Class APIV1RequestEnvelope | Dotnet Algorand Documents",
    "keywords": "Class APIV1RequestEnvelope APIV1RequestEnvelope is a common envelope that all API V1 requests must embed Inheritance System.Object APIV1RequestEnvelope Implements System.IEquatable < APIV1RequestEnvelope > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1RequestEnvelope : IEquatable<APIV1RequestEnvelope>, IValidatableObject Constructors | Improve this Doc View Source APIV1RequestEnvelope() Initializes a new instance of the APIV1RequestEnvelope class. Declaration public APIV1RequestEnvelope() Methods | Improve this Doc View Source Equals(APIV1RequestEnvelope) Returns true if APIV1RequestEnvelope instances are equal Declaration public bool Equals(APIV1RequestEnvelope input) Parameters Type Name Description APIV1RequestEnvelope input Instance of APIV1RequestEnvelope to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1Wallet.html": {
    "href": "api/Algorand.Kmd.Model.APIV1Wallet.html",
    "title": "Class APIV1Wallet | Dotnet Algorand Documents",
    "keywords": "Class APIV1Wallet APIV1Wallet is the API's representation of a wallet Inheritance System.Object APIV1Wallet Implements System.IEquatable < APIV1Wallet > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1Wallet : IEquatable<APIV1Wallet>, IValidatableObject Constructors | Improve this Doc View Source APIV1Wallet(String, Nullable<UInt32>, String, Nullable<Boolean>, String, List<TxType>) Initializes a new instance of the APIV1Wallet class. Declaration public APIV1Wallet(string driverName = null, uint? driverVersion = default(uint? ), string id = null, bool? mnemonicUx = default(bool? ), string name = null, List<TxType> supportedTxs = null) Parameters Type Name Description System.String driverName driverName. System.Nullable < System.UInt32 > driverVersion driverVersion. System.String id id. System.Nullable < System.Boolean > mnemonicUx mnemonicUx. System.String name name. System.Collections.Generic.List < TxType > supportedTxs supportedTxs. Properties | Improve this Doc View Source DriverName Gets or Sets DriverName Declaration [DataMember(Name = \"driver_name\", EmitDefaultValue = false)] public string DriverName { get; set; } Property Value Type Description System.String | Improve this Doc View Source DriverVersion Gets or Sets DriverVersion Declaration [DataMember(Name = \"driver_version\", EmitDefaultValue = false)] public uint? DriverVersion { get; set; } Property Value Type Description System.Nullable < System.UInt32 > | Improve this Doc View Source Id Gets or Sets Id Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source MnemonicUx Gets or Sets MnemonicUx Declaration [DataMember(Name = \"mnemonic_ux\", EmitDefaultValue = false)] public bool? MnemonicUx { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Name Gets or Sets Name Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source SupportedTxs Gets or Sets SupportedTxs Declaration [DataMember(Name = \"supported_txs\", EmitDefaultValue = false)] public List<TxType> SupportedTxs { get; set; } Property Value Type Description System.Collections.Generic.List < TxType > Methods | Improve this Doc View Source Equals(APIV1Wallet) Returns true if APIV1Wallet instances are equal Declaration public bool Equals(APIV1Wallet input) Parameters Type Name Description APIV1Wallet input Instance of APIV1Wallet to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.APIV1WalletHandle.html": {
    "href": "api/Algorand.Kmd.Model.APIV1WalletHandle.html",
    "title": "Class APIV1WalletHandle | Dotnet Algorand Documents",
    "keywords": "Class APIV1WalletHandle APIV1WalletHandle includes the wallet the handle corresponds to and the number of number of seconds to expiration Inheritance System.Object APIV1WalletHandle Implements System.IEquatable < APIV1WalletHandle > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class APIV1WalletHandle : IEquatable<APIV1WalletHandle>, IValidatableObject Constructors | Improve this Doc View Source APIV1WalletHandle(Nullable<Int64>, APIV1Wallet) Initializes a new instance of the APIV1WalletHandle class. Declaration public APIV1WalletHandle(long? expiresSeconds = default(long? ), APIV1Wallet wallet = null) Parameters Type Name Description System.Nullable < System.Int64 > expiresSeconds expiresSeconds. APIV1Wallet wallet wallet. Properties | Improve this Doc View Source ExpiresSeconds Gets or Sets ExpiresSeconds Declaration [DataMember(Name = \"expires_seconds\", EmitDefaultValue = false)] public long? ExpiresSeconds { get; set; } Property Value Type Description System.Nullable < System.Int64 > | Improve this Doc View Source Wallet Gets or Sets Wallet Declaration [DataMember(Name = \"wallet\", EmitDefaultValue = false)] public APIV1Wallet Wallet { get; set; } Property Value Type Description APIV1Wallet Methods | Improve this Doc View Source Equals(APIV1WalletHandle) Returns true if APIV1WalletHandle instances are equal Declaration public bool Equals(APIV1WalletHandle input) Parameters Type Name Description APIV1WalletHandle input Instance of APIV1WalletHandle to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.CreateWalletRequest.html": {
    "href": "api/Algorand.Kmd.Model.CreateWalletRequest.html",
    "title": "Class CreateWalletRequest | Dotnet Algorand Documents",
    "keywords": "Class CreateWalletRequest APIV1POSTWalletRequest is the request for POST /v1/wallet Inheritance System.Object CreateWalletRequest Implements System.IEquatable < CreateWalletRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class CreateWalletRequest : IEquatable<CreateWalletRequest>, IValidatableObject Constructors | Improve this Doc View Source CreateWalletRequest(MasterDerivationKey, String, String, String) Initializes a new instance of the CreateWalletRequest class. Declaration public CreateWalletRequest(MasterDerivationKey masterDerivationKey = null, string walletDriverName = null, string walletName = null, string walletPassword = null) Parameters Type Name Description MasterDerivationKey masterDerivationKey masterDerivationKey. System.String walletDriverName walletDriverName. System.String walletName walletName. System.String walletPassword walletPassword. Properties | Improve this Doc View Source MasterDerivationKey Gets or Sets MasterDerivationKey Declaration [DataMember(Name = \"master_derivation_key\", EmitDefaultValue = false)] public MasterDerivationKey MasterDerivationKey { get; set; } Property Value Type Description MasterDerivationKey | Improve this Doc View Source WalletDriverName Gets or Sets WalletDriverName Declaration [DataMember(Name = \"wallet_driver_name\", EmitDefaultValue = false)] public string WalletDriverName { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletName Gets or Sets WalletName Declaration [DataMember(Name = \"wallet_name\", EmitDefaultValue = false)] public string WalletName { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(CreateWalletRequest) Returns true if CreateWalletRequest instances are equal Declaration public bool Equals(CreateWalletRequest input) Parameters Type Name Description CreateWalletRequest input Instance of CreateWalletRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.DeleteKeyRequest.html": {
    "href": "api/Algorand.Kmd.Model.DeleteKeyRequest.html",
    "title": "Class DeleteKeyRequest | Dotnet Algorand Documents",
    "keywords": "Class DeleteKeyRequest APIV1DELETEKeyRequest is the request for DELETE /v1/key Inheritance System.Object DeleteKeyRequest Implements System.IEquatable < DeleteKeyRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class DeleteKeyRequest : IEquatable<DeleteKeyRequest>, IValidatableObject Constructors | Improve this Doc View Source DeleteKeyRequest(PublicKey, String, String) Initializes a new instance of the DeleteKeyRequest class. Declaration public DeleteKeyRequest(PublicKey publicKey = null, string walletHandleToken = null, string walletPassword = null) Parameters Type Name Description PublicKey publicKey publicKey. System.String walletHandleToken walletHandleToken. System.String walletPassword walletPassword. Properties | Improve this Doc View Source PublicKey Gets or Sets PublicKey Declaration [DataMember(Name = \"public_key\", EmitDefaultValue = false)] public PublicKey PublicKey { get; set; } Property Value Type Description PublicKey | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(DeleteKeyRequest) Returns true if DeleteKeyRequest instances are equal Declaration public bool Equals(DeleteKeyRequest input) Parameters Type Name Description DeleteKeyRequest input Instance of DeleteKeyRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.DeleteMultisigRequest.html": {
    "href": "api/Algorand.Kmd.Model.DeleteMultisigRequest.html",
    "title": "Class DeleteMultisigRequest | Dotnet Algorand Documents",
    "keywords": "Class DeleteMultisigRequest APIV1POSTMultisigDeleteRequest is the request for POST /v1/multisig/delete Inheritance System.Object DeleteMultisigRequest Implements System.IEquatable < DeleteMultisigRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class DeleteMultisigRequest : IEquatable<DeleteMultisigRequest>, IValidatableObject Constructors | Improve this Doc View Source DeleteMultisigRequest(Address, String, String) Initializes a new instance of the DeleteMultisigRequest class. Declaration public DeleteMultisigRequest(Address address = null, string walletHandleToken = null, string walletPassword = null) Parameters Type Name Description Address address address. System.String walletHandleToken walletHandleToken. System.String walletPassword walletPassword. Properties | Improve this Doc View Source Address Gets or Sets Address Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public Address Address { get; set; } Property Value Type Description Address | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(DeleteMultisigRequest) Returns true if DeleteMultisigRequest instances are equal Declaration public bool Equals(DeleteMultisigRequest input) Parameters Type Name Description DeleteMultisigRequest input Instance of DeleteMultisigRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.Digest.html": {
    "href": "api/Algorand.Kmd.Model.Digest.html",
    "title": "Class Digest | Dotnet Algorand Documents",
    "keywords": "Class Digest Digest Inheritance System.Object System.Collections.Generic.List < System.Nullable < System.Int32 >> Digest Implements System.Collections.Generic.IList < System.Nullable < System.Int32 >> System.Collections.Generic.ICollection < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyList < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyCollection < System.Nullable < System.Int32 >> System.Collections.Generic.IEnumerable < System.Nullable < System.Int32 >> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable < Digest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.Add(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AddRange(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AsReadOnly() System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Int32, System.Int32, System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Clear() System.Collections.Generic.List<System.Nullable<System.Int32>>.Contains(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ConvertAll<TOutput>(System.Converter<System.Nullable<System.Int32>, TOutput>) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[]) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[], System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Int32, System.Nullable<System.Int32>[], System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Exists(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Find(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLast(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ForEach(System.Action<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Insert(System.Int32, System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Remove(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAt(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse() System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort() System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Comparison<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.ToArray() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrimExcess() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrueForAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Capacity System.Collections.Generic.List<System.Nullable<System.Int32>>.Count System.Collections.Generic.List<System.Nullable<System.Int32>>.Item[System.Int32] System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.ICollection<System.Nullable<System.Int32>>.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class Digest : List<int?>, IList<int?>, ICollection<int?>, IReadOnlyList<int?>, IReadOnlyCollection<int?>, IEnumerable<int?>, IList, ICollection, IEnumerable, IEquatable<Digest>, IValidatableObject Constructors | Improve this Doc View Source Digest() Initializes a new instance of the Digest class. Declaration public Digest() Methods | Improve this Doc View Source Equals(Digest) Returns true if Digest instances are equal Declaration public bool Equals(Digest input) Parameters Type Name Description Digest input Instance of Digest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.Ed25519PrivateKey.html": {
    "href": "api/Algorand.Kmd.Model.Ed25519PrivateKey.html",
    "title": "Class Ed25519PrivateKey | Dotnet Algorand Documents",
    "keywords": "Class Ed25519PrivateKey Ed25519PrivateKey Inheritance System.Object System.Collections.Generic.List < System.Nullable < System.Int32 >> Ed25519PrivateKey Implements System.Collections.Generic.IList < System.Nullable < System.Int32 >> System.Collections.Generic.ICollection < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyList < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyCollection < System.Nullable < System.Int32 >> System.Collections.Generic.IEnumerable < System.Nullable < System.Int32 >> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable < Ed25519PrivateKey > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.Add(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AddRange(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AsReadOnly() System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Int32, System.Int32, System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Clear() System.Collections.Generic.List<System.Nullable<System.Int32>>.Contains(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ConvertAll<TOutput>(System.Converter<System.Nullable<System.Int32>, TOutput>) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[]) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[], System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Int32, System.Nullable<System.Int32>[], System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Exists(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Find(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLast(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ForEach(System.Action<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Insert(System.Int32, System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Remove(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAt(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse() System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort() System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Comparison<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.ToArray() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrimExcess() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrueForAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Capacity System.Collections.Generic.List<System.Nullable<System.Int32>>.Count System.Collections.Generic.List<System.Nullable<System.Int32>>.Item[System.Int32] System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.ICollection<System.Nullable<System.Int32>>.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class Ed25519PrivateKey : List<int?>, IList<int?>, ICollection<int?>, IReadOnlyList<int?>, IReadOnlyCollection<int?>, IEnumerable<int?>, IList, ICollection, IEnumerable, IEquatable<Ed25519PrivateKey>, IValidatableObject Constructors | Improve this Doc View Source Ed25519PrivateKey() Initializes a new instance of the Ed25519PrivateKey class. Declaration public Ed25519PrivateKey() Methods | Improve this Doc View Source Equals(Ed25519PrivateKey) Returns true if Ed25519PrivateKey instances are equal Declaration public bool Equals(Ed25519PrivateKey input) Parameters Type Name Description Ed25519PrivateKey input Instance of Ed25519PrivateKey to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.Ed25519PublicKey.html": {
    "href": "api/Algorand.Kmd.Model.Ed25519PublicKey.html",
    "title": "Class Ed25519PublicKey | Dotnet Algorand Documents",
    "keywords": "Class Ed25519PublicKey Ed25519PublicKey Inheritance System.Object System.Collections.Generic.List < System.Nullable < System.Int32 >> Ed25519PublicKey Implements System.Collections.Generic.IList < System.Nullable < System.Int32 >> System.Collections.Generic.ICollection < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyList < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyCollection < System.Nullable < System.Int32 >> System.Collections.Generic.IEnumerable < System.Nullable < System.Int32 >> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable < Ed25519PublicKey > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.Add(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AddRange(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AsReadOnly() System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Int32, System.Int32, System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Clear() System.Collections.Generic.List<System.Nullable<System.Int32>>.Contains(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ConvertAll<TOutput>(System.Converter<System.Nullable<System.Int32>, TOutput>) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[]) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[], System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Int32, System.Nullable<System.Int32>[], System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Exists(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Find(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLast(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ForEach(System.Action<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Insert(System.Int32, System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Remove(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAt(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse() System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort() System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Comparison<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.ToArray() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrimExcess() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrueForAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Capacity System.Collections.Generic.List<System.Nullable<System.Int32>>.Count System.Collections.Generic.List<System.Nullable<System.Int32>>.Item[System.Int32] System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.ICollection<System.Nullable<System.Int32>>.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class Ed25519PublicKey : List<int?>, IList<int?>, ICollection<int?>, IReadOnlyList<int?>, IReadOnlyCollection<int?>, IEnumerable<int?>, IList, ICollection, IEnumerable, IEquatable<Ed25519PublicKey>, IValidatableObject Constructors | Improve this Doc View Source Ed25519PublicKey() Initializes a new instance of the Ed25519PublicKey class. Declaration public Ed25519PublicKey() Methods | Improve this Doc View Source Equals(Ed25519PublicKey) Returns true if Ed25519PublicKey instances are equal Declaration public bool Equals(Ed25519PublicKey input) Parameters Type Name Description Ed25519PublicKey input Instance of Ed25519PublicKey to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.Ed25519Signature.html": {
    "href": "api/Algorand.Kmd.Model.Ed25519Signature.html",
    "title": "Class Ed25519Signature | Dotnet Algorand Documents",
    "keywords": "Class Ed25519Signature Ed25519Signature Inheritance System.Object System.Collections.Generic.List < System.Nullable < System.Int32 >> Ed25519Signature Implements System.Collections.Generic.IList < System.Nullable < System.Int32 >> System.Collections.Generic.ICollection < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyList < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyCollection < System.Nullable < System.Int32 >> System.Collections.Generic.IEnumerable < System.Nullable < System.Int32 >> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable < Ed25519Signature > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.Add(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AddRange(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AsReadOnly() System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Int32, System.Int32, System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Clear() System.Collections.Generic.List<System.Nullable<System.Int32>>.Contains(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ConvertAll<TOutput>(System.Converter<System.Nullable<System.Int32>, TOutput>) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[]) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[], System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Int32, System.Nullable<System.Int32>[], System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Exists(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Find(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLast(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ForEach(System.Action<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Insert(System.Int32, System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Remove(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAt(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse() System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort() System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Comparison<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.ToArray() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrimExcess() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrueForAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Capacity System.Collections.Generic.List<System.Nullable<System.Int32>>.Count System.Collections.Generic.List<System.Nullable<System.Int32>>.Item[System.Int32] System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.ICollection<System.Nullable<System.Int32>>.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class Ed25519Signature : List<int?>, IList<int?>, ICollection<int?>, IReadOnlyList<int?>, IReadOnlyCollection<int?>, IEnumerable<int?>, IList, ICollection, IEnumerable, IEquatable<Ed25519Signature>, IValidatableObject Constructors | Improve this Doc View Source Ed25519Signature() Initializes a new instance of the Ed25519Signature class. Declaration public Ed25519Signature() Methods | Improve this Doc View Source Equals(Ed25519Signature) Returns true if Ed25519Signature instances are equal Declaration public bool Equals(Ed25519Signature input) Parameters Type Name Description Ed25519Signature input Instance of Ed25519Signature to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ExportKeyRequest.html": {
    "href": "api/Algorand.Kmd.Model.ExportKeyRequest.html",
    "title": "Class ExportKeyRequest | Dotnet Algorand Documents",
    "keywords": "Class ExportKeyRequest APIV1POSTKeyExportRequest is the request for POST /v1/key/export Inheritance System.Object ExportKeyRequest Implements System.IEquatable < ExportKeyRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ExportKeyRequest : IEquatable<ExportKeyRequest>, IValidatableObject Constructors | Improve this Doc View Source ExportKeyRequest(PublicKey, String, String) Initializes a new instance of the ExportKeyRequest class. Declaration public ExportKeyRequest(PublicKey publicKey = null, string walletHandleToken = null, string walletPassword = null) Parameters Type Name Description PublicKey publicKey publicKey. System.String walletHandleToken walletHandleToken. System.String walletPassword walletPassword. Properties | Improve this Doc View Source PublicKey Gets or Sets PublicKey Declaration [DataMember(Name = \"public_key\", EmitDefaultValue = false)] public PublicKey PublicKey { get; set; } Property Value Type Description PublicKey | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ExportKeyRequest) Returns true if ExportKeyRequest instances are equal Declaration public bool Equals(ExportKeyRequest input) Parameters Type Name Description ExportKeyRequest input Instance of ExportKeyRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ExportMasterKeyRequest.html": {
    "href": "api/Algorand.Kmd.Model.ExportMasterKeyRequest.html",
    "title": "Class ExportMasterKeyRequest | Dotnet Algorand Documents",
    "keywords": "Class ExportMasterKeyRequest APIV1POSTMasterKeyExportRequest is the request for POST /v1/master_key/export Inheritance System.Object ExportMasterKeyRequest Implements System.IEquatable < ExportMasterKeyRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ExportMasterKeyRequest : IEquatable<ExportMasterKeyRequest>, IValidatableObject Constructors | Improve this Doc View Source ExportMasterKeyRequest(String, String) Initializes a new instance of the ExportMasterKeyRequest class. Declaration public ExportMasterKeyRequest(string walletHandleToken = null, string walletPassword = null) Parameters Type Name Description System.String walletHandleToken walletHandleToken. System.String walletPassword walletPassword. Properties | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ExportMasterKeyRequest) Returns true if ExportMasterKeyRequest instances are equal Declaration public bool Equals(ExportMasterKeyRequest input) Parameters Type Name Description ExportMasterKeyRequest input Instance of ExportMasterKeyRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ExportMultisigRequest.html": {
    "href": "api/Algorand.Kmd.Model.ExportMultisigRequest.html",
    "title": "Class ExportMultisigRequest | Dotnet Algorand Documents",
    "keywords": "Class ExportMultisigRequest APIV1POSTMultisigExportRequest is the request for POST /v1/multisig/export Inheritance System.Object ExportMultisigRequest Implements System.IEquatable < ExportMultisigRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ExportMultisigRequest : IEquatable<ExportMultisigRequest>, IValidatableObject Constructors | Improve this Doc View Source ExportMultisigRequest(Address, String, String) Initializes a new instance of the ExportMultisigRequest class. Declaration public ExportMultisigRequest(Address address = null, string walletHandleToken = null, string walletPassword = null) Parameters Type Name Description Address address address. System.String walletHandleToken walletHandleToken. System.String walletPassword walletPassword. Properties | Improve this Doc View Source Address Gets or Sets Address Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public Address Address { get; set; } Property Value Type Description Address | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ExportMultisigRequest) Returns true if ExportMultisigRequest instances are equal Declaration public bool Equals(ExportMultisigRequest input) Parameters Type Name Description ExportMultisigRequest input Instance of ExportMultisigRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.GenerateKeyRequest.html": {
    "href": "api/Algorand.Kmd.Model.GenerateKeyRequest.html",
    "title": "Class GenerateKeyRequest | Dotnet Algorand Documents",
    "keywords": "Class GenerateKeyRequest APIV1POSTKeyRequest is the request for POST /v1/key Inheritance System.Object GenerateKeyRequest Implements System.IEquatable < GenerateKeyRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class GenerateKeyRequest : IEquatable<GenerateKeyRequest>, IValidatableObject Constructors | Improve this Doc View Source GenerateKeyRequest(Nullable<Boolean>, String) Initializes a new instance of the GenerateKeyRequest class. Declaration public GenerateKeyRequest(bool? displayMnemonic = default(bool? ), string walletHandleToken = null) Parameters Type Name Description System.Nullable < System.Boolean > displayMnemonic displayMnemonic. System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source DisplayMnemonic Gets or Sets DisplayMnemonic Declaration [DataMember(Name = \"display_mnemonic\", EmitDefaultValue = false)] public bool? DisplayMnemonic { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(GenerateKeyRequest) Returns true if GenerateKeyRequest instances are equal Declaration public bool Equals(GenerateKeyRequest input) Parameters Type Name Description GenerateKeyRequest input Instance of GenerateKeyRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.html": {
    "href": "api/Algorand.Kmd.Model.html",
    "title": "Namespace Algorand.Kmd.Model | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.Kmd.Model Classes Address Address APIV1DELETEKeyResponse APIV1DELETEKeyResponse is the response to DELETE /v1/key friendly:DeleteKeyResponse APIV1GETWalletsResponse APIV1GETWalletsResponse is the response to GET /v1/wallets friendly:ListWalletsResponse APIV1POSTKeyExportResponse APIV1POSTKeyExportResponse is the reponse to POST /v1/key/export friendly:ExportKeyResponse APIV1POSTKeyImportResponse APIV1POSTKeyImportResponse is the repsonse to POST /v1/key/import friendly:ImportKeyResponse APIV1POSTKeyResponse APIV1POSTKeyResponse is the response to POST /v1/key friendly:GenerateKeyResponse APIV1POSTKeysListResponse APIV1POSTKeysListResponse is the response to POST /v1/keys/list friendly:ListKeysResponse APIV1POSTMasterKeyExportResponse APIV1POSTMasterKeyExportResponse is the reponse to POST /v1/master_key/export friendly:ExportMasterKeyResponse APIV1POSTMultisigDeleteResponse APIV1POSTMultisigDeleteResponse is the response to POST /v1/multisig/delete` friendly:DeleteMultisigResponse APIV1POSTMultisigExportResponse APIV1POSTMultisigExportResponse is the response to POST /v1/multisig/export friendly:ExportMultisigResponse APIV1POSTMultisigImportResponse APIV1POSTMultisigImportResponse is the response to POST /v1/multisig/import friendly:ImportMultisigResponse APIV1POSTMultisigListResponse APIV1POSTMultisigListResponse is the response to POST /v1/multisig/list friendly:ListMultisigResponse APIV1POSTMultisigTransactionSignResponse APIV1POSTMultisigTransactionSignResponse is the repsonse to POST /v1/multisig/sign friendly:SignMultisigResponse APIV1POSTTransactionSignResponse APIV1POSTTransactionSignResponse is the repsonse to POST /v1/transaction/sign friendly:SignTransactionResponse APIV1POSTWalletInfoResponse APIV1POSTWalletInfoResponse is the response to POST /v1/wallet/info friendly:WalletInfoResponse APIV1POSTWalletInitResponse APIV1POSTWalletInitResponse is the response to POST /v1/wallet/init friendly:InitWalletHandleTokenResponse APIV1POSTWalletReleaseResponse APIV1POSTWalletReleaseResponse is the response to POST /v1/wallet/release friendly:ReleaseWalletHandleTokenResponse APIV1POSTWalletRenameResponse APIV1POSTWalletRenameResponse is the response to POST /v1/wallet/rename friendly:RenameWalletResponse APIV1POSTWalletRenewResponse APIV1POSTWalletRenewResponse is the response to POST /v1/wallet/renew friendly:RenewWalletHandleTokenResponse APIV1POSTWalletResponse APIV1POSTWalletResponse is the response to POST /v1/wallet friendly:CreateWalletResponse APIV1Request APIV1Request is the interface that all API V1 requests must satisfy APIV1RequestEnvelope APIV1RequestEnvelope is a common envelope that all API V1 requests must embed APIV1Wallet APIV1Wallet is the API's representation of a wallet APIV1WalletHandle APIV1WalletHandle includes the wallet the handle corresponds to and the number of number of seconds to expiration CreateWalletRequest APIV1POSTWalletRequest is the request for POST /v1/wallet DeleteKeyRequest APIV1DELETEKeyRequest is the request for DELETE /v1/key DeleteMultisigRequest APIV1POSTMultisigDeleteRequest is the request for POST /v1/multisig/delete Digest Digest Ed25519PrivateKey Ed25519PrivateKey Ed25519PublicKey Ed25519PublicKey Ed25519Signature Ed25519Signature ExportKeyRequest APIV1POSTKeyExportRequest is the request for POST /v1/key/export ExportMasterKeyRequest APIV1POSTMasterKeyExportRequest is the request for POST /v1/master_key/export ExportMultisigRequest APIV1POSTMultisigExportRequest is the request for POST /v1/multisig/export GenerateKeyRequest APIV1POSTKeyRequest is the request for POST /v1/key ImportKeyRequest APIV1POSTKeyImportRequest is the request for POST /v1/key/import ImportMultisigRequest APIV1POSTMultisigImportRequest is the request for POST /v1/multisig/import InitWalletHandleTokenRequest APIV1POSTWalletInitRequest is the request for POST /v1/wallet/init ListKeysRequest APIV1POSTKeysListRequest is the request for POST /v1/keys/list ListMultisigRequest APIV1POSTMultisigListRequest is the request for POST /v1/multisig/list ListWalletsRequest APIV1GETWalletsRequest is the request for GET /v1/wallets MasterDerivationKey MasterDerivationKey is used to derive ed25519 keys for use in wallets MultisigSig MultisigSig is the structure that holds multiple Subsigs MultisigSubsig MultisigSubsig is a struct that holds a pair of public key and signatures signatures may be empty PrivateKey PrivateKey PublicKey PublicKey ReleaseWalletHandleTokenRequest APIV1POSTWalletReleaseRequest is the request for POST /v1/wallet/release RenameWalletRequest APIV1POSTWalletRenameRequest is the request for POST /v1/wallet/rename RenewWalletHandleTokenRequest APIV1POSTWalletRenewRequest is the request for POST /v1/wallet/renew Signature Signature SignMultisigRequest APIV1POSTMultisigTransactionSignRequest is the request for POST /v1/multisig/sign SignTransactionRequest APIV1POSTTransactionSignRequest is the request for POST /v1/transaction/sign TxType TxType is the type of the transaction written to the ledger VersionsRequest VersionsRequest is the request for GET /versions VersionsResponse VersionsResponse is the response to GET /versions friendly:VersionsResponse WalletInfoRequest APIV1POSTWalletInfoRequest is the request for POST /v1/wallet/info"
  },
  "api/Algorand.Kmd.Model.ImportKeyRequest.html": {
    "href": "api/Algorand.Kmd.Model.ImportKeyRequest.html",
    "title": "Class ImportKeyRequest | Dotnet Algorand Documents",
    "keywords": "Class ImportKeyRequest APIV1POSTKeyImportRequest is the request for POST /v1/key/import Inheritance System.Object ImportKeyRequest Implements System.IEquatable < ImportKeyRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ImportKeyRequest : IEquatable<ImportKeyRequest>, IValidatableObject Constructors | Improve this Doc View Source ImportKeyRequest(PrivateKey, String) Initializes a new instance of the ImportKeyRequest class. Declaration public ImportKeyRequest(PrivateKey privateKey = null, string walletHandleToken = null) Parameters Type Name Description PrivateKey privateKey privateKey. System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source PrivateKey Gets or Sets PrivateKey Declaration [DataMember(Name = \"private_key\", EmitDefaultValue = false)] public PrivateKey PrivateKey { get; set; } Property Value Type Description PrivateKey | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ImportKeyRequest) Returns true if ImportKeyRequest instances are equal Declaration public bool Equals(ImportKeyRequest input) Parameters Type Name Description ImportKeyRequest input Instance of ImportKeyRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ImportMultisigRequest.html": {
    "href": "api/Algorand.Kmd.Model.ImportMultisigRequest.html",
    "title": "Class ImportMultisigRequest | Dotnet Algorand Documents",
    "keywords": "Class ImportMultisigRequest APIV1POSTMultisigImportRequest is the request for POST /v1/multisig/import Inheritance System.Object ImportMultisigRequest Implements System.IEquatable < ImportMultisigRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ImportMultisigRequest : IEquatable<ImportMultisigRequest>, IValidatableObject Constructors | Improve this Doc View Source ImportMultisigRequest(Nullable<Int32>, List<PublicKey>, Nullable<Int32>, String) Initializes a new instance of the ImportMultisigRequest class. Declaration public ImportMultisigRequest(int? multisigVersion = default(int? ), List<PublicKey> pks = null, int? threshold = default(int? ), string walletHandleToken = null) Parameters Type Name Description System.Nullable < System.Int32 > multisigVersion multisigVersion. System.Collections.Generic.List < PublicKey > pks pks. System.Nullable < System.Int32 > threshold threshold. System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source MultisigVersion Gets or Sets MultisigVersion Declaration [DataMember(Name = \"multisig_version\", EmitDefaultValue = false)] public int? MultisigVersion { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Pks Gets or Sets Pks Declaration [DataMember(Name = \"pks\", EmitDefaultValue = false)] public List<PublicKey> Pks { get; set; } Property Value Type Description System.Collections.Generic.List < PublicKey > | Improve this Doc View Source Threshold Gets or Sets Threshold Declaration [DataMember(Name = \"threshold\", EmitDefaultValue = false)] public int? Threshold { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ImportMultisigRequest) Returns true if ImportMultisigRequest instances are equal Declaration public bool Equals(ImportMultisigRequest input) Parameters Type Name Description ImportMultisigRequest input Instance of ImportMultisigRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.InitWalletHandleTokenRequest.html": {
    "href": "api/Algorand.Kmd.Model.InitWalletHandleTokenRequest.html",
    "title": "Class InitWalletHandleTokenRequest | Dotnet Algorand Documents",
    "keywords": "Class InitWalletHandleTokenRequest APIV1POSTWalletInitRequest is the request for POST /v1/wallet/init Inheritance System.Object InitWalletHandleTokenRequest Implements System.IEquatable < InitWalletHandleTokenRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class InitWalletHandleTokenRequest : IEquatable<InitWalletHandleTokenRequest>, IValidatableObject Constructors | Improve this Doc View Source InitWalletHandleTokenRequest(String, String) Initializes a new instance of the InitWalletHandleTokenRequest class. Declaration public InitWalletHandleTokenRequest(string walletId = null, string walletPassword = null) Parameters Type Name Description System.String walletId walletId. System.String walletPassword walletPassword. Properties | Improve this Doc View Source WalletId Gets or Sets WalletId Declaration [DataMember(Name = \"wallet_id\", EmitDefaultValue = false)] public string WalletId { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(InitWalletHandleTokenRequest) Returns true if InitWalletHandleTokenRequest instances are equal Declaration public bool Equals(InitWalletHandleTokenRequest input) Parameters Type Name Description InitWalletHandleTokenRequest input Instance of InitWalletHandleTokenRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ListKeysRequest.html": {
    "href": "api/Algorand.Kmd.Model.ListKeysRequest.html",
    "title": "Class ListKeysRequest | Dotnet Algorand Documents",
    "keywords": "Class ListKeysRequest APIV1POSTKeysListRequest is the request for POST /v1/keys/list Inheritance System.Object ListKeysRequest Implements System.IEquatable < ListKeysRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ListKeysRequest : IEquatable<ListKeysRequest>, IValidatableObject Constructors | Improve this Doc View Source ListKeysRequest(String) Initializes a new instance of the ListKeysRequest class. Declaration public ListKeysRequest(string walletHandleToken = null) Parameters Type Name Description System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ListKeysRequest) Returns true if ListKeysRequest instances are equal Declaration public bool Equals(ListKeysRequest input) Parameters Type Name Description ListKeysRequest input Instance of ListKeysRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ListMultisigRequest.html": {
    "href": "api/Algorand.Kmd.Model.ListMultisigRequest.html",
    "title": "Class ListMultisigRequest | Dotnet Algorand Documents",
    "keywords": "Class ListMultisigRequest APIV1POSTMultisigListRequest is the request for POST /v1/multisig/list Inheritance System.Object ListMultisigRequest Implements System.IEquatable < ListMultisigRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ListMultisigRequest : IEquatable<ListMultisigRequest>, IValidatableObject Constructors | Improve this Doc View Source ListMultisigRequest(String) Initializes a new instance of the ListMultisigRequest class. Declaration public ListMultisigRequest(string walletHandleToken = null) Parameters Type Name Description System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ListMultisigRequest) Returns true if ListMultisigRequest instances are equal Declaration public bool Equals(ListMultisigRequest input) Parameters Type Name Description ListMultisigRequest input Instance of ListMultisigRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ListWalletsRequest.html": {
    "href": "api/Algorand.Kmd.Model.ListWalletsRequest.html",
    "title": "Class ListWalletsRequest | Dotnet Algorand Documents",
    "keywords": "Class ListWalletsRequest APIV1GETWalletsRequest is the request for GET /v1/wallets Inheritance System.Object ListWalletsRequest Implements System.IEquatable < ListWalletsRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ListWalletsRequest : IEquatable<ListWalletsRequest>, IValidatableObject Constructors | Improve this Doc View Source ListWalletsRequest() Initializes a new instance of the ListWalletsRequest class. Declaration public ListWalletsRequest() Methods | Improve this Doc View Source Equals(ListWalletsRequest) Returns true if ListWalletsRequest instances are equal Declaration public bool Equals(ListWalletsRequest input) Parameters Type Name Description ListWalletsRequest input Instance of ListWalletsRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.MasterDerivationKey.html": {
    "href": "api/Algorand.Kmd.Model.MasterDerivationKey.html",
    "title": "Class MasterDerivationKey | Dotnet Algorand Documents",
    "keywords": "Class MasterDerivationKey MasterDerivationKey is used to derive ed25519 keys for use in wallets Inheritance System.Object System.Collections.Generic.List < System.Nullable < System.Int32 >> MasterDerivationKey Implements System.Collections.Generic.IList < System.Nullable < System.Int32 >> System.Collections.Generic.ICollection < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyList < System.Nullable < System.Int32 >> System.Collections.Generic.IReadOnlyCollection < System.Nullable < System.Int32 >> System.Collections.Generic.IEnumerable < System.Nullable < System.Int32 >> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable < MasterDerivationKey > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.Add(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AddRange(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.AsReadOnly() System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.BinarySearch(System.Int32, System.Int32, System.Nullable<System.Int32>, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Clear() System.Collections.Generic.List<System.Nullable<System.Int32>>.Contains(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ConvertAll<TOutput>(System.Converter<System.Nullable<System.Int32>, TOutput>) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[]) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Nullable<System.Int32>[], System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.CopyTo(System.Int32, System.Nullable<System.Int32>[], System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Exists(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Find(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLast(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Int32, System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.FindLastIndex(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.ForEach(System.Action<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.IndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Insert(System.Int32, System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.LastIndexOf(System.Nullable<System.Int32>, System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Remove(System.Nullable<System.Int32>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveAt(System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse() System.Collections.Generic.List<System.Nullable<System.Int32>>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort() System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Comparison<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<System.Nullable<System.Int32>>.ToArray() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrimExcess() System.Collections.Generic.List<System.Nullable<System.Int32>>.TrueForAll(System.Predicate<System.Nullable<System.Int32>>) System.Collections.Generic.List<System.Nullable<System.Int32>>.Capacity System.Collections.Generic.List<System.Nullable<System.Int32>>.Count System.Collections.Generic.List<System.Nullable<System.Int32>>.Item[System.Int32] System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.Generic.ICollection<System.Nullable<System.Int32>>.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<System.Nullable<System.Int32>>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class MasterDerivationKey : List<int?>, IList<int?>, ICollection<int?>, IReadOnlyList<int?>, IReadOnlyCollection<int?>, IEnumerable<int?>, IList, ICollection, IEnumerable, IEquatable<MasterDerivationKey>, IValidatableObject Constructors | Improve this Doc View Source MasterDerivationKey() Initializes a new instance of the MasterDerivationKey class. Declaration public MasterDerivationKey() Methods | Improve this Doc View Source Equals(MasterDerivationKey) Returns true if MasterDerivationKey instances are equal Declaration public bool Equals(MasterDerivationKey input) Parameters Type Name Description MasterDerivationKey input Instance of MasterDerivationKey to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.MultisigSig.html": {
    "href": "api/Algorand.Kmd.Model.MultisigSig.html",
    "title": "Class MultisigSig | Dotnet Algorand Documents",
    "keywords": "Class MultisigSig MultisigSig is the structure that holds multiple Subsigs Inheritance System.Object MultisigSig Implements System.IEquatable < MultisigSig > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class MultisigSig : IEquatable<MultisigSig>, IValidatableObject Constructors | Improve this Doc View Source MultisigSig(List<MultisigSubsig>, Nullable<Int32>, Nullable<Int32>) Initializes a new instance of the MultisigSig class. Declaration public MultisigSig(List<MultisigSubsig> subsigs = null, int? threshold = default(int? ), int? version = default(int? )) Parameters Type Name Description System.Collections.Generic.List < MultisigSubsig > subsigs subsigs. System.Nullable < System.Int32 > threshold threshold. System.Nullable < System.Int32 > version version. Properties | Improve this Doc View Source Subsigs Gets or Sets Subsigs Declaration [DataMember(Name = \"Subsigs\", EmitDefaultValue = false)] public List<MultisigSubsig> Subsigs { get; set; } Property Value Type Description System.Collections.Generic.List < MultisigSubsig > | Improve this Doc View Source Threshold Gets or Sets Threshold Declaration [DataMember(Name = \"Threshold\", EmitDefaultValue = false)] public int? Threshold { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Version Gets or Sets Version Declaration [DataMember(Name = \"Version\", EmitDefaultValue = false)] public int? Version { get; set; } Property Value Type Description System.Nullable < System.Int32 > Methods | Improve this Doc View Source Equals(MultisigSig) Returns true if MultisigSig instances are equal Declaration public bool Equals(MultisigSig input) Parameters Type Name Description MultisigSig input Instance of MultisigSig to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.MultisigSubsig.html": {
    "href": "api/Algorand.Kmd.Model.MultisigSubsig.html",
    "title": "Class MultisigSubsig | Dotnet Algorand Documents",
    "keywords": "Class MultisigSubsig MultisigSubsig is a struct that holds a pair of public key and signatures signatures may be empty Inheritance System.Object MultisigSubsig Implements System.IEquatable < MultisigSubsig > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class MultisigSubsig : IEquatable<MultisigSubsig>, IValidatableObject Constructors | Improve this Doc View Source MultisigSubsig(PublicKey, Signature) Initializes a new instance of the MultisigSubsig class. Declaration public MultisigSubsig(PublicKey key = null, Signature sig = null) Parameters Type Name Description PublicKey key key. Signature sig sig. Properties | Improve this Doc View Source Key Gets or Sets Key Declaration [DataMember(Name = \"Key\", EmitDefaultValue = false)] public PublicKey Key { get; set; } Property Value Type Description PublicKey | Improve this Doc View Source Sig Gets or Sets Sig Declaration [DataMember(Name = \"Sig\", EmitDefaultValue = false)] public Signature Sig { get; set; } Property Value Type Description Signature Methods | Improve this Doc View Source Equals(MultisigSubsig) Returns true if MultisigSubsig instances are equal Declaration public bool Equals(MultisigSubsig input) Parameters Type Name Description MultisigSubsig input Instance of MultisigSubsig to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.PrivateKey.html": {
    "href": "api/Algorand.Kmd.Model.PrivateKey.html",
    "title": "Class PrivateKey | Dotnet Algorand Documents",
    "keywords": "Class PrivateKey PrivateKey Inheritance System.Object PrivateKey Implements System.IEquatable < PrivateKey > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class PrivateKey : IEquatable<PrivateKey>, IValidatableObject Constructors | Improve this Doc View Source PrivateKey() Initializes a new instance of the PrivateKey class. Declaration public PrivateKey() Methods | Improve this Doc View Source Equals(PrivateKey) Returns true if PrivateKey instances are equal Declaration public bool Equals(PrivateKey input) Parameters Type Name Description PrivateKey input Instance of PrivateKey to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.PublicKey.html": {
    "href": "api/Algorand.Kmd.Model.PublicKey.html",
    "title": "Class PublicKey | Dotnet Algorand Documents",
    "keywords": "Class PublicKey PublicKey Inheritance System.Object PublicKey Implements System.IEquatable < PublicKey > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class PublicKey : IEquatable<PublicKey>, IValidatableObject Constructors | Improve this Doc View Source PublicKey() Initializes a new instance of the PublicKey class. Declaration public PublicKey() Methods | Improve this Doc View Source Equals(PublicKey) Returns true if PublicKey instances are equal Declaration public bool Equals(PublicKey input) Parameters Type Name Description PublicKey input Instance of PublicKey to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.ReleaseWalletHandleTokenRequest.html": {
    "href": "api/Algorand.Kmd.Model.ReleaseWalletHandleTokenRequest.html",
    "title": "Class ReleaseWalletHandleTokenRequest | Dotnet Algorand Documents",
    "keywords": "Class ReleaseWalletHandleTokenRequest APIV1POSTWalletReleaseRequest is the request for POST /v1/wallet/release Inheritance System.Object ReleaseWalletHandleTokenRequest Implements System.IEquatable < ReleaseWalletHandleTokenRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class ReleaseWalletHandleTokenRequest : IEquatable<ReleaseWalletHandleTokenRequest>, IValidatableObject Constructors | Improve this Doc View Source ReleaseWalletHandleTokenRequest(String) Initializes a new instance of the ReleaseWalletHandleTokenRequest class. Declaration public ReleaseWalletHandleTokenRequest(string walletHandleToken = null) Parameters Type Name Description System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ReleaseWalletHandleTokenRequest) Returns true if ReleaseWalletHandleTokenRequest instances are equal Declaration public bool Equals(ReleaseWalletHandleTokenRequest input) Parameters Type Name Description ReleaseWalletHandleTokenRequest input Instance of ReleaseWalletHandleTokenRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.RenameWalletRequest.html": {
    "href": "api/Algorand.Kmd.Model.RenameWalletRequest.html",
    "title": "Class RenameWalletRequest | Dotnet Algorand Documents",
    "keywords": "Class RenameWalletRequest APIV1POSTWalletRenameRequest is the request for POST /v1/wallet/rename Inheritance System.Object RenameWalletRequest Implements System.IEquatable < RenameWalletRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class RenameWalletRequest : IEquatable<RenameWalletRequest>, IValidatableObject Constructors | Improve this Doc View Source RenameWalletRequest(String, String, String) Initializes a new instance of the RenameWalletRequest class. Declaration public RenameWalletRequest(string walletId = null, string walletName = null, string walletPassword = null) Parameters Type Name Description System.String walletId walletId. System.String walletName walletName. System.String walletPassword walletPassword. Properties | Improve this Doc View Source WalletId Gets or Sets WalletId Declaration [DataMember(Name = \"wallet_id\", EmitDefaultValue = false)] public string WalletId { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletName Gets or Sets WalletName Declaration [DataMember(Name = \"wallet_name\", EmitDefaultValue = false)] public string WalletName { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(RenameWalletRequest) Returns true if RenameWalletRequest instances are equal Declaration public bool Equals(RenameWalletRequest input) Parameters Type Name Description RenameWalletRequest input Instance of RenameWalletRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.RenewWalletHandleTokenRequest.html": {
    "href": "api/Algorand.Kmd.Model.RenewWalletHandleTokenRequest.html",
    "title": "Class RenewWalletHandleTokenRequest | Dotnet Algorand Documents",
    "keywords": "Class RenewWalletHandleTokenRequest APIV1POSTWalletRenewRequest is the request for POST /v1/wallet/renew Inheritance System.Object RenewWalletHandleTokenRequest Implements System.IEquatable < RenewWalletHandleTokenRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class RenewWalletHandleTokenRequest : IEquatable<RenewWalletHandleTokenRequest>, IValidatableObject Constructors | Improve this Doc View Source RenewWalletHandleTokenRequest(String) Initializes a new instance of the RenewWalletHandleTokenRequest class. Declaration public RenewWalletHandleTokenRequest(string walletHandleToken = null) Parameters Type Name Description System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(RenewWalletHandleTokenRequest) Returns true if RenewWalletHandleTokenRequest instances are equal Declaration public bool Equals(RenewWalletHandleTokenRequest input) Parameters Type Name Description RenewWalletHandleTokenRequest input Instance of RenewWalletHandleTokenRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.Signature.html": {
    "href": "api/Algorand.Kmd.Model.Signature.html",
    "title": "Class Signature | Dotnet Algorand Documents",
    "keywords": "Class Signature Signature Inheritance System.Object Signature Implements System.IEquatable < Signature > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class Signature : IEquatable<Signature>, IValidatableObject Constructors | Improve this Doc View Source Signature() Initializes a new instance of the Signature class. Declaration public Signature() Methods | Improve this Doc View Source Equals(Signature) Returns true if Signature instances are equal Declaration public bool Equals(Signature input) Parameters Type Name Description Signature input Instance of Signature to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.SignMultisigRequest.html": {
    "href": "api/Algorand.Kmd.Model.SignMultisigRequest.html",
    "title": "Class SignMultisigRequest | Dotnet Algorand Documents",
    "keywords": "Class SignMultisigRequest APIV1POSTMultisigTransactionSignRequest is the request for POST /v1/multisig/sign Inheritance System.Object SignMultisigRequest Implements System.IEquatable < SignMultisigRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class SignMultisigRequest : IEquatable<SignMultisigRequest>, IValidatableObject Constructors | Improve this Doc View Source SignMultisigRequest(MultisigSig, PublicKey, List<Nullable<Int32>>, TxType, String, String) Initializes a new instance of the SignMultisigRequest class. Declaration public SignMultisigRequest(MultisigSig partialMultisig = null, PublicKey publicKey = null, List<int?> transaction = null, TxType transactionType = null, string walletHandleToken = null, string walletPassword = null) Parameters Type Name Description MultisigSig partialMultisig partialMultisig. PublicKey publicKey publicKey. System.Collections.Generic.List < System.Nullable < System.Int32 >> transaction transaction. TxType transactionType transactionType. System.String walletHandleToken walletHandleToken. System.String walletPassword walletPassword. Properties | Improve this Doc View Source PartialMultisig Gets or Sets PartialMultisig Declaration [DataMember(Name = \"partial_multisig\", EmitDefaultValue = false)] public MultisigSig PartialMultisig { get; set; } Property Value Type Description MultisigSig | Improve this Doc View Source PublicKey Gets or Sets PublicKey Declaration [DataMember(Name = \"public_key\", EmitDefaultValue = false)] public PublicKey PublicKey { get; set; } Property Value Type Description PublicKey | Improve this Doc View Source Transaction Gets or Sets Transaction Declaration [DataMember(Name = \"transaction\", EmitDefaultValue = false)] public List<int?> Transaction { get; set; } Property Value Type Description System.Collections.Generic.List < System.Nullable < System.Int32 >> | Improve this Doc View Source TransactionType Gets or Sets TransactionType Declaration [DataMember(Name = \"transaction_type\", EmitDefaultValue = false)] public TxType TransactionType { get; set; } Property Value Type Description TxType | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(SignMultisigRequest) Returns true if SignMultisigRequest instances are equal Declaration public bool Equals(SignMultisigRequest input) Parameters Type Name Description SignMultisigRequest input Instance of SignMultisigRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.SignTransactionRequest.html": {
    "href": "api/Algorand.Kmd.Model.SignTransactionRequest.html",
    "title": "Class SignTransactionRequest | Dotnet Algorand Documents",
    "keywords": "Class SignTransactionRequest APIV1POSTTransactionSignRequest is the request for POST /v1/transaction/sign Inheritance System.Object SignTransactionRequest Implements System.IEquatable < SignTransactionRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class SignTransactionRequest : IEquatable<SignTransactionRequest>, IValidatableObject Constructors | Improve this Doc View Source SignTransactionRequest(List<Nullable<Int32>>, TxType, String, String) Initializes a new instance of the SignTransactionRequest class. Declaration public SignTransactionRequest(List<int?> transaction = null, TxType transactionType = null, string walletHandleToken = null, string walletPassword = null) Parameters Type Name Description System.Collections.Generic.List < System.Nullable < System.Int32 >> transaction transaction. TxType transactionType transactionType. System.String walletHandleToken walletHandleToken. System.String walletPassword walletPassword. Properties | Improve this Doc View Source Transaction Gets or Sets Transaction Declaration [DataMember(Name = \"transaction\", EmitDefaultValue = false)] public List<int?> Transaction { get; set; } Property Value Type Description System.Collections.Generic.List < System.Nullable < System.Int32 >> | Improve this Doc View Source TransactionType Gets or Sets TransactionType Declaration [DataMember(Name = \"transaction_type\", EmitDefaultValue = false)] public TxType TransactionType { get; set; } Property Value Type Description TxType | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source WalletPassword Gets or Sets WalletPassword Declaration [DataMember(Name = \"wallet_password\", EmitDefaultValue = false)] public string WalletPassword { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(SignTransactionRequest) Returns true if SignTransactionRequest instances are equal Declaration public bool Equals(SignTransactionRequest input) Parameters Type Name Description SignTransactionRequest input Instance of SignTransactionRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.TxType.html": {
    "href": "api/Algorand.Kmd.Model.TxType.html",
    "title": "Class TxType | Dotnet Algorand Documents",
    "keywords": "Class TxType TxType is the type of the transaction written to the ledger Inheritance System.Object TxType Implements System.IEquatable < TxType > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class TxType : IEquatable<TxType>, IValidatableObject Constructors | Improve this Doc View Source TxType() Initializes a new instance of the TxType class. Declaration public TxType() Methods | Improve this Doc View Source Equals(TxType) Returns true if TxType instances are equal Declaration public bool Equals(TxType input) Parameters Type Name Description TxType input Instance of TxType to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.VersionsRequest.html": {
    "href": "api/Algorand.Kmd.Model.VersionsRequest.html",
    "title": "Class VersionsRequest | Dotnet Algorand Documents",
    "keywords": "Class VersionsRequest VersionsRequest is the request for GET /versions Inheritance System.Object VersionsRequest Implements System.IEquatable < VersionsRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class VersionsRequest : IEquatable<VersionsRequest>, IValidatableObject Constructors | Improve this Doc View Source VersionsRequest() Initializes a new instance of the VersionsRequest class. Declaration public VersionsRequest() Methods | Improve this Doc View Source Equals(VersionsRequest) Returns true if VersionsRequest instances are equal Declaration public bool Equals(VersionsRequest input) Parameters Type Name Description VersionsRequest input Instance of VersionsRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.VersionsResponse.html": {
    "href": "api/Algorand.Kmd.Model.VersionsResponse.html",
    "title": "Class VersionsResponse | Dotnet Algorand Documents",
    "keywords": "Class VersionsResponse VersionsResponse is the response to GET /versions friendly:VersionsResponse Inheritance System.Object VersionsResponse Implements System.IEquatable < VersionsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class VersionsResponse : IEquatable<VersionsResponse>, IValidatableObject Constructors | Improve this Doc View Source VersionsResponse(List<String>) Initializes a new instance of the VersionsResponse class. Declaration public VersionsResponse(List<string> versions = null) Parameters Type Name Description System.Collections.Generic.List < System.String > versions versions. Properties | Improve this Doc View Source Versions Gets or Sets Versions Declaration [DataMember(Name = \"versions\", EmitDefaultValue = false)] public List<string> Versions { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Methods | Improve this Doc View Source Equals(VersionsResponse) Returns true if VersionsResponse instances are equal Declaration public bool Equals(VersionsResponse input) Parameters Type Name Description VersionsResponse input Instance of VersionsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Kmd.Model.WalletInfoRequest.html": {
    "href": "api/Algorand.Kmd.Model.WalletInfoRequest.html",
    "title": "Class WalletInfoRequest | Dotnet Algorand Documents",
    "keywords": "Class WalletInfoRequest APIV1POSTWalletInfoRequest is the request for POST /v1/wallet/info Inheritance System.Object WalletInfoRequest Implements System.IEquatable < WalletInfoRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.Kmd.Model Assembly : Algorand.dll Syntax [DataContract] public class WalletInfoRequest : IEquatable<WalletInfoRequest>, IValidatableObject Constructors | Improve this Doc View Source WalletInfoRequest(String) Initializes a new instance of the WalletInfoRequest class. Declaration public WalletInfoRequest(string walletHandleToken = null) Parameters Type Name Description System.String walletHandleToken walletHandleToken. Properties | Improve this Doc View Source WalletHandleToken Gets or Sets WalletHandleToken Declaration [DataMember(Name = \"wallet_handle_token\", EmitDefaultValue = false)] public string WalletHandleToken { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(WalletInfoRequest) Returns true if WalletInfoRequest instances are equal Declaration public bool Equals(WalletInfoRequest input) Parameters Type Name Description WalletInfoRequest input Instance of WalletInfoRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.Logic.html": {
    "href": "api/Algorand.Logic.html",
    "title": "Class Logic | Dotnet Algorand Documents",
    "keywords": "Class Logic Logic class provides static checkProgram function that can be used for client-side program validation for size and execution cost. Inheritance System.Object Logic Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class Logic Constructors | Improve this Doc View Source Logic() Declaration public Logic() Methods | Improve this Doc View Source CheckProgram(Byte[], List<Byte[]>) Performs basic program validation: instruction count and program cost Declaration public static bool CheckProgram(byte[] program, List<byte[]> args) Parameters Type Name Description System.Byte [] program System.Collections.Generic.List < System.Byte []> args Returns Type Description System.Boolean | Improve this Doc View Source GetEvalMaxVersion() Retrieves max supported version of TEAL evaluator Declaration public static int GetEvalMaxVersion() Returns Type Description System.Int32 | Improve this Doc View Source GetLogicSigVersion() TEAL supported version Declaration public static int GetLogicSigVersion() Returns Type Description System.Int32 int | Improve this Doc View Source GetUVarint(Byte[], Int32) Given a varint, get the integer value Declaration public static VarintResult GetUVarint(byte[] buffer, int bufferOffset) Parameters Type Name Description System.Byte [] buffer serialized varint System.Int32 bufferOffset position in the buffer to start reading from Returns Type Description VarintResult pair of values in in array: value, read size | Improve this Doc View Source ReadByteConstBlock(Byte[], Int32) Declaration public static ByteConstBlock ReadByteConstBlock(byte[] program, int pc) Parameters Type Name Description System.Byte [] program System.Int32 pc Returns Type Description ByteConstBlock | Improve this Doc View Source ReadIntConstBlock(Byte[], Int32) Declaration public static IntConstBlock ReadIntConstBlock(byte[] program, int pc) Parameters Type Name Description System.Byte [] program System.Int32 pc Returns Type Description IntConstBlock | Improve this Doc View Source ReadProgram(Byte[], List<Byte[]>) Performs basic program validation: instruction count and program cost Declaration public static ProgramData ReadProgram(byte[] program, List<byte[]> args) Parameters Type Name Description System.Byte [] program program Program to validate System.Collections.Generic.List < System.Byte []> args Program arguments to validate Returns Type Description ProgramData"
  },
  "api/Algorand.LogicsigSignature.html": {
    "href": "api/Algorand.LogicsigSignature.html",
    "title": "Class LogicsigSignature | Dotnet Algorand Documents",
    "keywords": "Class LogicsigSignature Serializable logicsig class. LogicsigSignature is constructed from a program and optional arguments. Signature sig and MultisigSignature msig property are available for modification by it's clients. Inheritance System.Object LogicsigSignature Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject] public class LogicsigSignature Constructors | Improve this Doc View Source LogicsigSignature() Uninitialized object used for serializer to ignore default values. Declaration public LogicsigSignature() | Improve this Doc View Source LogicsigSignature(Byte[], List<Byte[]>, Byte[], MultisigSignature) LogicsigSignature Declaration [JsonConstructor] public LogicsigSignature([JsonProperty(\"l\")] byte[] logic, [JsonProperty(\"arg\")] List<byte[]> args = null, [JsonProperty(\"sig\")] byte[] sig = null, [JsonProperty(\"msig\")] MultisigSignature msig = null) Parameters Type Name Description System.Byte [] logic Unsigned logicsig object System.Collections.Generic.List < System.Byte []> args Unsigned logicsig object's arguments System.Byte [] sig MultisigSignature msig Fields | Improve this Doc View Source args Declaration [JsonProperty(PropertyName = \"arg\")] public List<byte[]> args Field Value Type Description System.Collections.Generic.List < System.Byte []> | Improve this Doc View Source logic Declaration [JsonProperty(PropertyName = \"l\")] public byte[] logic Field Value Type Description System.Byte [] | Improve this Doc View Source msig Declaration [JsonProperty(PropertyName = \"msig\")] public MultisigSignature msig Field Value Type Description MultisigSignature | Improve this Doc View Source sig Declaration [JsonProperty(PropertyName = \"sig\")] public Signature sig Field Value Type Description Signature Properties | Improve this Doc View Source Address The address of the LogicsigSignature Declaration [JsonIgnore] public Address Address { get; } Property Value Type Description Address Methods | Improve this Doc View Source BytesToSign() Return prefixed program as byte array that is ready to sign Declaration public byte[] BytesToSign() Returns Type Description System.Byte [] byte array | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ToAddress() alculate escrow address from logic sig program DEPRECATED Please use Address property. The address of the LogicsigSignature Declaration public Address ToAddress() Returns Type Description Address The address of the LogicsigSignature | Improve this Doc View Source Verify(Address) Perform signature verification against the sender address Declaration public bool Verify(Address address) Parameters Type Name Description Address address Address to verify Returns Type Description System.Boolean bool"
  },
  "api/Algorand.Mnemonic.html": {
    "href": "api/Algorand.Mnemonic.html",
    "title": "Class Mnemonic | Dotnet Algorand Documents",
    "keywords": "Class Mnemonic Provides an easy way to create mnemonics from 32-byte length keys. Inheritance System.Object Mnemonic Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class Mnemonic Methods | Improve this Doc View Source FromKey(Byte[]) Converts a 32-byte key into a 25 word mnemonic. The generated mnemonic includes a checksum. Each word in the mnemonic represents 11 bits of data, and the last 11 bits are reserved for the checksum. Declaration public static string FromKey(byte[] key) Parameters Type Name Description System.Byte [] key 32 byte length key Returns Type Description System.String the mnemonic | Improve this Doc View Source ToKey(String) toKey converts a mnemonic generated using this library into the source key used to create it. It returns an error if the passed mnemonic has an incorrect checksum, if the number of words is unexpected, or if one of the passed words is not found in the words list. Declaration public static byte[] ToKey(string mnemonicStr) Parameters Type Name Description System.String mnemonicStr words delimited by MNEMONIC_DELIM Returns Type Description System.Byte [] 32 byte array key"
  },
  "api/Algorand.MultisigAddress.html": {
    "href": "api/Algorand.MultisigAddress.html",
    "title": "Class MultisigAddress | Dotnet Algorand Documents",
    "keywords": "Class MultisigAddress MultisigAddress is a convenience class for handling multisignature public identities. Inheritance System.Object MultisigAddress Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand Assembly : Algorand.dll Syntax [JsonConverter(typeof(MultisigAddressConverter))] public class MultisigAddress Constructors | Improve this Doc View Source MultisigAddress(Int32, Int32, List<Ed25519PublicKeyParameters>) Declaration public MultisigAddress(int version, int threshold, List<Ed25519PublicKeyParameters> publicKeys) Parameters Type Name Description System.Int32 version System.Int32 threshold System.Collections.Generic.List < Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters > publicKeys | Improve this Doc View Source MultisigAddress(Int32, Int32, List<Byte[]>) Declaration [JsonConstructor] public MultisigAddress(int version, int threshold, List<byte[]> publicKeys) Parameters Type Name Description System.Int32 version System.Int32 threshold System.Collections.Generic.List < System.Byte []> publicKeys Fields | Improve this Doc View Source publicKeys Declaration [JsonProperty] public List<Ed25519PublicKeyParameters> publicKeys Field Value Type Description System.Collections.Generic.List < Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters > | Improve this Doc View Source threshold Declaration [JsonProperty] public int threshold Field Value Type Description System.Int32 | Improve this Doc View Source version Declaration [JsonProperty] public int version Field Value Type Description System.Int32 Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source ToAddress() building an address object helps us generate string representations Declaration public Address ToAddress() Returns Type Description Address the address | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.Object.ToString()"
  },
  "api/Algorand.MultisigSignature.html": {
    "href": "api/Algorand.MultisigSignature.html",
    "title": "Class MultisigSignature | Dotnet Algorand Documents",
    "keywords": "Class MultisigSignature Serializable raw multisig class. Inheritance System.Object MultisigSignature Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject] public class MultisigSignature Constructors | Improve this Doc View Source MultisigSignature() Declaration public MultisigSignature() | Improve this Doc View Source MultisigSignature(Int32, Int32, List<MultisigSubsig>) create a multisig signature. Declaration [JsonConstructor] public MultisigSignature([JsonProperty(PropertyName = \"v\")] int version, [JsonProperty(PropertyName = \"thr\")] int threshold, [JsonProperty(PropertyName = \"subsig\")] List<MultisigSubsig> subsigs = null) Parameters Type Name Description System.Int32 version required System.Int32 threshold required System.Collections.Generic.List < MultisigSubsig > subsigs can be empty or null Fields | Improve this Doc View Source subsigs Declaration [JsonProperty(PropertyName = \"subsig\")] public List<MultisigSubsig> subsigs Field Value Type Description System.Collections.Generic.List < MultisigSubsig > | Improve this Doc View Source threshold Declaration [JsonProperty(PropertyName = \"thr\")] public int threshold Field Value Type Description System.Int32 | Improve this Doc View Source version Declaration [JsonProperty(PropertyName = \"v\")] public int version Field Value Type Description System.Int32 Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source Verify(Byte[]) Performs signature verification Declaration public bool Verify(byte[] message) Parameters Type Name Description System.Byte [] message raw message to verify Returns Type Description System.Boolean bool"
  },
  "api/Algorand.MultisigSubsig.html": {
    "href": "api/Algorand.MultisigSubsig.html",
    "title": "Class MultisigSubsig | Dotnet Algorand Documents",
    "keywords": "Class MultisigSubsig Serializable multisig sub-signature Inheritance System.Object MultisigSubsig Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject] public class MultisigSubsig Constructors | Improve this Doc View Source MultisigSubsig(Ed25519PublicKeyParameters, Signature) Declaration public MultisigSubsig(Ed25519PublicKeyParameters key, Signature sig = null) Parameters Type Name Description Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters key Signature sig | Improve this Doc View Source MultisigSubsig(Byte[], Byte[]) workaround wrapped json values Declaration [JsonConstructor] public MultisigSubsig([JsonProperty(\"pk\")] byte[] key = null, [JsonProperty(\"s\")] byte[] sig = null) Parameters Type Name Description System.Byte [] key System.Byte [] sig Fields | Improve this Doc View Source key Declaration [JsonProperty(PropertyName = \"pk\")] public Ed25519PublicKeyParameters key Field Value Type Description Org.BouncyCastle.Crypto.Parameters.Ed25519PublicKeyParameters | Improve this Doc View Source sig Declaration [JsonProperty(PropertyName = \"s\")] public Signature sig Field Value Type Description Signature Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/Algorand.ParticipationPublicKey.html": {
    "href": "api/Algorand.ParticipationPublicKey.html",
    "title": "Class ParticipationPublicKey | Dotnet Algorand Documents",
    "keywords": "Class ParticipationPublicKey A serializable class representing a participation key. Inheritance System.Object ParticipationPublicKey Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonConverter(typeof(BytesConverter))] public class ParticipationPublicKey Constructors | Improve this Doc View Source ParticipationPublicKey() default values for serializer to ignore Declaration public ParticipationPublicKey() | Improve this Doc View Source ParticipationPublicKey(Byte[]) Create a new participation key Declaration [JsonConstructor] public ParticipationPublicKey(byte[] bytes) Parameters Type Name Description System.Byte [] bytes a length 32 byte array Properties | Improve this Doc View Source Bytes Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte [] Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/Algorand.ProgramData.html": {
    "href": "api/Algorand.ProgramData.html",
    "title": "Class ProgramData | Dotnet Algorand Documents",
    "keywords": "Class ProgramData Metadata related to a teal program. Inheritance System.Object ProgramData Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class ProgramData Constructors | Improve this Doc View Source ProgramData(Boolean, List<Int32>, List<Byte[]>) Declaration public ProgramData(bool good, List<int> intBlock, List<byte[]> byteBlock) Parameters Type Name Description System.Boolean good System.Collections.Generic.List < System.Int32 > intBlock System.Collections.Generic.List < System.Byte []> byteBlock Fields | Improve this Doc View Source byteBlock Declaration public List<byte[]> byteBlock Field Value Type Description System.Collections.Generic.List < System.Byte []> | Improve this Doc View Source good Declaration public bool good Field Value Type Description System.Boolean | Improve this Doc View Source intBlock Declaration public List<int> intBlock Field Value Type Description System.Collections.Generic.List < System.Int32 >"
  },
  "api/Algorand.Signature.html": {
    "href": "api/Algorand.Signature.html",
    "title": "Class Signature | Dotnet Algorand Documents",
    "keywords": "Class Signature A raw serializable signature class. Inheritance System.Object Signature Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonConverter(typeof(BytesConverter))] public class Signature Constructors | Improve this Doc View Source Signature() default values for serializer to ignore Declaration public Signature() | Improve this Doc View Source Signature(Byte[]) Create a new Signature wrapping the given bytes. Declaration [JsonConstructor] public Signature(byte[] rawBytes) Parameters Type Name Description System.Byte [] rawBytes bytes Properties | Improve this Doc View Source Bytes Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte [] Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/Algorand.SignedBid.html": {
    "href": "api/Algorand.SignedBid.html",
    "title": "Class SignedBid | Dotnet Algorand Documents",
    "keywords": "Class SignedBid A serializable raw signed bid class. Inheritance System.Object SignedBid Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject] public class SignedBid Constructors | Improve this Doc View Source SignedBid() Declaration public SignedBid() | Improve this Doc View Source SignedBid(Bid, MultisigSignature) Declaration public SignedBid(Bid bid, MultisigSignature mSig) Parameters Type Name Description Bid bid MultisigSignature mSig | Improve this Doc View Source SignedBid(Bid, Signature) Declaration public SignedBid(Bid bid, Signature sig) Parameters Type Name Description Bid bid Signature sig | Improve this Doc View Source SignedBid(Bid, Signature, MultisigSignature) Declaration public SignedBid(Bid bid, Signature sig, MultisigSignature mSig) Parameters Type Name Description Bid bid Signature sig MultisigSignature mSig | Improve this Doc View Source SignedBid(Bid, Byte[], MultisigSignature) Declaration [JsonConstructor] public SignedBid([JsonProperty(PropertyName = \"bid\")] Bid bid, [JsonProperty(PropertyName = \"sig\")] byte[] sig, [JsonProperty(PropertyName = \"msig\")] MultisigSignature mSig) Parameters Type Name Description Bid bid System.Byte [] sig MultisigSignature mSig Fields | Improve this Doc View Source bid Declaration [JsonProperty(PropertyName = \"bid\")] public Bid bid Field Value Type Description Bid | Improve this Doc View Source mSig Declaration [JsonProperty(PropertyName = \"msig\")] public MultisigSignature mSig Field Value Type Description MultisigSignature | Improve this Doc View Source sig Declaration [JsonProperty(PropertyName = \"sig\")] public Signature sig Field Value Type Description Signature Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/Algorand.SignedTransaction.html": {
    "href": "api/Algorand.SignedTransaction.html",
    "title": "Class SignedTransaction | Dotnet Algorand Documents",
    "keywords": "Class SignedTransaction A serializable convenience type for packaging transactions with their signatures. Inheritance System.Object SignedTransaction Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject(ItemNullValueHandling = NullValueHandling.Ignore)] public class SignedTransaction Constructors | Improve this Doc View Source SignedTransaction() Declaration public SignedTransaction() | Improve this Doc View Source SignedTransaction(Transaction, LogicsigSignature, String) Declaration public SignedTransaction(Transaction tx, LogicsigSignature lSig, string txId) Parameters Type Name Description Transaction tx LogicsigSignature lSig System.String txId | Improve this Doc View Source SignedTransaction(Transaction, MultisigSignature, String) Declaration public SignedTransaction(Transaction tx, MultisigSignature mSig, string txId) Parameters Type Name Description Transaction tx MultisigSignature mSig System.String txId | Improve this Doc View Source SignedTransaction(Transaction, Signature, MultisigSignature, LogicsigSignature, String) Declaration public SignedTransaction(Transaction tx, Signature sig, MultisigSignature mSig, LogicsigSignature lSig, string transactionID) Parameters Type Name Description Transaction tx Signature sig MultisigSignature mSig LogicsigSignature lSig System.String transactionID | Improve this Doc View Source SignedTransaction(Transaction, Signature, String) Declaration public SignedTransaction(Transaction tx, Signature sig, string txId) Parameters Type Name Description Transaction tx Signature sig System.String txId | Improve this Doc View Source SignedTransaction(Transaction, Byte[], MultisigSignature, LogicsigSignature, Byte[]) Declaration [JsonConstructor] public SignedTransaction(Transaction txn, byte[] sig, MultisigSignature msig, LogicsigSignature lsig, byte[] sgnr) Parameters Type Name Description Transaction txn System.Byte [] sig MultisigSignature msig LogicsigSignature lsig System.Byte [] sgnr Fields | Improve this Doc View Source authAddr Declaration [JsonProperty(PropertyName = \"sgnr\")] public Address authAddr Field Value Type Description Address | Improve this Doc View Source lSig Declaration [JsonProperty(PropertyName = \"lsig\")] public LogicsigSignature lSig Field Value Type Description LogicsigSignature | Improve this Doc View Source mSig Declaration [JsonProperty(PropertyName = \"msig\")] public MultisigSignature mSig Field Value Type Description MultisigSignature | Improve this Doc View Source sig Declaration [JsonProperty(PropertyName = \"sig\")] public Signature sig Field Value Type Description Signature | Improve this Doc View Source transactionID Declaration [JsonIgnore] public string transactionID Field Value Type Description System.String | Improve this Doc View Source tx Declaration [JsonProperty(PropertyName = \"txn\")] public Transaction tx Field Value Type Description Transaction Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source SetAuthAddr(Byte[]) Declaration public void SetAuthAddr(byte[] sigAddr) Parameters Type Name Description System.Byte [] sigAddr"
  },
  "api/Algorand.TEALProgram.html": {
    "href": "api/Algorand.TEALProgram.html",
    "title": "Class TEALProgram | Dotnet Algorand Documents",
    "keywords": "Class TEALProgram TEALProgram Inheritance System.Object TEALProgram Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class TEALProgram Constructors | Improve this Doc View Source TEALProgram() default values for serializer to ignore Declaration public TEALProgram() | Improve this Doc View Source TEALProgram(Byte[]) Initialize a TEALProgram based on the byte array.An ArgumentException is thrown if the program is invalid. Declaration [JsonConstructor] public TEALProgram(byte[] program) Parameters Type Name Description System.Byte [] program program | Improve this Doc View Source TEALProgram(String) Initialize a TEALProgram based on the base64 encoding.A runtime exception is thrown if the program is invalid. Declaration public TEALProgram(string base64String) Parameters Type Name Description System.String base64String base64String Properties | Improve this Doc View Source Bytes Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte []"
  },
  "api/Algorand.Transaction.AssetParams.html": {
    "href": "api/Algorand.Transaction.AssetParams.html",
    "title": "Class Transaction.AssetParams | Dotnet Algorand Documents",
    "keywords": "Class Transaction.AssetParams Asset Params Inheritance System.Object Transaction.AssetParams Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class AssetParams Constructors | Improve this Doc View Source AssetParams() Declaration public AssetParams() | Improve this Doc View Source AssetParams(Nullable<UInt64>, Int32, Boolean, String, String, String, Byte[], Address, Address, Address, Address) Declaration public AssetParams(ulong? assetTotal, int assetDecimals, bool defaultFrozen, string assetUnitName, string assetName, string url, byte[] metadataHash, Address manager, Address reserve, Address freeze, Address clawback) Parameters Type Name Description System.Nullable < System.UInt64 > assetTotal System.Int32 assetDecimals System.Boolean defaultFrozen System.String assetUnitName System.String assetName System.String url System.Byte [] metadataHash Address manager Address reserve Address freeze Address clawback Fields | Improve this Doc View Source assetClawback the address which has the ability to issue clawbacks against asset-holding accounts Declaration [JsonProperty(PropertyName = \"c\")] public Address assetClawback Field Value Type Description Address | Improve this Doc View Source assetDecimals Decimals specifies the number of digits to display after the decimal place when displaying this asset. A value of 0 represents an asset that is not divisible, a value of 1 represents an asset divisible into tenths, and so on. This value must be between 0 and 19(inclusive). Declaration [JsonProperty(PropertyName = \"dc\")] public int assetDecimals Field Value Type Description System.Int32 | Improve this Doc View Source assetDefaultFrozen whether each account has their asset slot frozen for this asset by default Declaration [JsonProperty(PropertyName = \"df\")] public bool assetDefaultFrozen Field Value Type Description System.Boolean | Improve this Doc View Source assetFreeze the address which has the ability to freeze/unfreeze accounts holding this asset Declaration [JsonProperty(PropertyName = \"f\")] public Address assetFreeze Field Value Type Description Address | Improve this Doc View Source assetManager the address which has the ability to reconfigure the asset Declaration [JsonProperty(PropertyName = \"m\")] public Address assetManager Field Value Type Description Address | Improve this Doc View Source assetName the name of the asset Declaration [JsonProperty(PropertyName = \"an\")] public string assetName Field Value Type Description System.String | Improve this Doc View Source assetReserve the asset reserve: assets owned by this address do not count against circulation Declaration [JsonProperty(PropertyName = \"r\")] public Address assetReserve Field Value Type Description Address | Improve this Doc View Source assetTotal total asset issuance Declaration [JsonProperty(PropertyName = \"t\")] public ulong? assetTotal Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source assetUnitName a hint to the unit name of the asset Declaration [JsonProperty(PropertyName = \"un\")] public string assetUnitName Field Value Type Description System.String | Improve this Doc View Source metadataHash MetadataHash specifies a commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration [JsonProperty(PropertyName = \"am\")] public byte[] metadataHash Field Value Type Description System.Byte [] | Improve this Doc View Source url URL where more information about the asset can be retrieved Declaration [JsonProperty(PropertyName = \"au\")] public string url Field Value Type Description System.String Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/Algorand.Transaction.html": {
    "href": "api/Algorand.Transaction.html",
    "title": "Class Transaction | Dotnet Algorand Documents",
    "keywords": "Class Transaction A raw serializable transaction class, used to generate transactions to broadcast to the network. This is distinct from algod.model.Transaction, which is only returned for GET requests to algod. Inheritance System.Object Transaction Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject] public class Transaction Constructors | Improve this Doc View Source Transaction() Declaration public Transaction() | Improve this Doc View Source Transaction(Address, Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>) Create a payment transaction Declaration public Transaction(Address fromAddr, Address toAddr, ulong? fee, ulong? amount, ulong? firstRound, ulong? lastRound) Parameters Type Name Description Address fromAddr source address Address toAddr destination address System.Nullable < System.UInt64 > fee transaction fee System.Nullable < System.UInt64 > amount payment amount System.Nullable < System.UInt64 > firstRound first valid round System.Nullable < System.UInt64 > lastRound last valid round | Improve this Doc View Source Transaction(Address, Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, String, Digest) Declaration public Transaction(Address fromAddr, Address toAddr, ulong? fee, ulong? amount, ulong? firstRound, ulong? lastRound, string genesisID, Digest genesisHash) Parameters Type Name Description Address fromAddr Address toAddr System.Nullable < System.UInt64 > fee System.Nullable < System.UInt64 > amount System.Nullable < System.UInt64 > firstRound System.Nullable < System.UInt64 > lastRound System.String genesisID Digest genesisHash | Improve this Doc View Source Transaction(Address, Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, String, Digest) Create a payment transaction. Make sure to sign with a suggested fee. Declaration public Transaction(Address fromAddr, Address toAddr, ulong? amount, ulong? firstRound, ulong? lastRound, string genesisID, Digest genesisHash) Parameters Type Name Description Address fromAddr source address Address toAddr destination address System.Nullable < System.UInt64 > amount amount to send System.Nullable < System.UInt64 > firstRound first valid round System.Nullable < System.UInt64 > lastRound last valid round System.String genesisID genesis id Digest genesisHash genesis hash | Improve this Doc View Source Transaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], Nullable<UInt64>, Address, String, Digest) Declaration public Transaction(Address sender, ulong? fee, ulong? firstValid, ulong? lastValid, byte[] note, ulong? amount, Address receiver, string genesisID, Digest genesisHash) Parameters Type Name Description Address sender System.Nullable < System.UInt64 > fee System.Nullable < System.UInt64 > firstValid System.Nullable < System.UInt64 > lastValid System.Byte [] note System.Nullable < System.UInt64 > amount Address receiver System.String genesisID Digest genesisHash | Improve this Doc View Source Transaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, ParticipationPublicKey, VRFPublicKey, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>) Create a key registration transaction. No field can be null except the note field. Declaration public Transaction(Address sender, ulong? fee, ulong? firstValid, ulong? lastValid, byte[] note, string genesisID, Digest genesisHash, ParticipationPublicKey votePK, VRFPublicKey vrfPK, ulong? voteFirst, ulong? voteLast, ulong? voteKeyDilution) Parameters Type Name Description Address sender source address System.Nullable < System.UInt64 > fee transaction fee System.Nullable < System.UInt64 > firstValid first valid round System.Nullable < System.UInt64 > lastValid last valid round System.Byte [] note optional notes field (can be null) System.String genesisID genesis id Digest genesisHash genesis hash ParticipationPublicKey votePK the new participation key to register VRFPublicKey vrfPK the sortition key to register System.Nullable < System.UInt64 > voteFirst key reg valid first round System.Nullable < System.UInt64 > voteLast key reg valid last round System.Nullable < System.UInt64 > voteKeyDilution key reg dilution | Improve this Doc View Source Transaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, Nullable<UInt64>, Address, Address) Declaration public Transaction(Address sender, ulong? fee, ulong? firstValid, ulong? lastValid, byte[] note, string genesisID, Digest genesisHash, ulong? amount, Address receiver, Address closeRemainderTo) Parameters Type Name Description Address sender System.Nullable < System.UInt64 > fee System.Nullable < System.UInt64 > firstValid System.Nullable < System.UInt64 > lastValid System.Byte [] note System.String genesisID Digest genesisHash System.Nullable < System.UInt64 > amount Address receiver Address closeRemainderTo Fields | Improve this Doc View Source accounts Declaration [JsonProperty(PropertyName = \"apat\")] public List<Address> accounts Field Value Type Description System.Collections.Generic.List < Address > | Improve this Doc View Source amount Declaration [JsonProperty(PropertyName = \"amt\")] public ulong? amount Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source applicationArgs Declaration [JsonProperty(PropertyName = \"apaa\")] public List<byte[]> applicationArgs Field Value Type Description System.Collections.Generic.List < System.Byte []> | Improve this Doc View Source applicationId Declaration [JsonProperty(PropertyName = \"apid\")] public long applicationId Field Value Type Description System.Int64 | Improve this Doc View Source approvalProgram Declaration [JsonProperty(PropertyName = \"apap\")] public TEALProgram approvalProgram Field Value Type Description TEALProgram | Improve this Doc View Source assetAmount The amount of asset to transfer. A zero amount transferred to self allocates that asset in the account's Assets map. Declaration [JsonProperty(PropertyName = \"aamt\")] public ulong? assetAmount Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source assetCloseTo Indicates that the asset should be removed from the account's Assets map, and specifies where the remaining asset holdings should be transferred. It's always valid to transfer remaining asset holdings to the AssetID account. Declaration [JsonProperty(PropertyName = \"aclose\")] public Address assetCloseTo Field Value Type Description Address | Improve this Doc View Source assetFreezeID Declaration [JsonProperty(PropertyName = \"faid\")] public ulong? assetFreezeID Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source assetIndex Declaration [JsonProperty(PropertyName = \"caid\")] public ulong? assetIndex Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source assetParams Declaration [JsonProperty(PropertyName = \"apar\")] public Transaction.AssetParams assetParams Field Value Type Description Transaction.AssetParams | Improve this Doc View Source assetReceiver The receiver of the transfer. Declaration [JsonProperty(PropertyName = \"arcv\")] public Address assetReceiver Field Value Type Description Address | Improve this Doc View Source assetSender The sender of the transfer. If this is not a zero value, the real transaction sender must be the Clawback address from the AssetParams. If this is the zero value, the asset is sent from the transaction's Sender. Declaration [JsonProperty(PropertyName = \"asnd\")] public Address assetSender Field Value Type Description Address | Improve this Doc View Source clearStateProgram Declaration [JsonProperty(PropertyName = \"apsu\")] public TEALProgram clearStateProgram Field Value Type Description TEALProgram | Improve this Doc View Source closeRemainderTo Declaration [JsonProperty(PropertyName = \"close\")] public Address closeRemainderTo Field Value Type Description Address | Improve this Doc View Source fee Declaration [JsonProperty(PropertyName = \"fee\")] public ulong? fee Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source firstValid Declaration [JsonProperty(PropertyName = \"fv\")] public ulong? firstValid Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source foreignApps Declaration [JsonProperty(PropertyName = \"apfa\")] public List<long> foreignApps Field Value Type Description System.Collections.Generic.List < System.Int64 > | Improve this Doc View Source foreignAssets Declaration [JsonProperty(PropertyName = \"apas\")] public List<long> foreignAssets Field Value Type Description System.Collections.Generic.List < System.Int64 > | Improve this Doc View Source freezeState Declaration [JsonProperty(PropertyName = \"afrz\")] public bool freezeState Field Value Type Description System.Boolean | Improve this Doc View Source freezeTarget Declaration [JsonProperty(PropertyName = \"fadd\")] public Address freezeTarget Field Value Type Description Address | Improve this Doc View Source genesisHash Declaration [JsonProperty(PropertyName = \"gh\")] public Digest genesisHash Field Value Type Description Digest | Improve this Doc View Source genesisID Declaration [JsonProperty(PropertyName = \"gen\")] public string genesisID Field Value Type Description System.String | Improve this Doc View Source globalStateSchema Declaration [JsonProperty(PropertyName = \"apgs\")] public StateSchema globalStateSchema Field Value Type Description StateSchema | Improve this Doc View Source group Declaration [JsonProperty(PropertyName = \"grp\")] public Digest group Field Value Type Description Digest | Improve this Doc View Source lastValid Declaration [JsonProperty(PropertyName = \"lv\")] public ulong? lastValid Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source localStateSchema Declaration [JsonProperty(PropertyName = \"apls\")] public StateSchema localStateSchema Field Value Type Description StateSchema | Improve this Doc View Source onCompletion Declaration [JsonProperty(PropertyName = \"apan\")] public OnCompletion onCompletion Field Value Type Description OnCompletion | Improve this Doc View Source receiver Declaration [JsonProperty(PropertyName = \"rcv\")] public Address receiver Field Value Type Description Address | Improve this Doc View Source RekeyTo Declaration [JsonProperty(\"rekey\")] public Address RekeyTo Field Value Type Description Address | Improve this Doc View Source selectionPK selectionPK is the VRF public key used in key registration transactions Declaration [JsonProperty(PropertyName = \"selkey\")] public VRFPublicKey selectionPK Field Value Type Description VRFPublicKey | Improve this Doc View Source sender Declaration [JsonProperty(PropertyName = \"snd\")] public Address sender Field Value Type Description Address | Improve this Doc View Source type Declaration [JsonProperty(PropertyName = \"type\")] public Transaction.Type type Field Value Type Description Transaction.Type | Improve this Doc View Source voteFirst voteFirst is the first round this keyreg tx is valid for Declaration [JsonProperty(PropertyName = \"votefst\")] public ulong? voteFirst Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source voteKeyDilution voteKeyDilution Declaration [JsonProperty(PropertyName = \"votekd\")] public ulong? voteKeyDilution Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source voteLast voteLast is the last round this keyreg tx is valid for Declaration [JsonProperty(PropertyName = \"votelst\")] public ulong? voteLast Field Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source votePK VotePK is the participation public key used in key registration transactions Declaration [JsonProperty(PropertyName = \"votekey\")] public ParticipationPublicKey votePK Field Value Type Description ParticipationPublicKey | Improve this Doc View Source xferAsset Declaration [JsonProperty(PropertyName = \"xaid\")] public ulong? xferAsset Field Value Type Description System.Nullable < System.UInt64 > Properties | Improve this Doc View Source lease Declaration [JsonProperty(PropertyName = \"lx\")] public byte[] lease { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source note Declaration [JsonProperty(PropertyName = \"note\")] public byte[] note { get; set; } Property Value Type Description System.Byte [] Methods | Improve this Doc View Source AssignGroupID(Digest) Declaration public void AssignGroupID(Digest gid) Parameters Type Name Description Digest gid | Improve this Doc View Source BytesToSign() Return encoded representation of the transaction with a prefix suitable for signing Declaration public byte[] BytesToSign() Returns Type Description System.Byte [] | Improve this Doc View Source CreateAssetAcceptTransaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, Nullable<UInt64>) Creates a tx to mark the account as willing to accept the asset. Declaration public static Transaction CreateAssetAcceptTransaction(Address acceptingAccount, ulong? flatFee, ulong? firstRound, ulong? lastRound, byte[] note, string genesisID, Digest genesisHash, ulong? assetIndex) Parameters Type Name Description Address acceptingAccount checksummed, human-readable address that will accept receiving the asset. System.Nullable < System.UInt64 > flatFee the transaction flat fee System.Nullable < System.UInt64 > firstRound the first round this txn is valid (txn semantics unrelated to asset management) System.Nullable < System.UInt64 > lastRound the last round this txn is valid System.Byte [] note System.String genesisID corresponds to the id of the network Digest genesisHash corresponds to the base64-encoded hash of the genesis System.Nullable < System.UInt64 > assetIndex the asset index Returns Type Description Transaction | Improve this Doc View Source CreateAssetConfigureTransaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, Nullable<UInt64>, Address, Address, Address, Address, Boolean) Create an asset configuration transaction. Note can be null. manager, reserve, freeze, and clawback can be zeroed. Declaration public static Transaction CreateAssetConfigureTransaction(Address sender, ulong? fee, ulong? firstValid, ulong? lastValid, byte[] note, string genesisID, Digest genesisHash, ulong? index, Address manager, Address reserve, Address freeze, Address clawback, bool strictEmptyAddressChecking) Parameters Type Name Description Address sender source address System.Nullable < System.UInt64 > fee transaction fee System.Nullable < System.UInt64 > firstValid first valid round System.Nullable < System.UInt64 > lastValid last valid round System.Byte [] note optional note field (can be null) System.String genesisID corresponds to the id of the network Digest genesisHash System.Nullable < System.UInt64 > index asset index Address manager account which can reconfigure the asset Address reserve account whose asset holdings count as non-minted Address freeze account which can freeze or unfreeze holder accounts Address clawback account which can issue clawbacks against holder accounts System.Boolean strictEmptyAddressChecking if true, disallow empty admin accounts from being set (preventing accidental disable of admin features) Returns Type Description Transaction the asset configure transaction | Improve this Doc View Source CreateAssetCreateTransaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, Nullable<UInt64>, Int32, Boolean, String, String, String, Byte[], Address, Address, Address, Address) Create an asset creation transaction. Note can be null. manager, reserve, freeze, and clawback can be zeroed. Declaration public static Transaction CreateAssetCreateTransaction(Address sender, ulong? fee, ulong? firstValid, ulong? lastValid, byte[] note, string genesisID, Digest genesisHash, ulong? assetTotal, int assetDecimals, bool defaultFrozen, string assetUnitName, string assetName, string url, byte[] metadataHash, Address manager, Address reserve, Address freeze, Address clawback) Parameters Type Name Description Address sender source address System.Nullable < System.UInt64 > fee transaction fee System.Nullable < System.UInt64 > firstValid first valid round System.Nullable < System.UInt64 > lastValid last valid round System.Byte [] note optional note field (can be null) System.String genesisID Digest genesisHash System.Nullable < System.UInt64 > assetTotal total asset issuance System.Int32 assetDecimals asset decimal precision System.Boolean defaultFrozen whether accounts have this asset frozen by default System.String assetUnitName name of unit of the asset System.String assetName name of the asset System.String url where more information about the asset can be retrieved System.Byte [] metadataHash specifies a commitment to some unspecified asset metadata. The format of this metadata is up to the application Address manager account which can reconfigure the asset Address reserve account whose asset holdings count as non-minted Address freeze account which can freeze or unfreeze holder accounts Address clawback account which can issue clawbacks against holder accounts Returns Type Description Transaction | Improve this Doc View Source CreateAssetDestroyTransaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], Digest, Nullable<UInt64>) Creates a tx to destroy the asset Declaration public static Transaction CreateAssetDestroyTransaction(Address senderAccount, ulong? flatFee, ulong? firstValid, ulong? lastValid, byte[] note, Digest genesisHash, ulong? assetIndex) Parameters Type Name Description Address senderAccount checksummed, human-readable address of the sender System.Nullable < System.UInt64 > flatFee the transaction flat fee System.Nullable < System.UInt64 > firstValid the first round this txn is valid (txn semantics unrelated to asset management) System.Nullable < System.UInt64 > lastValid the last round this txn is valid System.Byte [] note Digest genesisHash corresponds to the base64-encoded hash of the genesis System.Nullable < System.UInt64 > assetIndex the asset ID to destroy Returns Type Description Transaction | Improve this Doc View Source CreateAssetFreezeTransaction(Address, Address, Boolean, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], Digest, Nullable<UInt64>) Creates a tx to freeze/unfreeze assets Declaration public static Transaction CreateAssetFreezeTransaction(Address senderAccount, Address accountToFreeze, bool freezeState, ulong? flatFee, ulong? firstValid, ulong? lastValid, byte[] note, Digest genesisHash, ulong? assetIndex) Parameters Type Name Description Address senderAccount checksummed, human-readable address of the sender Address accountToFreeze System.Boolean freezeState System.Nullable < System.UInt64 > flatFee the transaction flat fee System.Nullable < System.UInt64 > firstValid the first round this txn is valid (txn semantics unrelated to asset management) System.Nullable < System.UInt64 > lastValid the last round this txn is valid System.Byte [] note Digest genesisHash corresponds to the base64-encoded hash of the genesis of the network System.Nullable < System.UInt64 > assetIndex the asset ID to destroy Returns Type Description Transaction | Improve this Doc View Source CreateAssetRevokeTransaction(Address, Address, Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, Nullable<UInt64>) Creates a tx for revoking an asset from an account and sending it to another Declaration public static Transaction CreateAssetRevokeTransaction(Address transactionSender, Address assetRevokedFrom, Address assetReceiver, ulong? assetAmount, ulong? flatFee, ulong? firstRound, ulong? lastRound, byte[] note, string genesisID, Digest genesisHash, ulong? assetIndex) Parameters Type Name Description Address transactionSender checksummed, human-readable address that will send the transaction Address assetRevokedFrom checksummed, human-readable address that will have assets taken from Address assetReceiver checksummed, human-readable address what will receive the assets System.Nullable < System.UInt64 > assetAmount the number of assets to send System.Nullable < System.UInt64 > flatFee the transaction flat fee System.Nullable < System.UInt64 > firstRound the first round this txn is valid (txn semantics unrelated to asset management) System.Nullable < System.UInt64 > lastRound the last round this txn is valid System.Byte [] note System.String genesisID corresponds to the id of the network Digest genesisHash corresponds to the base64-encoded hash of the genesis of the network System.Nullable < System.UInt64 > assetIndex the asset index Returns Type Description Transaction | Improve this Doc View Source CreateAssetTransferTransaction(Address, Address, Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, Nullable<UInt64>) Creates a tx for sending some asset from an asset holder to another user. The asset receiver must have marked itself as willing to accept the asset. Declaration public static Transaction CreateAssetTransferTransaction(Address assetSender, Address assetReceiver, Address assetCloseTo, ulong? assetAmount, ulong? flatFee, ulong? firstRound, ulong? lastRound, byte[] note, string genesisID, Digest genesisHash, ulong? assetIndex) Parameters Type Name Description Address assetSender checksummed, human-readable address that will send the transaction and assets Address assetReceiver checksummed, human-readable address what will receive the assets Address assetCloseTo checksummed, human-readable address that behaves as a close-to address for the asset transaction; the remaining assets not sent to assetReceiver will be sent to assetCloseTo. Leave blank for no close-to behavior. System.Nullable < System.UInt64 > assetAmount the number of assets to send System.Nullable < System.UInt64 > flatFee the transaction flat fee System.Nullable < System.UInt64 > firstRound the first round this txn is valid (txn semantics unrelated to asset management) System.Nullable < System.UInt64 > lastRound the last round this txn is valid System.Byte [] note System.String genesisID corresponds to the id of the network Digest genesisHash corresponds to the base64-encoded hash of the genesis of the network System.Nullable < System.UInt64 > assetIndex the asset index Returns Type Description Transaction | Improve this Doc View Source CreateKeyRegistrationTransaction(Address, Nullable<UInt64>, Nullable<UInt64>, Nullable<UInt64>, Byte[], String, Digest, ParticipationPublicKey, VRFPublicKey, UInt64, UInt64, UInt64) Create a key registration transaction. Declaration public static Transaction CreateKeyRegistrationTransaction(Address sender, ulong? fee, ulong? firstValid, ulong? lastValid, byte[] note, string genesisID, Digest genesisHash, ParticipationPublicKey votePK, VRFPublicKey vrfPK, ulong voteFirst, ulong voteLast, ulong voteKeyDilution) Parameters Type Name Description Address sender System.Nullable < System.UInt64 > fee System.Nullable < System.UInt64 > firstValid System.Nullable < System.UInt64 > lastValid System.Byte [] note System.String genesisID Digest genesisHash ParticipationPublicKey votePK VRFPublicKey vrfPK System.UInt64 voteFirst System.UInt64 voteLast System.UInt64 voteKeyDilution Returns Type Description Transaction | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object o) Parameters Type Name Description System.Object o Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source RawTxID() Return transaction ID as Digest Declaration public Digest RawTxID() Returns Type Description Digest | Improve this Doc View Source TxID() Return transaction ID as string Declaration public string TxID() Returns Type Description System.String"
  },
  "api/Algorand.Transaction.Type.html": {
    "href": "api/Algorand.Transaction.Type.html",
    "title": "Class Transaction.Type | Dotnet Algorand Documents",
    "keywords": "Class Transaction.Type TxType represents a transaction type. Inheritance System.Object Transaction.Type Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonConverter(typeof(Type2StringConverter))] public class Type Constructors | Improve this Doc View Source Type(Int32) Declaration public Type(int value) Parameters Type Name Description System.Int32 value | Improve this Doc View Source Type(String) Return the enumeration for the given string value. Required for JSON serialization. Declaration [JsonConstructor] public Type(string value) Parameters Type Name Description System.String value string representation Fields | Improve this Doc View Source ApplicationCall Declaration public static readonly Transaction.Type ApplicationCall Field Value Type Description Transaction.Type | Improve this Doc View Source AssetConfig Declaration public static readonly Transaction.Type AssetConfig Field Value Type Description Transaction.Type | Improve this Doc View Source AssetFreeze Declaration public static readonly Transaction.Type AssetFreeze Field Value Type Description Transaction.Type | Improve this Doc View Source AssetTransfer Declaration public static readonly Transaction.Type AssetTransfer Field Value Type Description Transaction.Type | Improve this Doc View Source Default Declaration public static readonly Transaction.Type Default Field Value Type Description Transaction.Type | Improve this Doc View Source KeyRegistration Declaration public static readonly Transaction.Type KeyRegistration Field Value Type Description Transaction.Type | Improve this Doc View Source Payment Declaration public static readonly Transaction.Type Payment Field Value Type Description Transaction.Type Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode() | Improve this Doc View Source ToValue() Return the string value for this enumeration. Required for JSON serialization. Declaration public string ToValue() Returns Type Description System.String string value"
  },
  "api/Algorand.TxGroup.html": {
    "href": "api/Algorand.TxGroup.html",
    "title": "Class TxGroup | Dotnet Algorand Documents",
    "keywords": "Class TxGroup TxGroup exports computeGroupID and assignGroupID functions Inheritance System.Object TxGroup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonObject] public class TxGroup Fields | Improve this Doc View Source MAX_TX_GROUP_SIZE Declaration public static int MAX_TX_GROUP_SIZE Field Value Type Description System.Int32 Methods | Improve this Doc View Source AssignGroupID(Address, Transaction[]) Assigns group id to a given array of unsigned transactions Declaration public static Transaction[] AssignGroupID(Address address, params Transaction[] txns) Parameters Type Name Description Address address optional sender address specifying which transaction return Transaction [] txns array of transactions Returns Type Description Transaction [] array of grouped transactions, optionally filtered with the address parameter. | Improve this Doc View Source AssignGroupID(Transaction[]) Assigns group id to a given array of unsigned transactions Declaration public static Transaction[] AssignGroupID(params Transaction[] txns) Parameters Type Name Description Transaction [] txns array of transactions Returns Type Description Transaction [] array of grouped transactions, optionally filtered with the address parameter. | Improve this Doc View Source AssignGroupID(Transaction[], Address) Assigns group id to a given array of unsigned transactions Deprecated use assignGroupID(address, params Transaction txns) Declaration public static Transaction[] AssignGroupID(Transaction[] txns, Address address) Parameters Type Name Description Transaction [] txns rray of transactions Address address optional sender address specifying which transaction return Returns Type Description Transaction [] array of grouped transactions, optionally filtered with the address parameter. | Improve this Doc View Source ComputeGroupID(Transaction[]) Compute group ID for a group of unsigned transactions Declaration public static Digest ComputeGroupID(params Transaction[] txns) Parameters Type Name Description Transaction [] txns array of transactions Returns Type Description Digest Digest"
  },
  "api/Algorand.Utils.html": {
    "href": "api/Algorand.Utils.html",
    "title": "Class Utils | Dotnet Algorand Documents",
    "keywords": "Class Utils Convenience methods for algorand sdk. Inheritance System.Object Utils Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class Utils Methods | Improve this Doc View Source AlgosToMicroalgos(Double) Declaration public static ulong AlgosToMicroalgos(double algos) Parameters Type Name Description System.Double algos Returns Type Description System.UInt64 | Improve this Doc View Source GetActivateAssetTransaction(Address, Nullable<UInt64>, TransactionParams, String) DEPRECATED Please use GetAssetOptingInTransaction. Generate an opting in asset transaction All accounts that want recieve the new asset have to opt in Declaration public static Transaction GetActivateAssetTransaction(Address sender, ulong? assetId, TransactionParams trans, string message = \"\") Parameters Type Name Description Address sender The account want to opt in System.Nullable < System.UInt64 > assetId Asset ID TransactionParams trans The blockchain infomation System.String message The message for the transaction(have no affect to the assect) Returns Type Description Transaction transaction | Improve this Doc View Source GetApplicationTransaction(Address, Int64, Int64, String, OnCompletion, Int64, List<Byte[]>, List<Address>, List<Int64>, List<Int64>) Declaration public static Transaction GetApplicationTransaction(Address sender, long firstValid, long lastValid, string genesishashb64, OnCompletion onCompletion, long applicationId, List<byte[]> applicationArgs, List<Address> accounts, List<long> foreignApps, List<long> foreignAssets) Parameters Type Name Description Address sender System.Int64 firstValid System.Int64 lastValid System.String genesishashb64 OnCompletion onCompletion System.Int64 applicationId System.Collections.Generic.List < System.Byte []> applicationArgs System.Collections.Generic.List < Address > accounts System.Collections.Generic.List < System.Int64 > foreignApps System.Collections.Generic.List < System.Int64 > foreignAssets Returns Type Description Transaction | Improve this Doc View Source GetAssetOptingInTransaction(Address, Nullable<Int64>, TransactionParametersResponse, String) Declaration public static Transaction GetAssetOptingInTransaction(Address sender, long? assetID, TransactionParametersResponse trans, string message = \"\") Parameters Type Name Description Address sender System.Nullable < System.Int64 > assetID TransactionParametersResponse trans System.String message Returns Type Description Transaction | Improve this Doc View Source GetAssetOptingInTransaction(Address, Nullable<UInt64>, TransactionParams, String) Generate an opting in asset transaction All accounts that want recieve the new asset have to opt in Declaration public static Transaction GetAssetOptingInTransaction(Address sender, ulong? assetId, TransactionParams trans, string message = \"\") Parameters Type Name Description Address sender The account want to opt in System.Nullable < System.UInt64 > assetId Asset ID TransactionParams trans The blockchain infomation System.String message The message for the transaction(have no affect to the assect) Returns Type Description Transaction transaction | Improve this Doc View Source GetBidTransaction(Address, Address, SignedBid, TransactionParams) Declaration public static Transaction GetBidTransaction(Address bidder, Address auction, SignedBid signedBid, TransactionParams trans) Parameters Type Name Description Address bidder Address auction SignedBid signedBid TransactionParams trans Returns Type Description Transaction | Improve this Doc View Source GetConfigAssetTransaction(Address, Asset, TransactionParametersResponse, String) Declaration public static Transaction GetConfigAssetTransaction(Address sender, Asset asset, TransactionParametersResponse trans, string message = \"\") Parameters Type Name Description Address sender Asset asset TransactionParametersResponse trans System.String message Returns Type Description Transaction | Improve this Doc View Source GetConfigAssetTransaction(Address, Nullable<UInt64>, AssetParams, TransactionParams, String) Generate an asset config transaction Declaration public static Transaction GetConfigAssetTransaction(Address sender, ulong? assetId, AssetParams asset, TransactionParams trans, string message = \"\") Parameters Type Name Description Address sender The sender of the transaction, should be the manager of the asset. System.Nullable < System.UInt64 > assetId Asset ID AssetParams asset Asset infomation TransactionParams trans The blockchain infomation System.String message The message for the transaction(have no affect to the assect) Returns Type Description Transaction transaction | Improve this Doc View Source GetCreateAssetTransaction(AssetParams, TransactionParams, String, Int32) Generate a create asset transaction Declaration public static Transaction GetCreateAssetTransaction(AssetParams asset, TransactionParams trans, string message = \"\", int decimals = 0) Parameters Type Name Description AssetParams asset The asset infomation TransactionParams trans The blockchain infomation System.String message The message for the transaction(have no affect to the assect) System.Int32 decimals A value of 0 represents an asset that is not divisible, while a value of 1 represents an asset that is divisible into tenths and so on, i.e, the number of digits to display after the decimal place when displaying the asset. This value must be between 0 and 19 Returns Type Description Transaction transaction | Improve this Doc View Source GetCreateAssetTransaction(AssetParams, TransactionParametersResponse, String) Generate a create asset transaction V2 Declaration public static Transaction GetCreateAssetTransaction(AssetParams asset, TransactionParametersResponse trans, string message = \"\") Parameters Type Name Description AssetParams asset The asset infomation TransactionParametersResponse trans The blockchain infomation System.String message The message for the transaction(have no affect to the assect) Returns Type Description Transaction transaction | Improve this Doc View Source GetDestroyAssetTransaction(Address, Nullable<Int64>, TransactionParametersResponse, String) Declaration public static Transaction GetDestroyAssetTransaction(Address manager, long? assetId, TransactionParametersResponse trans, string message = \"\") Parameters Type Name Description Address manager System.Nullable < System.Int64 > assetId TransactionParametersResponse trans System.String message Returns Type Description Transaction | Improve this Doc View Source GetDestroyAssetTransaction(Address, Nullable<UInt64>, TransactionParams, String) Declaration public static Transaction GetDestroyAssetTransaction(Address manager, ulong? assetId, TransactionParams trans, string message = \"\") Parameters Type Name Description Address manager System.Nullable < System.UInt64 > assetId TransactionParams trans System.String message Returns Type Description Transaction | Improve this Doc View Source GetDryrunResponse(AlgodApi, SignedTransaction, Byte[]) Declaration public static DryrunResponse GetDryrunResponse(AlgodApi client, SignedTransaction stxn, byte[] source = null) Parameters Type Name Description AlgodApi client SignedTransaction stxn System.Byte [] source Returns Type Description DryrunResponse | Improve this Doc View Source GetFreezeAssetTransaction(Address, Address, Nullable<Int64>, Boolean, TransactionParametersResponse, String) Declaration public static Transaction GetFreezeAssetTransaction(Address sender, Address toFreeze, long? assetId, bool freezeState, TransactionParametersResponse trans, string message = \"\") Parameters Type Name Description Address sender Address toFreeze System.Nullable < System.Int64 > assetId System.Boolean freezeState TransactionParametersResponse trans System.String message Returns Type Description Transaction | Improve this Doc View Source GetFreezeAssetTransaction(Address, Address, Nullable<UInt64>, Boolean, TransactionParams, String) Generate an asset freeze transaction Declaration public static Transaction GetFreezeAssetTransaction(Address sender, Address toFreeze, ulong? assetId, bool freezeState, TransactionParams trans, string message = \"\") Parameters Type Name Description Address sender The sender of the transaction, should be the freezer of the asset. Address toFreeze The account which hold the asset will be frozen. System.Nullable < System.UInt64 > assetId Asset ID System.Boolean freezeState true to frozen the asset, false to unfrozen the asset. TransactionParams trans The blockchain infomation System.String message The message for the transaction(have no affect to the assect) Returns Type Description Transaction transaction | Improve this Doc View Source GetPaymentTransaction(Address, Address, Nullable<UInt64>, String, TransactionParams) Get a payment transaction Declaration public static Transaction GetPaymentTransaction(Address from, Address to, ulong? amount, string message, TransactionParams trans) Parameters Type Name Description Address from from address Address to to address System.Nullable < System.UInt64 > amount amount(Unit:MicroAlgo) System.String message message TransactionParams trans Transaction Params(use AlgodApi.TransactionParams() function to get the params) Returns Type Description Transaction payment transaction | Improve this Doc View Source GetPaymentTransaction(Address, Address, Nullable<UInt64>, String, TransactionParametersResponse) Get a payment transaction Declaration public static Transaction GetPaymentTransaction(Address from, Address to, ulong? amount, string message, TransactionParametersResponse trans) Parameters Type Name Description Address from from address Address to to address System.Nullable < System.UInt64 > amount amount(Unit:MicroAlgo) System.String message message TransactionParametersResponse trans Transaction Params(use AlgodApi.TransactionParams() function to get the params) Returns Type Description Transaction payment transaction | Improve this Doc View Source GetPaymentTransactionWithInfo(Address, Address, Nullable<UInt64>, String, Nullable<UInt64>, Nullable<UInt64>, String, String) Declaration public static Transaction GetPaymentTransactionWithInfo(Address from, Address to, ulong? amount, string message, ulong? fee, ulong? lastRound, string genesisId, string genesishashb64) Parameters Type Name Description Address from Address to System.Nullable < System.UInt64 > amount System.String message System.Nullable < System.UInt64 > fee System.Nullable < System.UInt64 > lastRound System.String genesisId System.String genesishashb64 Returns Type Description Transaction | Improve this Doc View Source GetRandomAssetMetaHash() Generate a 32 bytes string for asset metadata hash Declaration public static string GetRandomAssetMetaHash() Returns Type Description System.String a 32 bytes string | Improve this Doc View Source GetRevokeAssetTransaction(Address, Address, Address, Nullable<Int64>, UInt64, TransactionParametersResponse, String) Declaration public static Transaction GetRevokeAssetTransaction(Address reserve, Address revokedFrom, Address receiver, long? assetId, ulong amount, TransactionParametersResponse trans, string message = \"\") Parameters Type Name Description Address reserve Address revokedFrom Address receiver System.Nullable < System.Int64 > assetId System.UInt64 amount TransactionParametersResponse trans System.String message Returns Type Description Transaction | Improve this Doc View Source GetRevokeAssetTransaction(Address, Address, Address, Nullable<UInt64>, UInt64, TransactionParams, String) Declaration public static Transaction GetRevokeAssetTransaction(Address reserve, Address revokedFrom, Address receiver, ulong? assetId, ulong amount, TransactionParams trans, string message = \"\") Parameters Type Name Description Address reserve Address revokedFrom Address receiver System.Nullable < System.UInt64 > assetId System.UInt64 amount TransactionParams trans System.String message Returns Type Description Transaction | Improve this Doc View Source GetTransferAssetTransaction(Address, Address, Nullable<Int64>, UInt64, TransactionParametersResponse, Address, String) Declaration public static Transaction GetTransferAssetTransaction(Address from, Address to, long? assetId, ulong amount, TransactionParametersResponse trans, Address closeTo = null, string message = \"\") Parameters Type Name Description Address from Address to System.Nullable < System.Int64 > assetId System.UInt64 amount TransactionParametersResponse trans Address closeTo System.String message Returns Type Description Transaction | Improve this Doc View Source GetTransferAssetTransaction(Address, Address, Nullable<UInt64>, UInt64, TransactionParams, Address, String) Declaration public static Transaction GetTransferAssetTransaction(Address from, Address to, ulong? assetId, ulong amount, TransactionParams trans, Address closeTo = null, string message = \"\") Parameters Type Name Description Address from Address to System.Nullable < System.UInt64 > assetId System.UInt64 amount TransactionParams trans Address closeTo System.String message Returns Type Description Transaction | Improve this Doc View Source MicroalgosToAlgos(UInt64) Declaration public static double MicroalgosToAlgos(ulong microAlgos) Parameters Type Name Description System.UInt64 microAlgos Returns Type Description System.Double | Improve this Doc View Source SubmitTransaction(AlgodApi, SignedTransaction) encode and submit signed transaction Declaration public static TransactionID SubmitTransaction(AlgodApi instance, SignedTransaction signedTx) Parameters Type Name Description AlgodApi instance SignedTransaction signedTx Returns Type Description TransactionID | Improve this Doc View Source SubmitTransaction(AlgodApi, SignedTransaction) encode and submit signed transaction using algod v2 api Declaration public static PostTransactionsResponse SubmitTransaction(AlgodApi instance, SignedTransaction signedTx) Parameters Type Name Description AlgodApi instance SignedTransaction signedTx Returns Type Description PostTransactionsResponse | Improve this Doc View Source WaitTransactionToComplete(AlgodApi, String) wait transaction to complete Declaration public static string WaitTransactionToComplete(AlgodApi instance, string txID) Parameters Type Name Description AlgodApi instance System.String txID Returns Type Description System.String | Improve this Doc View Source WaitTransactionToComplete(AlgodApi, String) wait transaction to complete using algod v2 api Declaration public static string WaitTransactionToComplete(AlgodApi instance, string txID) Parameters Type Name Description AlgodApi instance System.String txID Returns Type Description System.String"
  },
  "api/Algorand.V2.Algod.CommonApi.html": {
    "href": "api/Algorand.V2.Algod.CommonApi.html",
    "title": "Class CommonApi | Dotnet Algorand Documents",
    "keywords": "Class CommonApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object CommonApi Implements ICommonApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2.Algod Assembly : Algorand.dll Syntax public class CommonApi : ICommonApi, IApiAccessor Constructors | Improve this Doc View Source CommonApi(Configuration) Initializes a new instance of the CommonApi class using Configuration object Declaration public CommonApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source CommonApi(String) Initializes a new instance of the CommonApi class. Declaration public CommonApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source GetGenesis() Gets the genesis information. Returns the entire genesis file in json. Declaration public string GetGenesis() Returns Type Description System.String string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetGenesisAsync() Gets the genesis information. Returns the entire genesis file in json. Declaration public Task<string> GetGenesisAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Task of string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetGenesisAsyncWithHttpInfo() Gets the genesis information. Returns the entire genesis file in json. Declaration public Task<ApiResponse<string>> GetGenesisAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.String >> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetGenesisWithHttpInfo() Gets the genesis information. Returns the entire genesis file in json. Declaration public ApiResponse<string> GetGenesisWithHttpInfo() Returns Type Description ApiResponse < System.String > ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersion() Retrieves the supported API versions, binary build versions, and genesis information. Declaration public Version GetVersion() Returns Type Description Version Version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsync() Retrieves the supported API versions, binary build versions, and genesis information. Declaration public Task<Version> GetVersionAsync() Returns Type Description System.Threading.Tasks.Task < Version > Task of Version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsyncWithHttpInfo() Retrieves the supported API versions, binary build versions, and genesis information. Declaration public Task<ApiResponse<Version>> GetVersionAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < Version >> Task of ApiResponse (Version) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionWithHttpInfo() Retrieves the supported API versions, binary build versions, and genesis information. Declaration public ApiResponse<Version> GetVersionWithHttpInfo() Returns Type Description ApiResponse < Version > ApiResponse of Version Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheck() Returns OK if healthy. Declaration public void HealthCheck() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsync() Returns OK if healthy. Declaration public Task HealthCheckAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsyncWithHttpInfo() Returns OK if healthy. Declaration public Task<ApiResponse<object>> HealthCheckAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckWithHttpInfo() Returns OK if healthy. Declaration public ApiResponse<object> HealthCheckWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Metrics() Return metrics about algod functioning. Declaration public void Metrics() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsync() Return metrics about algod functioning. Declaration public Task MetricsAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsyncWithHttpInfo() Return metrics about algod functioning. Declaration public Task<ApiResponse<object>> MetricsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsWithHttpInfo() Return metrics about algod functioning. Declaration public ApiResponse<object> MetricsWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath | Improve this Doc View Source SwaggerJSON() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public string SwaggerJSON() Returns Type Description System.String string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsync() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public Task<string> SwaggerJSONAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Task of string Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsyncWithHttpInfo() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public Task<ApiResponse<string>> SwaggerJSONAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.String >> Task of ApiResponse (string) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONWithHttpInfo() Gets the current swagger spec. Returns the entire swagger spec in json. Declaration public ApiResponse<string> SwaggerJSONWithHttpInfo() Returns Type Description ApiResponse < System.String > ApiResponse of string Exceptions Type Condition ApiException Thrown when fails to make API call Implements ICommonApi IApiAccessor"
  },
  "api/Algorand.V2.Algod.DefaultApi.html": {
    "href": "api/Algorand.V2.Algod.DefaultApi.html",
    "title": "Class DefaultApi | Dotnet Algorand Documents",
    "keywords": "Class DefaultApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object DefaultApi AlgodApi Implements IDefaultApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2.Algod Assembly : Algorand.dll Syntax public class DefaultApi : IDefaultApi, IApiAccessor Constructors | Improve this Doc View Source DefaultApi(Configuration) Initializes a new instance of the DefaultApi class using Configuration object Declaration public DefaultApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source DefaultApi(String) Initializes a new instance of the DefaultApi class. Declaration public DefaultApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AccountInformation(String, String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public Account AccountInformation(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description Account Account Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsync(String, String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public Task<Account> AccountInformationAsync(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < Account > Task of Account Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsyncWithHttpInfo(String, String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public Task<ApiResponse<Account>> AccountInformationAsyncWithHttpInfo(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < Account >> Task of ApiResponse (Account) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationWithHttpInfo(String, String) Get account information. Given a specific account public key, this call returns the accounts status, balance and spendable amounts Declaration public ApiResponse<Account> AccountInformationWithHttpInfo(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < Account > ApiResponse of Account Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source GetApplicationByID(Nullable<Int64>) Get application information. Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Declaration public Application GetApplicationByID(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description Application Application Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetApplicationByIDAsync(Nullable<Int64>) Get application information. Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Declaration public Task<Application> GetApplicationByIDAsync(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description System.Threading.Tasks.Task < Application > Task of Application Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetApplicationByIDAsyncWithHttpInfo(Nullable<Int64>) Get application information. Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Declaration public Task<ApiResponse<Application>> GetApplicationByIDAsyncWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description System.Threading.Tasks.Task < ApiResponse < Application >> Task of ApiResponse (Application) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetApplicationByIDWithHttpInfo(Nullable<Int64>) Get application information. Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Declaration public ApiResponse<Application> GetApplicationByIDWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description ApiResponse < Application > ApiResponse of Application Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByID(Nullable<Int64>) Get asset information. Given a asset id, it returns asset information including creator, name, total supply and special addresses. Declaration public Asset GetAssetByID(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description Asset Asset Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByIDAsync(Nullable<Int64>) Get asset information. Given a asset id, it returns asset information including creator, name, total supply and special addresses. Declaration public Task<Asset> GetAssetByIDAsync(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description System.Threading.Tasks.Task < Asset > Task of Asset Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByIDAsyncWithHttpInfo(Nullable<Int64>) Get asset information. Given a asset id, it returns asset information including creator, name, total supply and special addresses. Declaration public Task<ApiResponse<Asset>> GetAssetByIDAsyncWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description System.Threading.Tasks.Task < ApiResponse < Asset >> Task of ApiResponse (Asset) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByIDWithHttpInfo(Nullable<Int64>) Get asset information. Given a asset id, it returns asset information including creator, name, total supply and special addresses. Declaration public ApiResponse<Asset> GetAssetByIDWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description ApiResponse < Asset > ApiResponse of Asset Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source GetBlock(Nullable<Int64>, String) Get the block for the given round. Declaration public BlockResponse GetBlock(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description BlockResponse BlockResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsync(Nullable<Int64>, String) Get the block for the given round. Declaration public Task<BlockResponse> GetBlockAsync(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < BlockResponse > Task of BlockResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsyncWithHttpInfo(Nullable<Int64>, String) Get the block for the given round. Declaration public Task<ApiResponse<BlockResponse>> GetBlockAsyncWithHttpInfo(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < BlockResponse >> Task of ApiResponse (BlockResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockWithHttpInfo(Nullable<Int64>, String) Get the block for the given round. Declaration public ApiResponse<BlockResponse> GetBlockWithHttpInfo(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < BlockResponse > ApiResponse of BlockResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactions(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public PendingTransactionsResponse GetPendingTransactions(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description PendingTransactionsResponse PendingTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsync(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<PendingTransactionsResponse> GetPendingTransactionsAsync(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactionsResponse > Task of PendingTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsyncWithHttpInfo(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<ApiResponse<PendingTransactionsResponse>> GetPendingTransactionsAsyncWithHttpInfo(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactionsResponse >> Task of ApiResponse (PendingTransactionsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddress(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public PendingTransactionsResponse GetPendingTransactionsByAddress(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description PendingTransactionsResponse PendingTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsync(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<PendingTransactionsResponse> GetPendingTransactionsByAddressAsync(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactionsResponse > Task of PendingTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsyncWithHttpInfo(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public Task<ApiResponse<PendingTransactionsResponse>> GetPendingTransactionsByAddressAsyncWithHttpInfo(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactionsResponse >> Task of ApiResponse (PendingTransactionsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressWithHttpInfo(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public ApiResponse<PendingTransactionsResponse> GetPendingTransactionsByAddressWithHttpInfo(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < PendingTransactionsResponse > ApiResponse of PendingTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsWithHttpInfo(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Declaration public ApiResponse<PendingTransactionsResponse> GetPendingTransactionsWithHttpInfo(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < PendingTransactionsResponse > ApiResponse of PendingTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatus() Gets the current node status. Declaration public NodeStatusResponse GetStatus() Returns Type Description NodeStatusResponse NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsync() Gets the current node status. Declaration public Task<NodeStatusResponse> GetStatusAsync() Returns Type Description System.Threading.Tasks.Task < NodeStatusResponse > Task of NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsyncWithHttpInfo() Gets the current node status. Declaration public Task<ApiResponse<NodeStatusResponse>> GetStatusAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatusResponse >> Task of ApiResponse (NodeStatusResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusWithHttpInfo() Gets the current node status. Declaration public ApiResponse<NodeStatusResponse> GetStatusWithHttpInfo() Returns Type Description ApiResponse < NodeStatusResponse > ApiResponse of NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupply() Get the current supply reported by the ledger. Declaration public SupplyResponse GetSupply() Returns Type Description SupplyResponse PendingTransactionsResponse2 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsync() Get the current supply reported by the ledger. Declaration public Task<SupplyResponse> GetSupplyAsync() Returns Type Description System.Threading.Tasks.Task < SupplyResponse > Task of PendingTransactionsResponse2 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsyncWithHttpInfo() Get the current supply reported by the ledger. Declaration public Task<ApiResponse<SupplyResponse>> GetSupplyAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < SupplyResponse >> Task of ApiResponse (PendingTransactionsResponse2) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyWithHttpInfo() Get the current supply reported by the ledger. Declaration public ApiResponse<SupplyResponse> GetSupplyWithHttpInfo() Returns Type Description ApiResponse < SupplyResponse > ApiResponse of PendingTransactionsResponse2 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformation(String, String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public PendingTransactionResponse PendingTransactionInformation(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description PendingTransactionResponse PendingTransactionsResponse6 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsync(String, String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public Task<PendingTransactionResponse> PendingTransactionInformationAsync(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactionResponse > Task of PendingTransactionsResponse6 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsyncWithHttpInfo(String, String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public Task<ApiResponse<PendingTransactionResponse>> PendingTransactionInformationAsyncWithHttpInfo(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactionResponse >> Task of ApiResponse (PendingTransactionsResponse6) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationWithHttpInfo(String, String) Get a specific pending transaction. Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Declaration public ApiResponse<PendingTransactionResponse> PendingTransactionInformationWithHttpInfo(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < PendingTransactionResponse > ApiResponse of PendingTransactionsResponse6 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransaction(Byte[]) Broadcasts a raw transaction to the network. Declaration public PostTransactionsResponse RawTransaction(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description PostTransactionsResponse PendingTransactionsResponse3 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsync(Byte[]) Broadcasts a raw transaction to the network. Declaration public Task<PostTransactionsResponse> RawTransactionAsync(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < PostTransactionsResponse > Task of PendingTransactionsResponse3 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsyncWithHttpInfo(Byte[]) Broadcasts a raw transaction to the network. Declaration public Task<ApiResponse<PostTransactionsResponse>> RawTransactionAsyncWithHttpInfo(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < ApiResponse < PostTransactionsResponse >> Task of ApiResponse (PendingTransactionsResponse3) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionWithHttpInfo(Byte[]) Broadcasts a raw transaction to the network. Declaration public ApiResponse<PostTransactionsResponse> RawTransactionWithHttpInfo(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description ApiResponse < PostTransactionsResponse > ApiResponse of PendingTransactionsResponse3 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath | Improve this Doc View Source TealCompile(Byte[]) Compile TEAL source code to binary, produce its hash Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Declaration public CompileResponse TealCompile(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description CompileResponse PendingTransactionsResponse7 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealCompileAsync(Byte[]) Compile TEAL source code to binary, produce its hash Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Declaration public Task<CompileResponse> TealCompileAsync(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description System.Threading.Tasks.Task < CompileResponse > Task of PendingTransactionsResponse7 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealCompileAsyncWithHttpInfo(Byte[]) Compile TEAL source code to binary, produce its hash Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Declaration public Task<ApiResponse<CompileResponse>> TealCompileAsyncWithHttpInfo(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description System.Threading.Tasks.Task < ApiResponse < CompileResponse >> Task of ApiResponse (PendingTransactionsResponse7) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealCompileWithHttpInfo(Byte[]) Compile TEAL source code to binary, produce its hash Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Declaration public ApiResponse<CompileResponse> TealCompileWithHttpInfo(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description ApiResponse < CompileResponse > ApiResponse of PendingTransactionsResponse7 Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrun(DryrunRequest) Provide debugging information for a transaction (or group). Executes TEAL program(s) in context and returns debugging information about the execution. Declaration public DryrunResponse TealDryrun(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description DryrunResponse DryrunResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrunAsync(DryrunRequest) Provide debugging information for a transaction (or group). Executes TEAL program(s) in context and returns debugging information about the execution. Declaration public Task<DryrunResponse> TealDryrunAsync(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description System.Threading.Tasks.Task < DryrunResponse > Task of DryrunResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrunAsyncWithHttpInfo(DryrunRequest) Provide debugging information for a transaction (or group). Executes TEAL program(s) in context and returns debugging information about the execution. Declaration public Task<ApiResponse<DryrunResponse>> TealDryrunAsyncWithHttpInfo(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < DryrunResponse >> Task of ApiResponse (DryrunResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrunWithHttpInfo(DryrunRequest) Provide debugging information for a transaction (or group). Executes TEAL program(s) in context and returns debugging information about the execution. Declaration public ApiResponse<DryrunResponse> TealDryrunWithHttpInfo(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description ApiResponse < DryrunResponse > ApiResponse of DryrunResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParams() Get parameters for constructing a new transaction Declaration public TransactionParametersResponse TransactionParams() Returns Type Description TransactionParametersResponse TransactionParametersResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsync() Get parameters for constructing a new transaction Declaration public Task<TransactionParametersResponse> TransactionParamsAsync() Returns Type Description System.Threading.Tasks.Task < TransactionParametersResponse > Task of TransactionParametersResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsyncWithHttpInfo() Get parameters for constructing a new transaction Declaration public Task<ApiResponse<TransactionParametersResponse>> TransactionParamsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionParametersResponse >> Task of ApiResponse (TransactionParametersResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsWithHttpInfo() Get parameters for constructing a new transaction Declaration public ApiResponse<TransactionParametersResponse> TransactionParamsWithHttpInfo() Returns Type Description ApiResponse < TransactionParametersResponse > ApiResponse of TransactionParametersResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlock(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public NodeStatusResponse WaitForBlock(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description NodeStatusResponse NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsync(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public Task<NodeStatusResponse> WaitForBlockAsync(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < NodeStatusResponse > Task of NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsyncWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public Task<ApiResponse<NodeStatusResponse>> WaitForBlockAsyncWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatusResponse >> Task of ApiResponse (NodeStatusResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Waits for a block to appear after round {round} and returns the node's status at the time. Declaration public ApiResponse<NodeStatusResponse> WaitForBlockWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description ApiResponse < NodeStatusResponse > ApiResponse of NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call Implements IDefaultApi IApiAccessor"
  },
  "api/Algorand.V2.Algod.html": {
    "href": "api/Algorand.V2.Algod.html",
    "title": "Namespace Algorand.V2.Algod | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.V2.Algod Classes CommonApi Represents a collection of functions to interact with the API endpoints DefaultApi Represents a collection of functions to interact with the API endpoints PrivateApi Represents a collection of functions to interact with the API endpoints Interfaces ICommonApi Represents a collection of functions to interact with the API endpoints IDefaultApi Represents a collection of functions to interact with the API endpoints IPrivateApi Represents a collection of functions to interact with the API endpoints"
  },
  "api/Algorand.V2.Algod.ICommonApi.html": {
    "href": "api/Algorand.V2.Algod.ICommonApi.html",
    "title": "Interface ICommonApi | Dotnet Algorand Documents",
    "keywords": "Interface ICommonApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.V2.Algod Assembly : Algorand.dll Syntax public interface ICommonApi : IApiAccessor Methods | Improve this Doc View Source GetGenesis() Gets the genesis information. Declaration string GetGenesis() Returns Type Description System.String string Remarks Returns the entire genesis file in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetGenesisAsync() Gets the genesis information. Declaration Task<string> GetGenesisAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Task of string Remarks Returns the entire genesis file in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetGenesisAsyncWithHttpInfo() Gets the genesis information. Declaration Task<ApiResponse<string>> GetGenesisAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.String >> Task of ApiResponse (string) Remarks Returns the entire genesis file in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetGenesisWithHttpInfo() Gets the genesis information. Declaration ApiResponse<string> GetGenesisWithHttpInfo() Returns Type Description ApiResponse < System.String > ApiResponse of string Remarks Returns the entire genesis file in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersion() Declaration Version GetVersion() Returns Type Description Version Version Remarks Retrieves the supported API versions, binary build versions, and genesis information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsync() Declaration Task<Version> GetVersionAsync() Returns Type Description System.Threading.Tasks.Task < Version > Task of Version Remarks Retrieves the supported API versions, binary build versions, and genesis information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionAsyncWithHttpInfo() Declaration Task<ApiResponse<Version>> GetVersionAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < Version >> Task of ApiResponse (Version) Remarks Retrieves the supported API versions, binary build versions, and genesis information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetVersionWithHttpInfo() Declaration ApiResponse<Version> GetVersionWithHttpInfo() Returns Type Description ApiResponse < Version > ApiResponse of Version Remarks Retrieves the supported API versions, binary build versions, and genesis information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheck() Returns OK if healthy. Declaration void HealthCheck() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsync() Returns OK if healthy. Declaration Task HealthCheckAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckAsyncWithHttpInfo() Returns OK if healthy. Declaration Task<ApiResponse<object>> HealthCheckAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source HealthCheckWithHttpInfo() Returns OK if healthy. Declaration ApiResponse<object> HealthCheckWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source Metrics() Return metrics about algod functioning. Declaration void Metrics() Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsync() Return metrics about algod functioning. Declaration Task MetricsAsync() Returns Type Description System.Threading.Tasks.Task Task of void Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsAsyncWithHttpInfo() Return metrics about algod functioning. Declaration Task<ApiResponse<object>> MetricsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MetricsWithHttpInfo() Return metrics about algod functioning. Declaration ApiResponse<object> MetricsWithHttpInfo() Returns Type Description ApiResponse < System.Object > ApiResponse of Object(void) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSON() Gets the current swagger spec. Declaration string SwaggerJSON() Returns Type Description System.String string Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsync() Gets the current swagger spec. Declaration Task<string> SwaggerJSONAsync() Returns Type Description System.Threading.Tasks.Task < System.String > Task of string Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONAsyncWithHttpInfo() Gets the current swagger spec. Declaration Task<ApiResponse<string>> SwaggerJSONAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.String >> Task of ApiResponse (string) Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SwaggerJSONWithHttpInfo() Gets the current swagger spec. Declaration ApiResponse<string> SwaggerJSONWithHttpInfo() Returns Type Description ApiResponse < System.String > ApiResponse of string Remarks Returns the entire swagger spec in json. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.V2.Algod.IDefaultApi.html": {
    "href": "api/Algorand.V2.Algod.IDefaultApi.html",
    "title": "Interface IDefaultApi | Dotnet Algorand Documents",
    "keywords": "Interface IDefaultApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.V2.Algod Assembly : Algorand.dll Syntax public interface IDefaultApi : IApiAccessor Methods | Improve this Doc View Source AccountInformation(String, String) Get account information. Declaration Account AccountInformation(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description Account Account Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsync(String, String) Get account information. Declaration Task<Account> AccountInformationAsync(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < Account > Task of Account Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationAsyncWithHttpInfo(String, String) Get account information. Declaration Task<ApiResponse<Account>> AccountInformationAsyncWithHttpInfo(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < Account >> Task of ApiResponse (Account) Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AccountInformationWithHttpInfo(String, String) Get account information. Declaration ApiResponse<Account> AccountInformationWithHttpInfo(string address, string format = null) Parameters Type Name Description System.String address An account public key System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < Account > ApiResponse of Account Remarks Given a specific account public key, this call returns the accounts status, balance and spendable amounts Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetApplicationByID(Nullable<Int64>) Get application information. Declaration Application GetApplicationByID(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description Application Application Remarks Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetApplicationByIDAsync(Nullable<Int64>) Get application information. Declaration Task<Application> GetApplicationByIDAsync(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description System.Threading.Tasks.Task < Application > Task of Application Remarks Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetApplicationByIDAsyncWithHttpInfo(Nullable<Int64>) Get application information. Declaration Task<ApiResponse<Application>> GetApplicationByIDAsyncWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description System.Threading.Tasks.Task < ApiResponse < Application >> Task of ApiResponse (Application) Remarks Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetApplicationByIDWithHttpInfo(Nullable<Int64>) Get application information. Declaration ApiResponse<Application> GetApplicationByIDWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId An application identifier Returns Type Description ApiResponse < Application > ApiResponse of Application Remarks Given a application id, it returns application information including creator, approval and clear programs, global and local schemas, and global state. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByID(Nullable<Int64>) Get asset information. Declaration Asset GetAssetByID(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description Asset Asset Remarks Given a asset id, it returns asset information including creator, name, total supply and special addresses. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByIDAsync(Nullable<Int64>) Get asset information. Declaration Task<Asset> GetAssetByIDAsync(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description System.Threading.Tasks.Task < Asset > Task of Asset Remarks Given a asset id, it returns asset information including creator, name, total supply and special addresses. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByIDAsyncWithHttpInfo(Nullable<Int64>) Get asset information. Declaration Task<ApiResponse<Asset>> GetAssetByIDAsyncWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description System.Threading.Tasks.Task < ApiResponse < Asset >> Task of ApiResponse (Asset) Remarks Given a asset id, it returns asset information including creator, name, total supply and special addresses. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetAssetByIDWithHttpInfo(Nullable<Int64>) Get asset information. Declaration ApiResponse<Asset> GetAssetByIDWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId An asset identifier Returns Type Description ApiResponse < Asset > ApiResponse of Asset Remarks Given a asset id, it returns asset information including creator, name, total supply and special addresses. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlock(Nullable<Int64>, String) Get the block for the given round. Declaration BlockResponse GetBlock(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description BlockResponse BlockResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsync(Nullable<Int64>, String) Get the block for the given round. Declaration Task<BlockResponse> GetBlockAsync(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < BlockResponse > Task of BlockResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockAsyncWithHttpInfo(Nullable<Int64>, String) Get the block for the given round. Declaration Task<ApiResponse<BlockResponse>> GetBlockAsyncWithHttpInfo(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < BlockResponse >> Task of ApiResponse (BlockResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetBlockWithHttpInfo(Nullable<Int64>, String) Get the block for the given round. Declaration ApiResponse<BlockResponse> GetBlockWithHttpInfo(long? round, string format = null) Parameters Type Name Description System.Nullable < System.Int64 > round The round from which to fetch block information. System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < BlockResponse > ApiResponse of BlockResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactions(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Declaration PendingTransactionsResponse GetPendingTransactions(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description PendingTransactionsResponse PendingTransactionsResponse Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsync(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Declaration Task<PendingTransactionsResponse> GetPendingTransactionsAsync(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactionsResponse > Task of PendingTransactionsResponse Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsAsyncWithHttpInfo(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Declaration Task<ApiResponse<PendingTransactionsResponse>> GetPendingTransactionsAsyncWithHttpInfo(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactionsResponse >> Task of ApiResponse (PendingTransactionsResponse) Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddress(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration PendingTransactionsResponse GetPendingTransactionsByAddress(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description PendingTransactionsResponse PendingTransactionsResponse Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsync(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration Task<PendingTransactionsResponse> GetPendingTransactionsByAddressAsync(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactionsResponse > Task of PendingTransactionsResponse Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressAsyncWithHttpInfo(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration Task<ApiResponse<PendingTransactionsResponse>> GetPendingTransactionsByAddressAsyncWithHttpInfo(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactionsResponse >> Task of ApiResponse (PendingTransactionsResponse) Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsByAddressWithHttpInfo(String, Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool by address. Declaration ApiResponse<PendingTransactionsResponse> GetPendingTransactionsByAddressWithHttpInfo(string address, long? max = default(long? ), string format = null) Parameters Type Name Description System.String address An account public key System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < PendingTransactionsResponse > ApiResponse of PendingTransactionsResponse Remarks Get the list of pending transactions by address, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetPendingTransactionsWithHttpInfo(Nullable<Int64>, String) Get a list of unconfirmed transactions currently in the transaction pool. Declaration ApiResponse<PendingTransactionsResponse> GetPendingTransactionsWithHttpInfo(long? max = default(long? ), string format = null) Parameters Type Name Description System.Nullable < System.Int64 > max Truncated number of transactions to display. If max=0, returns all pending txns. (optional) System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < PendingTransactionsResponse > ApiResponse of PendingTransactionsResponse Remarks Get the list of pending transactions, sorted by priority, in decreasing order, truncated at the end at MAX. If MAX = 0, returns all pending transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatus() Gets the current node status. Declaration NodeStatusResponse GetStatus() Returns Type Description NodeStatusResponse NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsync() Gets the current node status. Declaration Task<NodeStatusResponse> GetStatusAsync() Returns Type Description System.Threading.Tasks.Task < NodeStatusResponse > Task of NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusAsyncWithHttpInfo() Gets the current node status. Declaration Task<ApiResponse<NodeStatusResponse>> GetStatusAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatusResponse >> Task of ApiResponse (NodeStatusResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetStatusWithHttpInfo() Gets the current node status. Declaration ApiResponse<NodeStatusResponse> GetStatusWithHttpInfo() Returns Type Description ApiResponse < NodeStatusResponse > ApiResponse of NodeStatusResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupply() Get the current supply reported by the ledger. Declaration SupplyResponse GetSupply() Returns Type Description SupplyResponse SupplyResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsync() Get the current supply reported by the ledger. Declaration Task<SupplyResponse> GetSupplyAsync() Returns Type Description System.Threading.Tasks.Task < SupplyResponse > Task of SupplyResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyAsyncWithHttpInfo() Get the current supply reported by the ledger. Declaration Task<ApiResponse<SupplyResponse>> GetSupplyAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < SupplyResponse >> Task of ApiResponse (SupplyResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source GetSupplyWithHttpInfo() Get the current supply reported by the ledger. Declaration ApiResponse<SupplyResponse> GetSupplyWithHttpInfo() Returns Type Description ApiResponse < SupplyResponse > ApiResponse of SupplyResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformation(String, String) Get a specific pending transaction. Declaration PendingTransactionResponse PendingTransactionInformation(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description PendingTransactionResponse PendingTransactionResponse Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsync(String, String) Get a specific pending transaction. Declaration Task<PendingTransactionResponse> PendingTransactionInformationAsync(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < PendingTransactionResponse > Task of PendingTransactionResponse Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationAsyncWithHttpInfo(String, String) Get a specific pending transaction. Declaration Task<ApiResponse<PendingTransactionResponse>> PendingTransactionInformationAsyncWithHttpInfo(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PendingTransactionResponse >> Task of ApiResponse (PendingTransactionResponse) Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source PendingTransactionInformationWithHttpInfo(String, String) Get a specific pending transaction. Declaration ApiResponse<PendingTransactionResponse> PendingTransactionInformationWithHttpInfo(string txid, string format = null) Parameters Type Name Description System.String txid A transaction id System.String format Configures whether the response object is JSON or MessagePack encoded. (optional) Returns Type Description ApiResponse < PendingTransactionResponse > ApiResponse of PendingTransactionResponse Remarks Given a transaction id of a recently submitted transaction, it returns information about it. There are several cases when this might succeed: - transaction committed (committed round > 0) - transaction still in the pool (committed round = 0, pool error = &quot;&quot;) - transaction removed from pool due to error (committed round = 0, pool error != &quot;&quot;) Or the transaction may have happened sufficiently long ago that the node no longer remembers it, and this will return an error. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransaction(Byte[]) Broadcasts a raw transaction to the network. Declaration PostTransactionsResponse RawTransaction(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description PostTransactionsResponse PostTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsync(Byte[]) Broadcasts a raw transaction to the network. Declaration Task<PostTransactionsResponse> RawTransactionAsync(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < PostTransactionsResponse > Task of PostTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionAsyncWithHttpInfo(Byte[]) Broadcasts a raw transaction to the network. Declaration Task<ApiResponse<PostTransactionsResponse>> RawTransactionAsyncWithHttpInfo(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description System.Threading.Tasks.Task < ApiResponse < PostTransactionsResponse >> Task of ApiResponse (PostTransactionsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RawTransactionWithHttpInfo(Byte[]) Broadcasts a raw transaction to the network. Declaration ApiResponse<PostTransactionsResponse> RawTransactionWithHttpInfo(byte[] rawtxn) Parameters Type Name Description System.Byte [] rawtxn The byte encoded signed transaction to broadcast to network Returns Type Description ApiResponse < PostTransactionsResponse > ApiResponse of PostTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealCompile(Byte[]) Compile TEAL source code to binary, produce its hash Declaration CompileResponse TealCompile(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description CompileResponse CompileResponse Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealCompileAsync(Byte[]) Compile TEAL source code to binary, produce its hash Declaration Task<CompileResponse> TealCompileAsync(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description System.Threading.Tasks.Task < CompileResponse > Task of CompileResponse Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealCompileAsyncWithHttpInfo(Byte[]) Compile TEAL source code to binary, produce its hash Declaration Task<ApiResponse<CompileResponse>> TealCompileAsyncWithHttpInfo(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description System.Threading.Tasks.Task < ApiResponse < CompileResponse >> Task of ApiResponse (CompileResponse) Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealCompileWithHttpInfo(Byte[]) Compile TEAL source code to binary, produce its hash Declaration ApiResponse<CompileResponse> TealCompileWithHttpInfo(byte[] source) Parameters Type Name Description System.Byte [] source TEAL source code to be compiled Returns Type Description ApiResponse < CompileResponse > ApiResponse of CompileResponse Remarks Given TEAL source code in plain text, return base64 encoded program bytes and base32 SHA512_256 hash of program bytes (Address style). Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrun(DryrunRequest) Provide debugging information for a transaction (or group). Declaration DryrunResponse TealDryrun(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description DryrunResponse DryrunResponse Remarks Executes TEAL program(s) in context and returns debugging information about the execution. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrunAsync(DryrunRequest) Provide debugging information for a transaction (or group). Declaration Task<DryrunResponse> TealDryrunAsync(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description System.Threading.Tasks.Task < DryrunResponse > Task of DryrunResponse Remarks Executes TEAL program(s) in context and returns debugging information about the execution. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrunAsyncWithHttpInfo(DryrunRequest) Provide debugging information for a transaction (or group). Declaration Task<ApiResponse<DryrunResponse>> TealDryrunAsyncWithHttpInfo(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < DryrunResponse >> Task of ApiResponse (DryrunResponse) Remarks Executes TEAL program(s) in context and returns debugging information about the execution. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TealDryrunWithHttpInfo(DryrunRequest) Provide debugging information for a transaction (or group). Declaration ApiResponse<DryrunResponse> TealDryrunWithHttpInfo(DryrunRequest request = null) Parameters Type Name Description DryrunRequest request Transaction (or group) and any accompanying state-simulation data. (optional) Returns Type Description ApiResponse < DryrunResponse > ApiResponse of DryrunResponse Remarks Executes TEAL program(s) in context and returns debugging information about the execution. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParams() Get parameters for constructing a new transaction Declaration TransactionParametersResponse TransactionParams() Returns Type Description TransactionParametersResponse TransactionParametersResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsync() Get parameters for constructing a new transaction Declaration Task<TransactionParametersResponse> TransactionParamsAsync() Returns Type Description System.Threading.Tasks.Task < TransactionParametersResponse > Task of TransactionParametersResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsAsyncWithHttpInfo() Get parameters for constructing a new transaction Declaration Task<ApiResponse<TransactionParametersResponse>> TransactionParamsAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionParametersResponse >> Task of ApiResponse (TransactionParametersResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source TransactionParamsWithHttpInfo() Get parameters for constructing a new transaction Declaration ApiResponse<TransactionParametersResponse> TransactionParamsWithHttpInfo() Returns Type Description ApiResponse < TransactionParametersResponse > ApiResponse of TransactionParametersResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlock(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration NodeStatusResponse WaitForBlock(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description NodeStatusResponse NodeStatusResponse Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsync(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration Task<NodeStatusResponse> WaitForBlockAsync(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < NodeStatusResponse > Task of NodeStatusResponse Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockAsyncWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration Task<ApiResponse<NodeStatusResponse>> WaitForBlockAsyncWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description System.Threading.Tasks.Task < ApiResponse < NodeStatusResponse >> Task of ApiResponse (NodeStatusResponse) Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source WaitForBlockWithHttpInfo(Nullable<Int64>) Gets the node status after waiting for the given round. Declaration ApiResponse<NodeStatusResponse> WaitForBlockWithHttpInfo(long? round) Parameters Type Name Description System.Nullable < System.Int64 > round The round to wait until returning status Returns Type Description ApiResponse < NodeStatusResponse > ApiResponse of NodeStatusResponse Remarks Waits for a block to appear after round {round} and returns the node's status at the time. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.V2.Algod.IPrivateApi.html": {
    "href": "api/Algorand.V2.Algod.IPrivateApi.html",
    "title": "Interface IPrivateApi | Dotnet Algorand Documents",
    "keywords": "Interface IPrivateApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.V2.Algod Assembly : Algorand.dll Syntax public interface IPrivateApi : IApiAccessor Methods | Improve this Doc View Source AbortCatchup(String) Aborts a catchpoint catchup. Declaration CatchpointAbortResponse AbortCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description CatchpointAbortResponse CatchpointAbortResponse Remarks Given a catchpoint, it aborts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AbortCatchupAsync(String) Aborts a catchpoint catchup. Declaration Task<CatchpointAbortResponse> AbortCatchupAsync(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < CatchpointAbortResponse > Task of CatchpointAbortResponse Remarks Given a catchpoint, it aborts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AbortCatchupAsyncWithHttpInfo(String) Aborts a catchpoint catchup. Declaration Task<ApiResponse<CatchpointAbortResponse>> AbortCatchupAsyncWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < ApiResponse < CatchpointAbortResponse >> Task of ApiResponse (CatchpointAbortResponse) Remarks Given a catchpoint, it aborts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AbortCatchupWithHttpInfo(String) Aborts a catchpoint catchup. Declaration ApiResponse<CatchpointAbortResponse> AbortCatchupWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description ApiResponse < CatchpointAbortResponse > ApiResponse of CatchpointAbortResponse Remarks Given a catchpoint, it aborts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RegisterParticipationKeys(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration PostTransactionsResponse RegisterParticipationKeys(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description PostTransactionsResponse PostTransactionsResponse Remarks Generate (or renew) and register participation keys on the node for a given account address. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RegisterParticipationKeysAsync(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration Task<PostTransactionsResponse> RegisterParticipationKeysAsync(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description System.Threading.Tasks.Task < PostTransactionsResponse > Task of PostTransactionsResponse Remarks Generate (or renew) and register participation keys on the node for a given account address. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RegisterParticipationKeysAsyncWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration Task<ApiResponse<PostTransactionsResponse>> RegisterParticipationKeysAsyncWithHttpInfo(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PostTransactionsResponse >> Task of ApiResponse (PostTransactionsResponse) Remarks Generate (or renew) and register participation keys on the node for a given account address. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RegisterParticipationKeysWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration ApiResponse<PostTransactionsResponse> RegisterParticipationKeysWithHttpInfo(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description ApiResponse < PostTransactionsResponse > ApiResponse of PostTransactionsResponse Remarks Generate (or renew) and register participation keys on the node for a given account address. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source ShutdownNode(Nullable<Int32>) Declaration object ShutdownNode(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description System.Object Object Remarks Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source ShutdownNodeAsync(Nullable<Int32>) Declaration Task<object> ShutdownNodeAsync(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description System.Threading.Tasks.Task < System.Object > Task of Object Remarks Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source ShutdownNodeAsyncWithHttpInfo(Nullable<Int32>) Declaration Task<ApiResponse<object>> ShutdownNodeAsyncWithHttpInfo(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse (Object) Remarks Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source ShutdownNodeWithHttpInfo(Nullable<Int32>) Declaration ApiResponse<object> ShutdownNodeWithHttpInfo(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description ApiResponse < System.Object > ApiResponse of Object Remarks Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchup(String) Starts a catchpoint catchup. Declaration CatchpointStartResponse StartCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description CatchpointStartResponse CatchpointStartResponse Remarks Given a catchpoint, it starts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchupAsync(String) Starts a catchpoint catchup. Declaration Task<CatchpointStartResponse> StartCatchupAsync(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < CatchpointStartResponse > Task of CatchpointStartResponse Remarks Given a catchpoint, it starts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchupAsyncWithHttpInfo(String) Starts a catchpoint catchup. Declaration Task<ApiResponse<CatchpointStartResponse>> StartCatchupAsyncWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < ApiResponse < CatchpointStartResponse >> Task of ApiResponse (CatchpointStartResponse) Remarks Given a catchpoint, it starts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchupWithHttpInfo(String) Starts a catchpoint catchup. Declaration ApiResponse<CatchpointStartResponse> StartCatchupWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description ApiResponse < CatchpointStartResponse > ApiResponse of CatchpointStartResponse Remarks Given a catchpoint, it starts catching up to this catchpoint Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.V2.Algod.PrivateApi.html": {
    "href": "api/Algorand.V2.Algod.PrivateApi.html",
    "title": "Class PrivateApi | Dotnet Algorand Documents",
    "keywords": "Class PrivateApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object PrivateApi Implements IPrivateApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2.Algod Assembly : Algorand.dll Syntax public class PrivateApi : IPrivateApi, IApiAccessor Constructors | Improve this Doc View Source PrivateApi(Configuration) Initializes a new instance of the PrivateApi class using Configuration object Declaration public PrivateApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source PrivateApi(String) Initializes a new instance of the PrivateApi class. Declaration public PrivateApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AbortCatchup(String) Aborts a catchpoint catchup. Given a catchpoint, it aborts catching up to this catchpoint Declaration public CatchpointAbortResponse AbortCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description CatchpointAbortResponse CatchpointAbortResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AbortCatchupAsync(String) Aborts a catchpoint catchup. Given a catchpoint, it aborts catching up to this catchpoint Declaration public Task<CatchpointAbortResponse> AbortCatchupAsync(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < CatchpointAbortResponse > Task of CatchpointAbortResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AbortCatchupAsyncWithHttpInfo(String) Aborts a catchpoint catchup. Given a catchpoint, it aborts catching up to this catchpoint Declaration public Task<ApiResponse<CatchpointAbortResponse>> AbortCatchupAsyncWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < ApiResponse < CatchpointAbortResponse >> Task of ApiResponse (CatchpointAbortResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AbortCatchupWithHttpInfo(String) Aborts a catchpoint catchup. Given a catchpoint, it aborts catching up to this catchpoint Declaration public ApiResponse<CatchpointAbortResponse> AbortCatchupWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description ApiResponse < CatchpointAbortResponse > ApiResponse of CatchpointAbortResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source RegisterParticipationKeys(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Generate (or renew) and register participation keys on the node for a given account address. Declaration public PostTransactionsResponse RegisterParticipationKeys(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description PostTransactionsResponse PostTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RegisterParticipationKeysAsync(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Generate (or renew) and register participation keys on the node for a given account address. Declaration public Task<PostTransactionsResponse> RegisterParticipationKeysAsync(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description System.Threading.Tasks.Task < PostTransactionsResponse > Task of PostTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RegisterParticipationKeysAsyncWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Generate (or renew) and register participation keys on the node for a given account address. Declaration public Task<ApiResponse<PostTransactionsResponse>> RegisterParticipationKeysAsyncWithHttpInfo(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < PostTransactionsResponse >> Task of ApiResponse (PostTransactionsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source RegisterParticipationKeysWithHttpInfo(String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Generate (or renew) and register participation keys on the node for a given account address. Declaration public ApiResponse<PostTransactionsResponse> RegisterParticipationKeysWithHttpInfo(string address, long? fee = default(long? ), long? keyDilution = default(long? ), long? roundLastValid = default(long? ), bool? noWait = default(bool? )) Parameters Type Name Description System.String address The account-id to update, or all to update all accounts. System.Nullable < System.Int64 > fee The fee to use when submitting key registration transactions. Defaults to the suggested fee. (optional, default to 1000) System.Nullable < System.Int64 > keyDilution value to use for two-level participation key. (optional) System.Nullable < System.Int64 > roundLastValid The last round for which the generated participation keys will be valid. (optional) System.Nullable < System.Boolean > noWait Don't wait for transaction to commit before returning response. (optional) Returns Type Description ApiResponse < PostTransactionsResponse > ApiResponse of PostTransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath | Improve this Doc View Source ShutdownNode(Nullable<Int32>) Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Declaration public object ShutdownNode(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description System.Object Object Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source ShutdownNodeAsync(Nullable<Int32>) Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Declaration public Task<object> ShutdownNodeAsync(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description System.Threading.Tasks.Task < System.Object > Task of Object Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source ShutdownNodeAsyncWithHttpInfo(Nullable<Int32>) Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Declaration public Task<ApiResponse<object>> ShutdownNodeAsyncWithHttpInfo(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description System.Threading.Tasks.Task < ApiResponse < System.Object >> Task of ApiResponse (Object) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source ShutdownNodeWithHttpInfo(Nullable<Int32>) Special management endpoint to shutdown the node. Optionally provide a timeout parameter to indicate that the node should begin shutting down after a number of seconds. Declaration public ApiResponse<object> ShutdownNodeWithHttpInfo(int? timeout = default(int? )) Parameters Type Name Description System.Nullable < System.Int32 > timeout (optional, default to 0) Returns Type Description ApiResponse < System.Object > ApiResponse of Object Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchup(String) Starts a catchpoint catchup. Given a catchpoint, it starts catching up to this catchpoint Declaration public CatchpointStartResponse StartCatchup(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description CatchpointStartResponse CatchpointStartResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchupAsync(String) Starts a catchpoint catchup. Given a catchpoint, it starts catching up to this catchpoint Declaration public Task<CatchpointStartResponse> StartCatchupAsync(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < CatchpointStartResponse > Task of CatchpointStartResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchupAsyncWithHttpInfo(String) Starts a catchpoint catchup. Given a catchpoint, it starts catching up to this catchpoint Declaration public Task<ApiResponse<CatchpointStartResponse>> StartCatchupAsyncWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description System.Threading.Tasks.Task < ApiResponse < CatchpointStartResponse >> Task of ApiResponse (CatchpointStartResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source StartCatchupWithHttpInfo(String) Starts a catchpoint catchup. Given a catchpoint, it starts catching up to this catchpoint Declaration public ApiResponse<CatchpointStartResponse> StartCatchupWithHttpInfo(string catchpoint) Parameters Type Name Description System.String catchpoint A catch point Returns Type Description ApiResponse < CatchpointStartResponse > ApiResponse of CatchpointStartResponse Exceptions Type Condition ApiException Thrown when fails to make API call Implements IPrivateApi IApiAccessor"
  },
  "api/Algorand.V2.AlgodApi.html": {
    "href": "api/Algorand.V2.AlgodApi.html",
    "title": "Class AlgodApi | Dotnet Algorand Documents",
    "keywords": "Class AlgodApi an AlgodClient for communicating with the REST API. Inheritance System.Object DefaultApi AlgodApi Implements IDefaultApi IApiAccessor Inherited Members DefaultApi.GetBasePath() DefaultApi.SetBasePath(String) DefaultApi.Configuration DefaultApi.ExceptionFactory DefaultApi.DefaultHeader() DefaultApi.AddDefaultHeader(String, String) DefaultApi.AccountInformation(String, String) DefaultApi.AccountInformationWithHttpInfo(String, String) DefaultApi.AccountInformationAsync(String, String) DefaultApi.AccountInformationAsyncWithHttpInfo(String, String) DefaultApi.GetApplicationByID(Nullable<Int64>) DefaultApi.GetApplicationByIDWithHttpInfo(Nullable<Int64>) DefaultApi.GetApplicationByIDAsync(Nullable<Int64>) DefaultApi.GetApplicationByIDAsyncWithHttpInfo(Nullable<Int64>) DefaultApi.GetAssetByID(Nullable<Int64>) DefaultApi.GetAssetByIDWithHttpInfo(Nullable<Int64>) DefaultApi.GetAssetByIDAsync(Nullable<Int64>) DefaultApi.GetAssetByIDAsyncWithHttpInfo(Nullable<Int64>) DefaultApi.GetBlock(Nullable<Int64>, String) DefaultApi.GetBlockWithHttpInfo(Nullable<Int64>, String) DefaultApi.GetBlockAsync(Nullable<Int64>, String) DefaultApi.GetBlockAsyncWithHttpInfo(Nullable<Int64>, String) DefaultApi.GetPendingTransactions(Nullable<Int64>, String) DefaultApi.GetPendingTransactionsWithHttpInfo(Nullable<Int64>, String) DefaultApi.GetPendingTransactionsAsync(Nullable<Int64>, String) DefaultApi.GetPendingTransactionsAsyncWithHttpInfo(Nullable<Int64>, String) DefaultApi.GetPendingTransactionsByAddress(String, Nullable<Int64>, String) DefaultApi.GetPendingTransactionsByAddressWithHttpInfo(String, Nullable<Int64>, String) DefaultApi.GetPendingTransactionsByAddressAsync(String, Nullable<Int64>, String) DefaultApi.GetPendingTransactionsByAddressAsyncWithHttpInfo(String, Nullable<Int64>, String) DefaultApi.GetStatus() DefaultApi.GetStatusWithHttpInfo() DefaultApi.GetStatusAsync() DefaultApi.GetStatusAsyncWithHttpInfo() DefaultApi.GetSupply() DefaultApi.GetSupplyWithHttpInfo() DefaultApi.GetSupplyAsync() DefaultApi.GetSupplyAsyncWithHttpInfo() DefaultApi.PendingTransactionInformation(String, String) DefaultApi.PendingTransactionInformationWithHttpInfo(String, String) DefaultApi.PendingTransactionInformationAsync(String, String) DefaultApi.PendingTransactionInformationAsyncWithHttpInfo(String, String) DefaultApi.RawTransaction(Byte[]) DefaultApi.RawTransactionWithHttpInfo(Byte[]) DefaultApi.RawTransactionAsync(Byte[]) DefaultApi.RawTransactionAsyncWithHttpInfo(Byte[]) DefaultApi.TealCompile(Byte[]) DefaultApi.TealCompileWithHttpInfo(Byte[]) DefaultApi.TealCompileAsync(Byte[]) DefaultApi.TealCompileAsyncWithHttpInfo(Byte[]) DefaultApi.TealDryrun(DryrunRequest) DefaultApi.TealDryrunWithHttpInfo(DryrunRequest) DefaultApi.TealDryrunAsync(DryrunRequest) DefaultApi.TealDryrunAsyncWithHttpInfo(DryrunRequest) DefaultApi.TransactionParams() DefaultApi.TransactionParamsWithHttpInfo() DefaultApi.TransactionParamsAsync() DefaultApi.TransactionParamsAsyncWithHttpInfo() DefaultApi.WaitForBlock(Nullable<Int64>) DefaultApi.WaitForBlockWithHttpInfo(Nullable<Int64>) DefaultApi.WaitForBlockAsync(Nullable<Int64>) DefaultApi.WaitForBlockAsyncWithHttpInfo(Nullable<Int64>) System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2 Assembly : Algorand.dll Syntax public class AlgodApi : DefaultApi, IDefaultApi, IApiAccessor Constructors | Improve this Doc View Source AlgodApi(String, String, Int32) Construct an AlgodClient for communicating with the REST API. Declaration public AlgodApi(string host, string token, int timeout = -1) Parameters Type Name Description System.String host using a URI format.If the scheme is not supplied the client will use HTTP. System.String token authentication token. System.Int32 timeout time out. Implements IDefaultApi IApiAccessor"
  },
  "api/Algorand.V2.html": {
    "href": "api/Algorand.V2.html",
    "title": "Namespace Algorand.V2 | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.V2 Classes AlgodApi an AlgodClient for communicating with the REST API. IndexerApi an IndexerClient for communicating with the REST API."
  },
  "api/Algorand.V2.Indexer.CommonApi.html": {
    "href": "api/Algorand.V2.Indexer.CommonApi.html",
    "title": "Class CommonApi | Dotnet Algorand Documents",
    "keywords": "Class CommonApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object CommonApi Implements ICommonApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2.Indexer Assembly : Algorand.dll Syntax public class CommonApi : ICommonApi, IApiAccessor Constructors | Improve this Doc View Source CommonApi() Initializes a new instance of the CommonApi class Declaration public CommonApi() | Improve this Doc View Source CommonApi(Configuration) Initializes a new instance of the CommonApi class using Configuration object Declaration public CommonApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source CommonApi(String) Initializes a new instance of the CommonApi class. Declaration public CommonApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source MakeHealthCheck() Returns 200 if healthy. Declaration public HealthCheck MakeHealthCheck() Returns Type Description HealthCheck HealthCheck Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MakeHealthCheckAsync() Returns 200 if healthy. Declaration public Task<HealthCheck> MakeHealthCheckAsync() Returns Type Description System.Threading.Tasks.Task < HealthCheck > Task of HealthCheck Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MakeHealthCheckAsyncWithHttpInfo() Returns 200 if healthy. Declaration public Task<ApiResponse<HealthCheck>> MakeHealthCheckAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < HealthCheck >> Task of ApiResponse (HealthCheck) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MakeHealthCheckWithHttpInfo() Returns 200 if healthy. Declaration public ApiResponse<HealthCheck> MakeHealthCheckWithHttpInfo() Returns Type Description ApiResponse < HealthCheck > ApiResponse of HealthCheck Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath Implements ICommonApi IApiAccessor"
  },
  "api/Algorand.V2.Indexer.html": {
    "href": "api/Algorand.V2.Indexer.html",
    "title": "Namespace Algorand.V2.Indexer | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.V2.Indexer Classes CommonApi Represents a collection of functions to interact with the API endpoints LookupApi Represents a collection of functions to interact with the API endpoints SearchApi Represents a collection of functions to interact with the API endpoints Interfaces ICommonApi Represents a collection of functions to interact with the API endpoints ILookupApi Represents a collection of functions to interact with the API endpoints ISearchApi Represents a collection of functions to interact with the API endpoints"
  },
  "api/Algorand.V2.Indexer.ICommonApi.html": {
    "href": "api/Algorand.V2.Indexer.ICommonApi.html",
    "title": "Interface ICommonApi | Dotnet Algorand Documents",
    "keywords": "Interface ICommonApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.V2.Indexer Assembly : Algorand.dll Syntax public interface ICommonApi : IApiAccessor Methods | Improve this Doc View Source MakeHealthCheck() Returns 200 if healthy. Declaration HealthCheck MakeHealthCheck() Returns Type Description HealthCheck HealthCheck Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MakeHealthCheckAsync() Returns 200 if healthy. Declaration Task<HealthCheck> MakeHealthCheckAsync() Returns Type Description System.Threading.Tasks.Task < HealthCheck > Task of HealthCheck Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MakeHealthCheckAsyncWithHttpInfo() Returns 200 if healthy. Declaration Task<ApiResponse<HealthCheck>> MakeHealthCheckAsyncWithHttpInfo() Returns Type Description System.Threading.Tasks.Task < ApiResponse < HealthCheck >> Task of ApiResponse (HealthCheck) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MakeHealthCheckWithHttpInfo() Returns 200 if healthy. Declaration ApiResponse<HealthCheck> MakeHealthCheckWithHttpInfo() Returns Type Description ApiResponse < HealthCheck > ApiResponse of HealthCheck Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.V2.Indexer.ILookupApi.html": {
    "href": "api/Algorand.V2.Indexer.ILookupApi.html",
    "title": "Interface ILookupApi | Dotnet Algorand Documents",
    "keywords": "Interface ILookupApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.V2.Indexer Assembly : Algorand.dll Syntax public interface ILookupApi : IApiAccessor Methods | Improve this Doc View Source LookupAccountByID(String, Nullable<Int64>) Declaration AccountResponse LookupAccountByID(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description AccountResponse AccountResponse Remarks Lookup account information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountByIDAsync(String, Nullable<Int64>) Declaration Task<AccountResponse> LookupAccountByIDAsync(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description System.Threading.Tasks.Task < AccountResponse > Task of AccountResponse Remarks Lookup account information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountByIDAsyncWithHttpInfo(String, Nullable<Int64>) Declaration Task<ApiResponse<AccountResponse>> LookupAccountByIDAsyncWithHttpInfo(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AccountResponse >> Task of ApiResponse (AccountResponse) Remarks Lookup account information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountByIDWithHttpInfo(String, Nullable<Int64>) Declaration ApiResponse<AccountResponse> LookupAccountByIDWithHttpInfo(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description ApiResponse < AccountResponse > ApiResponse of AccountResponse Remarks Lookup account information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactions(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration TransactionsResponse LookupAccountTransactions(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description TransactionsResponse TransactionsResponse Remarks Lookup account transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactionsAsync(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration Task<TransactionsResponse> LookupAccountTransactionsAsync(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < TransactionsResponse > Task of TransactionsResponse Remarks Lookup account transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactionsAsyncWithHttpInfo(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration Task<ApiResponse<TransactionsResponse>> LookupAccountTransactionsAsyncWithHttpInfo(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionsResponse >> Task of ApiResponse (TransactionsResponse) Remarks Lookup account transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactionsWithHttpInfo(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Declaration ApiResponse<TransactionsResponse> LookupAccountTransactionsWithHttpInfo(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description ApiResponse < TransactionsResponse > ApiResponse of TransactionsResponse Remarks Lookup account transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByID(Nullable<Int64>) Declaration ApplicationResponse LookupApplicationByID(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description ApplicationResponse ApplicationResponse Remarks Lookup application. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByIDAsync(Nullable<Int64>) Declaration Task<ApplicationResponse> LookupApplicationByIDAsync(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description System.Threading.Tasks.Task < ApplicationResponse > Task of ApplicationResponse Remarks Lookup application. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByIDAsyncWithHttpInfo(Nullable<Int64>) Declaration Task<ApiResponse<ApplicationResponse>> LookupApplicationByIDAsyncWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description System.Threading.Tasks.Task < ApiResponse < ApplicationResponse >> Task of ApiResponse (ApplicationResponse) Remarks Lookup application. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByIDWithHttpInfo(Nullable<Int64>) Declaration ApiResponse<ApplicationResponse> LookupApplicationByIDWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description ApiResponse < ApplicationResponse > ApiResponse of ApplicationResponse Remarks Lookup application. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalances(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Declaration AssetBalancesResponse LookupAssetBalances(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description AssetBalancesResponse AssetBalancesResponse Remarks Lookup the list of accounts who hold this asset Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalancesAsync(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Declaration Task<AssetBalancesResponse> LookupAssetBalancesAsync(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description System.Threading.Tasks.Task < AssetBalancesResponse > Task of AssetBalancesResponse Remarks Lookup the list of accounts who hold this asset Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalancesAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Declaration Task<ApiResponse<AssetBalancesResponse>> LookupAssetBalancesAsyncWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetBalancesResponse >> Task of ApiResponse (AssetBalancesResponse) Remarks Lookup the list of accounts who hold this asset Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalancesWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Declaration ApiResponse<AssetBalancesResponse> LookupAssetBalancesWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description ApiResponse < AssetBalancesResponse > ApiResponse of AssetBalancesResponse Remarks Lookup the list of accounts who hold this asset Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByID(Nullable<Int64>) Declaration AssetResponse LookupAssetByID(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description AssetResponse AssetResponse Remarks Lookup asset information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByIDAsync(Nullable<Int64>) Declaration Task<AssetResponse> LookupAssetByIDAsync(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description System.Threading.Tasks.Task < AssetResponse > Task of AssetResponse Remarks Lookup asset information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByIDAsyncWithHttpInfo(Nullable<Int64>) Declaration Task<ApiResponse<AssetResponse>> LookupAssetByIDAsyncWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetResponse >> Task of ApiResponse (AssetResponse) Remarks Lookup asset information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByIDWithHttpInfo(Nullable<Int64>) Declaration ApiResponse<AssetResponse> LookupAssetByIDWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description ApiResponse < AssetResponse > ApiResponse of AssetResponse Remarks Lookup asset information. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactions(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Declaration TransactionsResponse LookupAssetTransactions(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description TransactionsResponse TransactionsResponse Remarks Lookup transactions for an asset. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactionsAsync(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Declaration Task<TransactionsResponse> LookupAssetTransactionsAsync(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < TransactionsResponse > Task of TransactionsResponse Remarks Lookup transactions for an asset. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactionsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Declaration Task<ApiResponse<TransactionsResponse>> LookupAssetTransactionsAsyncWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionsResponse >> Task of ApiResponse (TransactionsResponse) Remarks Lookup transactions for an asset. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactionsWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Declaration ApiResponse<TransactionsResponse> LookupAssetTransactionsWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description ApiResponse < TransactionsResponse > ApiResponse of TransactionsResponse Remarks Lookup transactions for an asset. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlock(Nullable<Int64>) Declaration Block LookupBlock(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description Block Block Remarks Lookup block. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlockAsync(Nullable<Int64>) Declaration Task<Block> LookupBlockAsync(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description System.Threading.Tasks.Task < Block > Task of Block Remarks Lookup block. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlockAsyncWithHttpInfo(Nullable<Int64>) Declaration Task<ApiResponse<Block>> LookupBlockAsyncWithHttpInfo(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description System.Threading.Tasks.Task < ApiResponse < Block >> Task of ApiResponse (Block) Remarks Lookup block. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlockWithHttpInfo(Nullable<Int64>) Declaration ApiResponse<Block> LookupBlockWithHttpInfo(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description ApiResponse < Block > ApiResponse of Block Remarks Lookup block. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactions(String) Declaration TransactionResponse LookupTransactions(string txid) Parameters Type Name Description System.String txid Returns Type Description TransactionResponse TransactionResponse Remarks Lookup a single transaction. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactionsAsync(String) Declaration Task<TransactionResponse> LookupTransactionsAsync(string txid) Parameters Type Name Description System.String txid Returns Type Description System.Threading.Tasks.Task < TransactionResponse > Task of TransactionResponse Remarks Lookup a single transaction. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactionsAsyncWithHttpInfo(String) Declaration Task<ApiResponse<TransactionResponse>> LookupTransactionsAsyncWithHttpInfo(string txid) Parameters Type Name Description System.String txid Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionResponse >> Task of ApiResponse (TransactionResponse) Remarks Lookup a single transaction. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactionsWithHttpInfo(String) Declaration ApiResponse<TransactionResponse> LookupTransactionsWithHttpInfo(string txid) Parameters Type Name Description System.String txid Returns Type Description ApiResponse < TransactionResponse > ApiResponse of TransactionResponse Remarks Lookup a single transaction. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.V2.Indexer.ISearchApi.html": {
    "href": "api/Algorand.V2.Indexer.ISearchApi.html",
    "title": "Interface ISearchApi | Dotnet Algorand Documents",
    "keywords": "Interface ISearchApi Represents a collection of functions to interact with the API endpoints Inherited Members IApiAccessor.Configuration IApiAccessor.GetBasePath() IApiAccessor.ExceptionFactory Namespace : Algorand.V2.Indexer Assembly : Algorand.dll Syntax public interface ISearchApi : IApiAccessor Methods | Improve this Doc View Source SearchForAccounts(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Declaration AccountsResponse SearchForAccounts(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description AccountsResponse AccountsResponse Remarks Search for accounts. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAccountsAsync(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Declaration Task<AccountsResponse> SearchForAccountsAsync(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < AccountsResponse > Task of AccountsResponse Remarks Search for accounts. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAccountsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Declaration Task<ApiResponse<AccountsResponse>> SearchForAccountsAsyncWithHttpInfo(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AccountsResponse >> Task of ApiResponse (AccountsResponse) Remarks Search for accounts. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAccountsWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Declaration ApiResponse<AccountsResponse> SearchForAccountsWithHttpInfo(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description ApiResponse < AccountsResponse > ApiResponse of AccountsResponse Remarks Search for accounts. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplications(Nullable<Int64>, Nullable<Int64>, String) Declaration ApplicationsResponse SearchForApplications(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description ApplicationsResponse ApplicationsResponse Remarks Search for applications Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplicationsAsync(Nullable<Int64>, Nullable<Int64>, String) Declaration Task<ApplicationsResponse> SearchForApplicationsAsync(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description System.Threading.Tasks.Task < ApplicationsResponse > Task of ApplicationsResponse Remarks Search for applications Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplicationsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String) Declaration Task<ApiResponse<ApplicationsResponse>> SearchForApplicationsAsyncWithHttpInfo(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < ApplicationsResponse >> Task of ApiResponse (ApplicationsResponse) Remarks Search for applications Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplicationsWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String) Declaration ApiResponse<ApplicationsResponse> SearchForApplicationsWithHttpInfo(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description ApiResponse < ApplicationsResponse > ApiResponse of ApplicationsResponse Remarks Search for applications Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssets(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Declaration AssetsResponse SearchForAssets(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description AssetsResponse AssetsResponse Remarks Search for assets. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssetsAsync(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Declaration Task<AssetsResponse> SearchForAssetsAsync(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description System.Threading.Tasks.Task < AssetsResponse > Task of AssetsResponse Remarks Search for assets. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssetsAsyncWithHttpInfo(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Declaration Task<ApiResponse<AssetsResponse>> SearchForAssetsAsyncWithHttpInfo(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetsResponse >> Task of ApiResponse (AssetsResponse) Remarks Search for assets. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssetsWithHttpInfo(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Declaration ApiResponse<AssetsResponse> SearchForAssetsWithHttpInfo(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description ApiResponse < AssetsResponse > ApiResponse of AssetsResponse Remarks Search for assets. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactions(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Declaration TransactionsResponse SearchForTransactions(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description TransactionsResponse TransactionsResponse Remarks Search for transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactionsAsync(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Declaration Task<TransactionsResponse> SearchForTransactionsAsync(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < TransactionsResponse > Task of TransactionsResponse Remarks Search for transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactionsAsyncWithHttpInfo(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Declaration Task<ApiResponse<TransactionsResponse>> SearchForTransactionsAsyncWithHttpInfo(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionsResponse >> Task of ApiResponse (TransactionsResponse) Remarks Search for transactions. Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactionsWithHttpInfo(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Declaration ApiResponse<TransactionsResponse> SearchForTransactionsWithHttpInfo(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description ApiResponse < TransactionsResponse > ApiResponse of TransactionsResponse Remarks Search for transactions. Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.V2.Indexer.LookupApi.html": {
    "href": "api/Algorand.V2.Indexer.LookupApi.html",
    "title": "Class LookupApi | Dotnet Algorand Documents",
    "keywords": "Class LookupApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object LookupApi Implements ILookupApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2.Indexer Assembly : Algorand.dll Syntax public class LookupApi : ILookupApi, IApiAccessor Constructors | Improve this Doc View Source LookupApi() Initializes a new instance of the LookupApi class Declaration public LookupApi() | Improve this Doc View Source LookupApi(Configuration) Initializes a new instance of the LookupApi class using Configuration object Declaration public LookupApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source LookupApi(String) Initializes a new instance of the LookupApi class. Declaration public LookupApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source LookupAccountByID(String, Nullable<Int64>) Lookup account information. Declaration public AccountResponse LookupAccountByID(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description AccountResponse AccountResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountByIDAsync(String, Nullable<Int64>) Lookup account information. Declaration public Task<AccountResponse> LookupAccountByIDAsync(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description System.Threading.Tasks.Task < AccountResponse > Task of AccountResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountByIDAsyncWithHttpInfo(String, Nullable<Int64>) Lookup account information. Declaration public Task<ApiResponse<AccountResponse>> LookupAccountByIDAsyncWithHttpInfo(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AccountResponse >> Task of ApiResponse (AccountResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountByIDWithHttpInfo(String, Nullable<Int64>) Lookup account information. Declaration public ApiResponse<AccountResponse> LookupAccountByIDWithHttpInfo(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description ApiResponse < AccountResponse > ApiResponse of AccountResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactions(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Lookup account transactions. Declaration public TransactionsResponse LookupAccountTransactions(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description TransactionsResponse TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactionsAsync(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Lookup account transactions. Declaration public Task<TransactionsResponse> LookupAccountTransactionsAsync(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < TransactionsResponse > Task of TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactionsAsyncWithHttpInfo(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Lookup account transactions. Declaration public Task<ApiResponse<TransactionsResponse>> LookupAccountTransactionsAsyncWithHttpInfo(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionsResponse >> Task of ApiResponse (TransactionsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactionsWithHttpInfo(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Lookup account transactions. Declaration public ApiResponse<TransactionsResponse> LookupAccountTransactionsWithHttpInfo(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description ApiResponse < TransactionsResponse > ApiResponse of TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByID(Nullable<Int64>) Lookup application. Declaration public ApplicationResponse LookupApplicationByID(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description ApplicationResponse ApplicationResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByIDAsync(Nullable<Int64>) Lookup application. Declaration public Task<ApplicationResponse> LookupApplicationByIDAsync(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description System.Threading.Tasks.Task < ApplicationResponse > Task of ApplicationResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByIDAsyncWithHttpInfo(Nullable<Int64>) Lookup application. Declaration public Task<ApiResponse<ApplicationResponse>> LookupApplicationByIDAsyncWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description System.Threading.Tasks.Task < ApiResponse < ApplicationResponse >> Task of ApiResponse (ApplicationResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByIDWithHttpInfo(Nullable<Int64>) Lookup application. Declaration public ApiResponse<ApplicationResponse> LookupApplicationByIDWithHttpInfo(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description ApiResponse < ApplicationResponse > ApiResponse of ApplicationResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalances(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Lookup the list of accounts who hold this asset Declaration public AssetBalancesResponse LookupAssetBalances(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description AssetBalancesResponse AssetBalancesResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalancesAsync(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Lookup the list of accounts who hold this asset Declaration public Task<AssetBalancesResponse> LookupAssetBalancesAsync(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description System.Threading.Tasks.Task < AssetBalancesResponse > Task of AssetBalancesResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalancesAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Lookup the list of accounts who hold this asset Declaration public Task<ApiResponse<AssetBalancesResponse>> LookupAssetBalancesAsyncWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetBalancesResponse >> Task of ApiResponse (AssetBalancesResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalancesWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Lookup the list of accounts who hold this asset Declaration public ApiResponse<AssetBalancesResponse> LookupAssetBalancesWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description ApiResponse < AssetBalancesResponse > ApiResponse of AssetBalancesResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByID(Nullable<Int64>) Lookup asset information. Declaration public AssetResponse LookupAssetByID(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description AssetResponse AssetResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByIDAsync(Nullable<Int64>) Lookup asset information. Declaration public Task<AssetResponse> LookupAssetByIDAsync(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description System.Threading.Tasks.Task < AssetResponse > Task of AssetResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByIDAsyncWithHttpInfo(Nullable<Int64>) Lookup asset information. Declaration public Task<ApiResponse<AssetResponse>> LookupAssetByIDAsyncWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetResponse >> Task of ApiResponse (AssetResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByIDWithHttpInfo(Nullable<Int64>) Lookup asset information. Declaration public ApiResponse<AssetResponse> LookupAssetByIDWithHttpInfo(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description ApiResponse < AssetResponse > ApiResponse of AssetResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactions(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Lookup transactions for an asset. Declaration public TransactionsResponse LookupAssetTransactions(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description TransactionsResponse TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactionsAsync(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Lookup transactions for an asset. Declaration public Task<TransactionsResponse> LookupAssetTransactionsAsync(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < TransactionsResponse > Task of TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactionsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Lookup transactions for an asset. Declaration public Task<ApiResponse<TransactionsResponse>> LookupAssetTransactionsAsyncWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionsResponse >> Task of ApiResponse (TransactionsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactionsWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Lookup transactions for an asset. Declaration public ApiResponse<TransactionsResponse> LookupAssetTransactionsWithHttpInfo(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description ApiResponse < TransactionsResponse > ApiResponse of TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlock(Nullable<Int64>) Lookup block. Declaration public Block LookupBlock(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description Block Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlockAsync(Nullable<Int64>) Lookup block. Declaration public Task<Block> LookupBlockAsync(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description System.Threading.Tasks.Task < Block > Task of Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlockAsyncWithHttpInfo(Nullable<Int64>) Lookup block. Declaration public Task<ApiResponse<Block>> LookupBlockAsyncWithHttpInfo(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description System.Threading.Tasks.Task < ApiResponse < Block >> Task of ApiResponse (Block) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlockWithHttpInfo(Nullable<Int64>) Lookup block. Declaration public ApiResponse<Block> LookupBlockWithHttpInfo(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description ApiResponse < Block > ApiResponse of Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactions(String) Lookup a single transaction. Declaration public TransactionResponse LookupTransactions(string txid) Parameters Type Name Description System.String txid Returns Type Description TransactionResponse TransactionResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactionsAsync(String) Lookup a single transaction. Declaration public Task<TransactionResponse> LookupTransactionsAsync(string txid) Parameters Type Name Description System.String txid Returns Type Description System.Threading.Tasks.Task < TransactionResponse > Task of TransactionResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactionsAsyncWithHttpInfo(String) Lookup a single transaction. Declaration public Task<ApiResponse<TransactionResponse>> LookupTransactionsAsyncWithHttpInfo(string txid) Parameters Type Name Description System.String txid Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionResponse >> Task of ApiResponse (TransactionResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactionsWithHttpInfo(String) Lookup a single transaction. Declaration public ApiResponse<TransactionResponse> LookupTransactionsWithHttpInfo(string txid) Parameters Type Name Description System.String txid Returns Type Description ApiResponse < TransactionResponse > ApiResponse of TransactionResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath Implements ILookupApi IApiAccessor"
  },
  "api/Algorand.V2.Indexer.SearchApi.html": {
    "href": "api/Algorand.V2.Indexer.SearchApi.html",
    "title": "Class SearchApi | Dotnet Algorand Documents",
    "keywords": "Class SearchApi Represents a collection of functions to interact with the API endpoints Inheritance System.Object SearchApi Implements ISearchApi IApiAccessor Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2.Indexer Assembly : Algorand.dll Syntax public class SearchApi : ISearchApi, IApiAccessor Constructors | Improve this Doc View Source SearchApi() Initializes a new instance of the SearchApi class Declaration public SearchApi() | Improve this Doc View Source SearchApi(Configuration) Initializes a new instance of the SearchApi class using Configuration object Declaration public SearchApi(Configuration configuration = null) Parameters Type Name Description Configuration configuration An instance of Configuration | Improve this Doc View Source SearchApi(String) Initializes a new instance of the SearchApi class. Declaration public SearchApi(string basePath) Parameters Type Name Description System.String basePath Properties | Improve this Doc View Source Configuration Gets or sets the configuration object Declaration public Configuration Configuration { get; set; } Property Value Type Description Configuration An instance of the Configuration | Improve this Doc View Source ExceptionFactory Provides a factory method hook for the creation of exceptions. Declaration public ExceptionFactory ExceptionFactory { get; set; } Property Value Type Description ExceptionFactory Methods | Improve this Doc View Source AddDefaultHeader(String, String) Add default header. Declaration [Obsolete(\"AddDefaultHeader is deprecated, please use Configuration.AddDefaultHeader instead.\")] public void AddDefaultHeader(string key, string value) Parameters Type Name Description System.String key Header field name. System.String value Header field value. | Improve this Doc View Source DefaultHeader() Gets the default header. Declaration [Obsolete(\"DefaultHeader is deprecated, please use Configuration.DefaultHeader instead.\")] public IDictionary<string, string> DefaultHeader() Returns Type Description System.Collections.Generic.IDictionary < System.String , System.String > Dictionary of HTTP header | Improve this Doc View Source GetBasePath() Gets the base path of the API client. Declaration public string GetBasePath() Returns Type Description System.String The base path | Improve this Doc View Source SearchForAccounts(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Search for accounts. Declaration public AccountsResponse SearchForAccounts(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description AccountsResponse AccountsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAccountsAsync(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Search for accounts. Declaration public Task<AccountsResponse> SearchForAccountsAsync(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < AccountsResponse > Task of AccountsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAccountsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Search for accounts. Declaration public Task<ApiResponse<AccountsResponse>> SearchForAccountsAsyncWithHttpInfo(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AccountsResponse >> Task of ApiResponse (AccountsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAccountsWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Search for accounts. Declaration public ApiResponse<AccountsResponse> SearchForAccountsWithHttpInfo(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description ApiResponse < AccountsResponse > ApiResponse of AccountsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplications(Nullable<Int64>, Nullable<Int64>, String) Search for applications Declaration public ApplicationsResponse SearchForApplications(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description ApplicationsResponse ApplicationsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplicationsAsync(Nullable<Int64>, Nullable<Int64>, String) Search for applications Declaration public Task<ApplicationsResponse> SearchForApplicationsAsync(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description System.Threading.Tasks.Task < ApplicationsResponse > Task of ApplicationsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplicationsAsyncWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String) Search for applications Declaration public Task<ApiResponse<ApplicationsResponse>> SearchForApplicationsAsyncWithHttpInfo(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < ApplicationsResponse >> Task of ApiResponse (ApplicationsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplicationsWithHttpInfo(Nullable<Int64>, Nullable<Int64>, String) Search for applications Declaration public ApiResponse<ApplicationsResponse> SearchForApplicationsWithHttpInfo(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description ApiResponse < ApplicationsResponse > ApiResponse of ApplicationsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssets(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Search for assets. Declaration public AssetsResponse SearchForAssets(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description AssetsResponse AssetsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssetsAsync(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Search for assets. Declaration public Task<AssetsResponse> SearchForAssetsAsync(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description System.Threading.Tasks.Task < AssetsResponse > Task of AssetsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssetsAsyncWithHttpInfo(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Search for assets. Declaration public Task<ApiResponse<AssetsResponse>> SearchForAssetsAsyncWithHttpInfo(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < AssetsResponse >> Task of ApiResponse (AssetsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssetsWithHttpInfo(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Search for assets. Declaration public ApiResponse<AssetsResponse> SearchForAssetsWithHttpInfo(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description ApiResponse < AssetsResponse > ApiResponse of AssetsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactions(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Search for transactions. Declaration public TransactionsResponse SearchForTransactions(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description TransactionsResponse TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactionsAsync(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Search for transactions. Declaration public Task<TransactionsResponse> SearchForTransactionsAsync(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < TransactionsResponse > Task of TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactionsAsyncWithHttpInfo(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Search for transactions. Declaration public Task<ApiResponse<TransactionsResponse>> SearchForTransactionsAsyncWithHttpInfo(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description System.Threading.Tasks.Task < ApiResponse < TransactionsResponse >> Task of ApiResponse (TransactionsResponse) Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactionsWithHttpInfo(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Search for transactions. Declaration public ApiResponse<TransactionsResponse> SearchForTransactionsWithHttpInfo(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description ApiResponse < TransactionsResponse > ApiResponse of TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SetBasePath(String) Sets the base path of the API client. Declaration [Obsolete(\"SetBasePath is deprecated, please do 'Configuration.ApiClient = new ApiClient(\\\"http://new-path\\\")' instead.\")] public void SetBasePath(string basePath) Parameters Type Name Description System.String basePath Implements ISearchApi IApiAccessor"
  },
  "api/Algorand.V2.IndexerApi.html": {
    "href": "api/Algorand.V2.IndexerApi.html",
    "title": "Class IndexerApi | Dotnet Algorand Documents",
    "keywords": "Class IndexerApi an IndexerClient for communicating with the REST API. Inheritance System.Object IndexerApi Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand.V2 Assembly : Algorand.dll Syntax public class IndexerApi Constructors | Improve this Doc View Source IndexerApi(String, String, Int32) Construct an AlgodClient for communicating with the REST API. Declaration public IndexerApi(string host, string token, int timeout = -1) Parameters Type Name Description System.String host using a URI format.If the scheme is not supplied the client will use HTTP. System.String token authentication token. System.Int32 timeout time out. Methods | Improve this Doc View Source LookupAccountByID(String, Nullable<Int64>) Lookup account information. Declaration public AccountResponse LookupAccountByID(string accountId, long? round = default(long? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > round Include results for the specified round. (optional) Returns Type Description AccountResponse AccountResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAccountTransactions(String, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, Nullable<Boolean>) Lookup account transactions. Declaration public TransactionsResponse LookupAccountTransactions(string accountId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.String accountId account string System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description TransactionsResponse TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupApplicationByID(Nullable<Int64>) Lookup application. Declaration public ApplicationResponse LookupApplicationByID(long? applicationId) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Returns Type Description ApplicationResponse ApplicationResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetBalances(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Lookup the list of accounts who hold this asset Declaration public AssetBalancesResponse LookupAssetBalances(long? assetId, long? limit = default(long? ), string next = null, long? round = default(long? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) Returns Type Description AssetBalancesResponse AssetBalancesResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetByID(Nullable<Int64>) Lookup asset information. Declaration public AssetResponse LookupAssetByID(long? assetId) Parameters Type Name Description System.Nullable < System.Int64 > assetId Returns Type Description AssetResponse AssetResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupAssetTransactions(Nullable<Int64>, Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>) Lookup transactions for an asset. Declaration public TransactionsResponse LookupAssetTransactions(long? assetId, long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) Returns Type Description TransactionsResponse TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupBlock(Nullable<Int64>) Lookup block. Declaration public Block LookupBlock(long? roundNumber) Parameters Type Name Description System.Nullable < System.Int64 > roundNumber Round number Returns Type Description Block Block Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source LookupTransactions(String) Lookup a single transaction. Declaration public TransactionResponse LookupTransactions(string txid) Parameters Type Name Description System.String txid Returns Type Description TransactionResponse TransactionResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source MakeHealthCheck() Returns 200 if healthy. Declaration public HealthCheck MakeHealthCheck() Returns Type Description HealthCheck HealthCheck Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAccounts(Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Search for accounts. Declaration public AccountsResponse SearchForAccounts(long? assetId = default(long? ), long? limit = default(long? ), string next = null, long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string authAddr = null, long? round = default(long? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String authAddr Include accounts configured to use this spending key. (optional) System.Nullable < System.Int64 > round Include results for the specified round. For performance reasons, this parameter may be disabled on some configurations. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description AccountsResponse AccountsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForApplications(Nullable<Int64>, Nullable<Int64>, String) Search for applications Declaration public ApplicationsResponse SearchForApplications(long? applicationId = default(long? ), long? limit = default(long? ), string next = null) Parameters Type Name Description System.Nullable < System.Int64 > applicationId Application ID (optional) System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) Returns Type Description ApplicationsResponse ApplicationsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForAssets(Nullable<Int64>, String, String, String, String, Nullable<Int64>) Search for assets. Declaration public AssetsResponse SearchForAssets(long? limit = default(long? ), string next = null, string creator = null, string name = null, string unit = null, long? assetId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String creator Filter just assets with the given creator address. (optional) System.String name Filter just assets with the given name. (optional) System.String unit Filter just assets with the given unit. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) Returns Type Description AssetsResponse AssetsResponse Exceptions Type Condition ApiException Thrown when fails to make API call | Improve this Doc View Source SearchForTransactions(Nullable<Int64>, String, String, String, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<DateTime>, Nullable<DateTime>, Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>) Search for transactions. Declaration public TransactionsResponse SearchForTransactions(long? limit = default(long? ), string next = null, string notePrefix = null, string txType = null, string sigType = null, string txid = null, long? round = default(long? ), long? minRound = default(long? ), long? maxRound = default(long? ), long? assetId = default(long? ), DateTime? beforeTime = default(DateTime? ), DateTime? afterTime = default(DateTime? ), long? currencyGreaterThan = default(long? ), long? currencyLessThan = default(long? ), string address = null, string addressRole = null, bool? excludeCloseTo = default(bool? ), bool? rekeyTo = default(bool? ), long? applicationId = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > limit Maximum number of results to return. (optional) System.String next The next page of results. Use the next token provided by the previous results. (optional) System.String notePrefix Specifies a prefix which must be contained in the note field. (optional) System.String txType (optional) System.String sigType SigType filters just results using the specified type of signature: * sig - Standard * msig - MultiSig * lsig - LogicSig (optional) System.String txid Lookup the specific transaction by ID. (optional) System.Nullable < System.Int64 > round Include results for the specified round. (optional) System.Nullable < System.Int64 > minRound Include results at or after the specified min-round. (optional) System.Nullable < System.Int64 > maxRound Include results at or before the specified max-round. (optional) System.Nullable < System.Int64 > assetId Asset ID (optional) System.Nullable < System.DateTime > beforeTime Include results before the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.DateTime > afterTime Include results after the given time. Must be an RFC 3339 formatted string. (optional) System.Nullable < System.Int64 > currencyGreaterThan Results should have an amount greater than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.Nullable < System.Int64 > currencyLessThan Results should have an amount less than this value. MicroAlgos are the default currency unless an asset-id is provided, in which case the asset will be used. (optional) System.String address Only include transactions with this address in one of the transaction fields. (optional) System.String addressRole Combine with the address parameter to define what type of address to search for. (optional) System.Nullable < System.Boolean > excludeCloseTo Combine with address and address-role parameters to define what type of address to search for. The close to fields are normally treated as a receiver, if you would like to exclude them set this parameter to true. (optional) System.Nullable < System.Boolean > rekeyTo Include results which include the rekey-to field. (optional) System.Nullable < System.Int64 > applicationId Application ID (optional) Returns Type Description TransactionsResponse TransactionsResponse Exceptions Type Condition ApiException Thrown when fails to make API call"
  },
  "api/Algorand.V2.Model.Account.html": {
    "href": "api/Algorand.V2.Model.Account.html",
    "title": "Class Account | Dotnet Algorand Documents",
    "keywords": "Class Account Account information at a given round. Definition: data/basics/userBalance.go : AccountData Inheritance System.Object Account Implements System.IEquatable < Account > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class Account : IEquatable<Account>, IValidatableObject Constructors | Improve this Doc View Source Account() Initializes a new instance of the Account class. Declaration [JsonConstructor] protected Account() | Improve this Doc View Source Account(String, Nullable<Int64>, Nullable<Int64>, List<ApplicationLocalState>, ApplicationStateSchema, List<AssetHolding>, List<Application>, List<Asset>, AccountParticipation, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, String, Nullable<Account.SigTypeEnum>, String) Initializes a new instance of the Account class. Declaration public Account(string address = null, long? amount = default(long? ), long? amountWithoutPendingRewards = default(long? ), List<ApplicationLocalState> appsLocalState = null, ApplicationStateSchema appsTotalSchema = null, List<AssetHolding> assets = null, List<Application> createdApps = null, List<Asset> createdAssets = null, AccountParticipation participation = null, long? pendingRewards = default(long? ), long? rewardBase = default(long? ), long? rewards = default(long? ), long? round = default(long? ), string status = null, Account.SigTypeEnum? sigType = default(Account.SigTypeEnum? ), string authAddr = null) Parameters Type Name Description System.String address the account public key (required). System.Nullable < System.Int64 > amount \\[algo\\] total number of MicroAlgos in the account (required). System.Nullable < System.Int64 > amountWithoutPendingRewards specifies the amount of MicroAlgos in the account, without the pending rewards. (required). System.Collections.Generic.List < ApplicationLocalState > appsLocalState \\[appl\\] applications local data stored in this account. Note the raw object uses map[int] -> AppLocalState for this type.. ApplicationStateSchema appsTotalSchema \\[tsch\\] stores the sum of all of the local schemas and global schemas in this account. Note: the raw account uses StateSchema for this type.. System.Collections.Generic.List < AssetHolding > assets \\[asset\\] assets held by this account. Note the raw object uses map[int] -> AssetHolding for this type.. System.Collections.Generic.List < Application > createdApps \\[appp\\] parameters of applications created by this account including app global data. Note: the raw account uses map[int] -> AppParams for this type.. System.Collections.Generic.List < Asset > createdAssets \\[apar\\] parameters of assets created by this account. Note: the raw account uses map[int] -> Asset for this type.. AccountParticipation participation participation. System.Nullable < System.Int64 > pendingRewards amount of MicroAlgos of pending rewards in this account. (required). System.Nullable < System.Int64 > rewardBase \\[ebase\\] used as part of the rewards computation. Only applicable to accounts which are participating.. System.Nullable < System.Int64 > rewards \\[ern\\] total rewards of MicroAlgos the account has received, including pending rewards. (required). System.Nullable < System.Int64 > round The round for which this information is relevant. (required). System.String status \\[onl\\] delegation status of the account's MicroAlgos * Offline - indicates that the associated account is delegated. * Online - indicates that the associated account used as part of the delegation pool. * NotParticipating - indicates that the associated account is neither a delegator nor a delegate. (required). System.Nullable < Account.SigTypeEnum > sigType Indicates what type of signature is used by this account, must be one of: * sig * msig * lsig. System.String authAddr \\[spend\\] the address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field.. Properties | Improve this Doc View Source Address the account public key Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public string Address { get; set; } Property Value Type Description System.String the account public key | Improve this Doc View Source Amount \\[algo\\] total number of MicroAlgos in the account Declaration [DataMember(Name = \"amount\", EmitDefaultValue = false)] public long? Amount { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[algo\\] total number of MicroAlgos in the account | Improve this Doc View Source AmountWithoutPendingRewards specifies the amount of MicroAlgos in the account, without the pending rewards. Declaration [DataMember(Name = \"amount-without-pending-rewards\", EmitDefaultValue = false)] public long? AmountWithoutPendingRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > specifies the amount of MicroAlgos in the account, without the pending rewards. | Improve this Doc View Source AppsLocalState \\[appl\\] applications local data stored in this account. Note the raw object uses map[int] -> AppLocalState for this type. Declaration [DataMember(Name = \"apps-local-state\", EmitDefaultValue = false)] public List<ApplicationLocalState> AppsLocalState { get; set; } Property Value Type Description System.Collections.Generic.List < ApplicationLocalState > \\[appl\\] applications local data stored in this account. Note the raw object uses map[int] -> AppLocalState for this type. | Improve this Doc View Source AppsTotalSchema \\[tsch\\] stores the sum of all of the local schemas and global schemas in this account. Note: the raw account uses StateSchema for this type. Declaration [DataMember(Name = \"apps-total-schema\", EmitDefaultValue = false)] public ApplicationStateSchema AppsTotalSchema { get; set; } Property Value Type Description ApplicationStateSchema \\[tsch\\] stores the sum of all of the local schemas and global schemas in this account. Note: the raw account uses StateSchema for this type. | Improve this Doc View Source Assets \\[asset\\] assets held by this account. Note the raw object uses map[int] -> AssetHolding for this type. Declaration [DataMember(Name = \"assets\", EmitDefaultValue = false)] public List<AssetHolding> Assets { get; set; } Property Value Type Description System.Collections.Generic.List < AssetHolding > \\[asset\\] assets held by this account. Note the raw object uses map[int] -> AssetHolding for this type. | Improve this Doc View Source AuthAddr \\[spend\\] the address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field. Declaration [DataMember(Name = \"auth-addr\", EmitDefaultValue = false)] public string AuthAddr { get; set; } Property Value Type Description System.String \\[spend\\] the address against which signing should be checked. If empty, the address of the current account is used. This field can be updated in any transaction by setting the RekeyTo field. | Improve this Doc View Source CreatedApps \\[appp\\] parameters of applications created by this account including app global data. Note: the raw account uses map[int] -> AppParams for this type. Declaration [DataMember(Name = \"created-apps\", EmitDefaultValue = false)] public List<Application> CreatedApps { get; set; } Property Value Type Description System.Collections.Generic.List < Application > \\[appp\\] parameters of applications created by this account including app global data. Note: the raw account uses map[int] -> AppParams for this type. | Improve this Doc View Source CreatedAssets \\[apar\\] parameters of assets created by this account. Note: the raw account uses map[int] -> Asset for this type. Declaration [DataMember(Name = \"created-assets\", EmitDefaultValue = false)] public List<Asset> CreatedAssets { get; set; } Property Value Type Description System.Collections.Generic.List < Asset > \\[apar\\] parameters of assets created by this account. Note: the raw account uses map[int] -> Asset for this type. | Improve this Doc View Source Participation Gets or Sets Participation Declaration [DataMember(Name = \"participation\", EmitDefaultValue = false)] public AccountParticipation Participation { get; set; } Property Value Type Description AccountParticipation | Improve this Doc View Source PendingRewards amount of MicroAlgos of pending rewards in this account. Declaration [DataMember(Name = \"pending-rewards\", EmitDefaultValue = false)] public long? PendingRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > amount of MicroAlgos of pending rewards in this account. | Improve this Doc View Source RewardBase \\[ebase\\] used as part of the rewards computation. Only applicable to accounts which are participating. Declaration [DataMember(Name = \"reward-base\", EmitDefaultValue = false)] public long? RewardBase { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[ebase\\] used as part of the rewards computation. Only applicable to accounts which are participating. | Improve this Doc View Source Rewards \\[ern\\] total rewards of MicroAlgos the account has received, including pending rewards. Declaration [DataMember(Name = \"rewards\", EmitDefaultValue = false)] public long? Rewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[ern\\] total rewards of MicroAlgos the account has received, including pending rewards. | Improve this Doc View Source Round The round for which this information is relevant. Declaration [DataMember(Name = \"round\", EmitDefaultValue = false)] public long? Round { get; set; } Property Value Type Description System.Nullable < System.Int64 > The round for which this information is relevant. | Improve this Doc View Source SigType Indicates what type of signature is used by this account, must be one of: * sig * msig * lsig Declaration [DataMember(Name = \"sig-type\", EmitDefaultValue = false)] public Account.SigTypeEnum? SigType { get; set; } Property Value Type Description System.Nullable < Account.SigTypeEnum > Indicates what type of signature is used by this account, must be one of: * sig * msig * lsig | Improve this Doc View Source Status \\[onl\\] delegation status of the account's MicroAlgos * Offline - indicates that the associated account is delegated. * Online - indicates that the associated account used as part of the delegation pool. * NotParticipating - indicates that the associated account is neither a delegator nor a delegate. Declaration [DataMember(Name = \"status\", EmitDefaultValue = false)] public string Status { get; set; } Property Value Type Description System.String \\[onl\\] delegation status of the account's MicroAlgos * Offline - indicates that the associated account is delegated. * Online - indicates that the associated account used as part of the delegation pool. * NotParticipating - indicates that the associated account is neither a delegator nor a delegate. Methods | Improve this Doc View Source Equals(Account) Returns true if Account instances are equal Declaration public bool Equals(Account input) Parameters Type Name Description Account input Instance of Account to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.Account.SigTypeEnum.html": {
    "href": "api/Algorand.V2.Model.Account.SigTypeEnum.html",
    "title": "Enum Account.SigTypeEnum | Dotnet Algorand Documents",
    "keywords": "Enum Account.SigTypeEnum Indicates what type of signature is used by this account, must be one of: * sig * msig * lsig Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum SigTypeEnum Fields Name Description Lsig Enum Lsig for value: lsig Msig Enum Msig for value: msig Sig Enum Sig for value: sig"
  },
  "api/Algorand.V2.Model.AccountParticipation.html": {
    "href": "api/Algorand.V2.Model.AccountParticipation.html",
    "title": "Class AccountParticipation | Dotnet Algorand Documents",
    "keywords": "Class AccountParticipation AccountParticipation describes the parameters used by this account in consensus protocol. Inheritance System.Object AccountParticipation Implements System.IEquatable < AccountParticipation > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AccountParticipation : IEquatable<AccountParticipation>, IValidatableObject Constructors | Improve this Doc View Source AccountParticipation() Initializes a new instance of the AccountParticipation class. Declaration [JsonConstructor] protected AccountParticipation() | Improve this Doc View Source AccountParticipation(Byte[], Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Byte[]) Initializes a new instance of the AccountParticipation class. Declaration public AccountParticipation(byte[] selectionParticipationKey = null, long? voteFirstValid = default(long? ), long? voteKeyDilution = default(long? ), long? voteLastValid = default(long? ), byte[] voteParticipationKey = null) Parameters Type Name Description System.Byte [] selectionParticipationKey \\[sel\\] Selection public key (if any) currently registered for this round. (required). System.Nullable < System.Int64 > voteFirstValid \\[voteFst\\] First round for which this participation is valid. (required). System.Nullable < System.Int64 > voteKeyDilution \\[voteKD\\] Number of subkeys in each batch of participation keys. (required). System.Nullable < System.Int64 > voteLastValid \\[voteLst\\] Last round for which this participation is valid. (required). System.Byte [] voteParticipationKey \\[vote\\] root participation public key (if any) currently registered for this round. (required). Properties | Improve this Doc View Source SelectionParticipationKey \\[sel\\] Selection public key (if any) currently registered for this round. Declaration [DataMember(Name = \"selection-participation-key\", EmitDefaultValue = false)] public byte[] SelectionParticipationKey { get; set; } Property Value Type Description System.Byte [] \\[sel\\] Selection public key (if any) currently registered for this round. | Improve this Doc View Source VoteFirstValid \\[voteFst\\] First round for which this participation is valid. Declaration [DataMember(Name = \"vote-first-valid\", EmitDefaultValue = false)] public long? VoteFirstValid { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[voteFst\\] First round for which this participation is valid. | Improve this Doc View Source VoteKeyDilution \\[voteKD\\] Number of subkeys in each batch of participation keys. Declaration [DataMember(Name = \"vote-key-dilution\", EmitDefaultValue = false)] public long? VoteKeyDilution { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[voteKD\\] Number of subkeys in each batch of participation keys. | Improve this Doc View Source VoteLastValid \\[voteLst\\] Last round for which this participation is valid. Declaration [DataMember(Name = \"vote-last-valid\", EmitDefaultValue = false)] public long? VoteLastValid { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[voteLst\\] Last round for which this participation is valid. | Improve this Doc View Source VoteParticipationKey \\[vote\\] root participation public key (if any) currently registered for this round. Declaration [DataMember(Name = \"vote-participation-key\", EmitDefaultValue = false)] public byte[] VoteParticipationKey { get; set; } Property Value Type Description System.Byte [] \\[vote\\] root participation public key (if any) currently registered for this round. Methods | Improve this Doc View Source Equals(AccountParticipation) Returns true if AccountParticipation instances are equal Declaration public bool Equals(AccountParticipation input) Parameters Type Name Description AccountParticipation input Instance of AccountParticipation to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AccountResponse.html": {
    "href": "api/Algorand.V2.Model.AccountResponse.html",
    "title": "Class AccountResponse | Dotnet Algorand Documents",
    "keywords": "Class AccountResponse AccountResponse Inheritance System.Object AccountResponse Implements System.IEquatable < AccountResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AccountResponse : IEquatable<AccountResponse>, IValidatableObject Constructors | Improve this Doc View Source AccountResponse(Account, Nullable<Int64>) Initializes a new instance of the AccountResponse class. Declaration public AccountResponse(Account account = null, long? currentRound = default(long? )) Parameters Type Name Description Account account account (required). System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). Properties | Improve this Doc View Source Account Gets or Sets Account Declaration [DataMember(Name = \"account\", EmitDefaultValue = false)] public Account Account { get; set; } Property Value Type Description Account | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. Methods | Improve this Doc View Source Equals(AccountResponse) Returns true if AccountResponse instances are equal Declaration public bool Equals(AccountResponse input) Parameters Type Name Description AccountResponse input Instance of AccountResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AccountsResponse.html": {
    "href": "api/Algorand.V2.Model.AccountsResponse.html",
    "title": "Class AccountsResponse | Dotnet Algorand Documents",
    "keywords": "Class AccountsResponse AccountsResponse Inheritance System.Object AccountsResponse Implements System.IEquatable < AccountsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AccountsResponse : IEquatable<AccountsResponse>, IValidatableObject Constructors | Improve this Doc View Source AccountsResponse(List<Account>, Nullable<Int64>, String) Initializes a new instance of the AccountsResponse class. Declaration public AccountsResponse(List<Account> accounts = null, long? currentRound = default(long? ), string nextToken = null) Parameters Type Name Description System.Collections.Generic.List < Account > accounts accounts (required). System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). System.String nextToken Used for pagination, when making another request provide this token with the next parameter.. Properties | Improve this Doc View Source Accounts Gets or Sets Accounts Declaration [DataMember(Name = \"accounts\", EmitDefaultValue = false)] public List<Account> Accounts { get; set; } Property Value Type Description System.Collections.Generic.List < Account > | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. | Improve this Doc View Source NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration [DataMember(Name = \"next-token\", EmitDefaultValue = false)] public string NextToken { get; set; } Property Value Type Description System.String Used for pagination, when making another request provide this token with the next parameter. Methods | Improve this Doc View Source Equals(AccountsResponse) Returns true if AccountsResponse instances are equal Declaration public bool Equals(AccountsResponse input) Parameters Type Name Description AccountsResponse input Instance of AccountsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AccountStateDelta.html": {
    "href": "api/Algorand.V2.Model.AccountStateDelta.html",
    "title": "Class AccountStateDelta | Dotnet Algorand Documents",
    "keywords": "Class AccountStateDelta Application state delta. Inheritance System.Object AccountStateDelta Implements System.IEquatable < AccountStateDelta > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AccountStateDelta : IEquatable<AccountStateDelta>, IValidatableObject Constructors | Improve this Doc View Source AccountStateDelta() Initializes a new instance of the AccountStateDelta class. Declaration [JsonConstructor] protected AccountStateDelta() | Improve this Doc View Source AccountStateDelta(String, StateDelta) Initializes a new instance of the AccountStateDelta class. Declaration public AccountStateDelta(string address = null, StateDelta delta = null) Parameters Type Name Description System.String address address (required). StateDelta delta delta (required). Properties | Improve this Doc View Source Address Gets or Sets Address Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source Delta Gets or Sets Delta Declaration [DataMember(Name = \"delta\", EmitDefaultValue = false)] public StateDelta Delta { get; set; } Property Value Type Description StateDelta Methods | Improve this Doc View Source Equals(AccountStateDelta) Returns true if AccountStateDelta instances are equal Declaration public bool Equals(AccountStateDelta input) Parameters Type Name Description AccountStateDelta input Instance of AccountStateDelta to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.Application.html": {
    "href": "api/Algorand.V2.Model.Application.html",
    "title": "Class Application | Dotnet Algorand Documents",
    "keywords": "Class Application Application index and its parameters Inheritance System.Object Application Implements System.IEquatable < Application > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class Application : IEquatable<Application>, IValidatableObject Constructors | Improve this Doc View Source Application() Initializes a new instance of the Application class. Declaration [JsonConstructor] protected Application() | Improve this Doc View Source Application(Nullable<Int64>, ApplicationParams) Initializes a new instance of the Application class. Declaration public Application(long? id = default(long? ), ApplicationParams _params = null) Parameters Type Name Description System.Nullable < System.Int64 > id \\[appidx\\] application index. (required). ApplicationParams _params \\[appparams\\] application parameters. (required). Properties | Improve this Doc View Source Id \\[appidx\\] application index. Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public long? Id { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[appidx\\] application index. | Improve this Doc View Source Params \\[appparams\\] application parameters. Declaration [DataMember(Name = \"params\", EmitDefaultValue = false)] public ApplicationParams Params { get; set; } Property Value Type Description ApplicationParams \\[appparams\\] application parameters. Methods | Improve this Doc View Source Equals(Application) Returns true if Application instances are equal Declaration public bool Equals(Application input) Parameters Type Name Description Application input Instance of Application to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.ApplicationLocalState.html": {
    "href": "api/Algorand.V2.Model.ApplicationLocalState.html",
    "title": "Class ApplicationLocalState | Dotnet Algorand Documents",
    "keywords": "Class ApplicationLocalState Stores local state associated with an application. Inheritance System.Object ApplicationLocalState Implements System.IEquatable < ApplicationLocalState > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class ApplicationLocalState : IEquatable<ApplicationLocalState>, IValidatableObject Constructors | Improve this Doc View Source ApplicationLocalState() Initializes a new instance of the ApplicationLocalState class. Declaration [JsonConstructor] protected ApplicationLocalState() | Improve this Doc View Source ApplicationLocalState(Nullable<Int64>, ApplicationStateSchema, TealKeyValueStore) Initializes a new instance of the ApplicationLocalState class. Declaration public ApplicationLocalState(long? id = default(long? ), ApplicationStateSchema schema = null, TealKeyValueStore keyValue = null) Parameters Type Name Description System.Nullable < System.Int64 > id The application which this local state is for. (required). ApplicationStateSchema schema \\[hsch\\] schema. (required). TealKeyValueStore keyValue \\[tkv\\] storage.. Properties | Improve this Doc View Source Id The application which this local state is for. Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public long? Id { get; set; } Property Value Type Description System.Nullable < System.Int64 > The application which this local state is for. | Improve this Doc View Source KeyValue \\[tkv\\] storage. Declaration [DataMember(Name = \"key-value\", EmitDefaultValue = false)] public TealKeyValueStore KeyValue { get; set; } Property Value Type Description TealKeyValueStore \\[tkv\\] storage. | Improve this Doc View Source Schema \\[hsch\\] schema. Declaration [DataMember(Name = \"schema\", EmitDefaultValue = false)] public ApplicationStateSchema Schema { get; set; } Property Value Type Description ApplicationStateSchema \\[hsch\\] schema. Methods | Improve this Doc View Source Equals(ApplicationLocalState) Returns true if ApplicationLocalState instances are equal Declaration public bool Equals(ApplicationLocalState input) Parameters Type Name Description ApplicationLocalState input Instance of ApplicationLocalState to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.ApplicationParams.html": {
    "href": "api/Algorand.V2.Model.ApplicationParams.html",
    "title": "Class ApplicationParams | Dotnet Algorand Documents",
    "keywords": "Class ApplicationParams Stores the global information associated with an application. Inheritance System.Object ApplicationParams Implements System.IEquatable < ApplicationParams > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class ApplicationParams : IEquatable<ApplicationParams>, IValidatableObject Constructors | Improve this Doc View Source ApplicationParams() Initializes a new instance of the ApplicationParams class. Declaration [JsonConstructor] protected ApplicationParams() | Improve this Doc View Source ApplicationParams(String, Byte[], Byte[], ApplicationStateSchema, ApplicationStateSchema, TealKeyValueStore) Initializes a new instance of the ApplicationParams class. Declaration public ApplicationParams(string creator = null, byte[] approvalProgram = null, byte[] clearStateProgram = null, ApplicationStateSchema localStateSchema = null, ApplicationStateSchema globalStateSchema = null, TealKeyValueStore globalState = null) Parameters Type Name Description System.String creator The address that created this application. This is the address where the parameters and global state for this application can be found. (required). System.Byte [] approvalProgram \\[approv\\] approval program. (required). System.Byte [] clearStateProgram \\[clearp\\] approval program. (required). ApplicationStateSchema localStateSchema [\\lsch\\] local schema. ApplicationStateSchema globalStateSchema [\\lsch\\] global schema. TealKeyValueStore globalState [\\gs\\] global schema. Properties | Improve this Doc View Source ApprovalProgram \\[approv\\] approval program. Declaration [DataMember(Name = \"approval-program\", EmitDefaultValue = false)] public byte[] ApprovalProgram { get; set; } Property Value Type Description System.Byte [] \\[approv\\] approval program. | Improve this Doc View Source ClearStateProgram \\[clearp\\] approval program. Declaration [DataMember(Name = \"clear-state-program\", EmitDefaultValue = false)] public byte[] ClearStateProgram { get; set; } Property Value Type Description System.Byte [] \\[clearp\\] approval program. | Improve this Doc View Source Creator The address that created this application. This is the address where the parameters and global state for this application can be found. Declaration [DataMember(Name = \"creator\", EmitDefaultValue = false)] public string Creator { get; set; } Property Value Type Description System.String The address that created this application. This is the address where the parameters and global state for this application can be found. | Improve this Doc View Source GlobalState [\\gs\\] global schema Declaration [DataMember(Name = \"global-state\", EmitDefaultValue = false)] public TealKeyValueStore GlobalState { get; set; } Property Value Type Description TealKeyValueStore [\\gs\\] global schema | Improve this Doc View Source GlobalStateSchema [\\lsch\\] global schema Declaration [DataMember(Name = \"global-state-schema\", EmitDefaultValue = false)] public ApplicationStateSchema GlobalStateSchema { get; set; } Property Value Type Description ApplicationStateSchema [\\lsch\\] global schema | Improve this Doc View Source LocalStateSchema [\\lsch\\] local schema Declaration [DataMember(Name = \"local-state-schema\", EmitDefaultValue = false)] public ApplicationStateSchema LocalStateSchema { get; set; } Property Value Type Description ApplicationStateSchema [\\lsch\\] local schema Methods | Improve this Doc View Source Equals(ApplicationParams) Returns true if ApplicationParams instances are equal Declaration public bool Equals(ApplicationParams input) Parameters Type Name Description ApplicationParams input Instance of ApplicationParams to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.ApplicationResponse.html": {
    "href": "api/Algorand.V2.Model.ApplicationResponse.html",
    "title": "Class ApplicationResponse | Dotnet Algorand Documents",
    "keywords": "Class ApplicationResponse ApplicationResponse Inheritance System.Object ApplicationResponse Implements System.IEquatable < ApplicationResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class ApplicationResponse : IEquatable<ApplicationResponse>, IValidatableObject Constructors | Improve this Doc View Source ApplicationResponse(Application, Nullable<Int64>) Initializes a new instance of the ApplicationResponse class. Declaration public ApplicationResponse(Application application = null, long? currentRound = default(long? )) Parameters Type Name Description Application application application. System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). Properties | Improve this Doc View Source Application Gets or Sets Application Declaration [DataMember(Name = \"application\", EmitDefaultValue = false)] public Application Application { get; set; } Property Value Type Description Application | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. Methods | Improve this Doc View Source Equals(ApplicationResponse) Returns true if ApplicationResponse instances are equal Declaration public bool Equals(ApplicationResponse input) Parameters Type Name Description ApplicationResponse input Instance of ApplicationResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.ApplicationsResponse.html": {
    "href": "api/Algorand.V2.Model.ApplicationsResponse.html",
    "title": "Class ApplicationsResponse | Dotnet Algorand Documents",
    "keywords": "Class ApplicationsResponse ApplicationsResponse Inheritance System.Object ApplicationsResponse Implements System.IEquatable < ApplicationsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class ApplicationsResponse : IEquatable<ApplicationsResponse>, IValidatableObject Constructors | Improve this Doc View Source ApplicationsResponse(List<Application>, Nullable<Int64>, String) Initializes a new instance of the ApplicationsResponse class. Declaration public ApplicationsResponse(List<Application> applications = null, long? currentRound = default(long? ), string nextToken = null) Parameters Type Name Description System.Collections.Generic.List < Application > applications applications (required). System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). System.String nextToken Used for pagination, when making another request provide this token with the next parameter.. Properties | Improve this Doc View Source Applications Gets or Sets Applications Declaration [DataMember(Name = \"applications\", EmitDefaultValue = false)] public List<Application> Applications { get; set; } Property Value Type Description System.Collections.Generic.List < Application > | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. | Improve this Doc View Source NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration [DataMember(Name = \"next-token\", EmitDefaultValue = false)] public string NextToken { get; set; } Property Value Type Description System.String Used for pagination, when making another request provide this token with the next parameter. Methods | Improve this Doc View Source Equals(ApplicationsResponse) Returns true if ApplicationsResponse instances are equal Declaration public bool Equals(ApplicationsResponse input) Parameters Type Name Description ApplicationsResponse input Instance of ApplicationsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.ApplicationStateSchema.html": {
    "href": "api/Algorand.V2.Model.ApplicationStateSchema.html",
    "title": "Class ApplicationStateSchema | Dotnet Algorand Documents",
    "keywords": "Class ApplicationStateSchema Specifies maximums on the number of each type that may be stored. Inheritance System.Object ApplicationStateSchema Implements System.IEquatable < ApplicationStateSchema > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class ApplicationStateSchema : IEquatable<ApplicationStateSchema>, IValidatableObject Constructors | Improve this Doc View Source ApplicationStateSchema() Initializes a new instance of the ApplicationStateSchema class. Declaration [JsonConstructor] protected ApplicationStateSchema() | Improve this Doc View Source ApplicationStateSchema(Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the ApplicationStateSchema class. Declaration public ApplicationStateSchema(long? numUint = default(long? ), long? numByteSlice = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > numUint \\[nui\\] num of uints. (required). System.Nullable < System.Int64 > numByteSlice \\[nbs\\] num of byte slices. (required). Properties | Improve this Doc View Source NumByteSlice \\[nbs\\] num of byte slices. Declaration [DataMember(Name = \"num-byte-slice\", EmitDefaultValue = false)] public long? NumByteSlice { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[nbs\\] num of byte slices. | Improve this Doc View Source NumUint \\[nui\\] num of uints. Declaration [DataMember(Name = \"num-uint\", EmitDefaultValue = false)] public long? NumUint { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[nui\\] num of uints. Methods | Improve this Doc View Source Equals(ApplicationStateSchema) Returns true if ApplicationStateSchema instances are equal Declaration public bool Equals(ApplicationStateSchema input) Parameters Type Name Description ApplicationStateSchema input Instance of ApplicationStateSchema to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.Asset.html": {
    "href": "api/Algorand.V2.Model.Asset.html",
    "title": "Class Asset | Dotnet Algorand Documents",
    "keywords": "Class Asset Specifies both the unique identifier and the parameters for an asset Inheritance System.Object Asset Implements System.IEquatable < Asset > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class Asset : IEquatable<Asset>, IValidatableObject Constructors | Improve this Doc View Source Asset() Initializes a new instance of the Asset class. Declaration [JsonConstructor] protected Asset() | Improve this Doc View Source Asset(Nullable<Int64>, AssetParams) Initializes a new instance of the Asset class. Declaration public Asset(long? index = default(long? ), AssetParams _params = null) Parameters Type Name Description System.Nullable < System.Int64 > index unique asset identifier (required). AssetParams _params _params (required). Properties | Improve this Doc View Source Index unique asset identifier Declaration [DataMember(Name = \"index\", EmitDefaultValue = false)] public long? Index { get; set; } Property Value Type Description System.Nullable < System.Int64 > unique asset identifier | Improve this Doc View Source Params Gets or Sets Params Declaration [DataMember(Name = \"params\", EmitDefaultValue = false)] public AssetParams Params { get; set; } Property Value Type Description AssetParams Methods | Improve this Doc View Source Equals(Asset) Returns true if Asset instances are equal Declaration public bool Equals(Asset input) Parameters Type Name Description Asset input Instance of Asset to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AssetBalancesResponse.html": {
    "href": "api/Algorand.V2.Model.AssetBalancesResponse.html",
    "title": "Class AssetBalancesResponse | Dotnet Algorand Documents",
    "keywords": "Class AssetBalancesResponse AssetBalancesResponse Inheritance System.Object AssetBalancesResponse Implements System.IEquatable < AssetBalancesResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetBalancesResponse : IEquatable<AssetBalancesResponse>, IValidatableObject Constructors | Improve this Doc View Source AssetBalancesResponse(List<MiniAssetHolding>, Nullable<Int64>, String) Initializes a new instance of the AssetBalancesResponse class. Declaration public AssetBalancesResponse(List<MiniAssetHolding> balances = null, long? currentRound = default(long? ), string nextToken = null) Parameters Type Name Description System.Collections.Generic.List < MiniAssetHolding > balances balances (required). System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). System.String nextToken Used for pagination, when making another request provide this token with the next parameter.. Properties | Improve this Doc View Source Balances Gets or Sets Balances Declaration [DataMember(Name = \"balances\", EmitDefaultValue = false)] public List<MiniAssetHolding> Balances { get; set; } Property Value Type Description System.Collections.Generic.List < MiniAssetHolding > | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. | Improve this Doc View Source NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration [DataMember(Name = \"next-token\", EmitDefaultValue = false)] public string NextToken { get; set; } Property Value Type Description System.String Used for pagination, when making another request provide this token with the next parameter. Methods | Improve this Doc View Source Equals(AssetBalancesResponse) Returns true if AssetBalancesResponse instances are equal Declaration public bool Equals(AssetBalancesResponse input) Parameters Type Name Description AssetBalancesResponse input Instance of AssetBalancesResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AssetHolding.html": {
    "href": "api/Algorand.V2.Model.AssetHolding.html",
    "title": "Class AssetHolding | Dotnet Algorand Documents",
    "keywords": "Class AssetHolding Describes an asset held by an account. Definition: data/basics/userBalance.go : AssetHolding Inheritance System.Object AssetHolding Implements System.IEquatable < AssetHolding > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetHolding : IEquatable<AssetHolding>, IValidatableObject Constructors | Improve this Doc View Source AssetHolding() Initializes a new instance of the AssetHolding class. Declaration [JsonConstructor] protected AssetHolding() | Improve this Doc View Source AssetHolding(Nullable<UInt64>, Nullable<Int64>, String, Nullable<Boolean>) Initializes a new instance of the AssetHolding class. Declaration public AssetHolding(ulong? amount = default(ulong? ), long? assetId = default(long? ), string creator = null, bool? isFrozen = default(bool? )) Parameters Type Name Description System.Nullable < System.UInt64 > amount \\[a\\] number of units held. (required). System.Nullable < System.Int64 > assetId Asset ID of the holding. (required). System.String creator Address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. (required). System.Nullable < System.Boolean > isFrozen \\[f\\] whether or not the holding is frozen. (required). Properties | Improve this Doc View Source Amount \\[a\\] number of units held. Declaration [DataMember(Name = \"amount\", EmitDefaultValue = false)] public ulong? Amount { get; set; } Property Value Type Description System.Nullable < System.UInt64 > \\[a\\] number of units held. | Improve this Doc View Source AssetId Asset ID of the holding. Declaration [DataMember(Name = \"asset-id\", EmitDefaultValue = false)] public long? AssetId { get; set; } Property Value Type Description System.Nullable < System.Int64 > Asset ID of the holding. | Improve this Doc View Source Creator Address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration [DataMember(Name = \"creator\", EmitDefaultValue = false)] public string Creator { get; set; } Property Value Type Description System.String Address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. | Improve this Doc View Source IsFrozen \\[f\\] whether or not the holding is frozen. Declaration [DataMember(Name = \"is-frozen\", EmitDefaultValue = false)] public bool? IsFrozen { get; set; } Property Value Type Description System.Nullable < System.Boolean > \\[f\\] whether or not the holding is frozen. Methods | Improve this Doc View Source Equals(AssetHolding) Returns true if AssetHolding instances are equal Declaration public bool Equals(AssetHolding input) Parameters Type Name Description AssetHolding input Instance of AssetHolding to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AssetParams.html": {
    "href": "api/Algorand.V2.Model.AssetParams.html",
    "title": "Class AssetParams | Dotnet Algorand Documents",
    "keywords": "Class AssetParams AssetParams specifies the parameters for an asset. \\[apar\\] when part of an AssetConfig transaction. Definition: data/transactions/asset.go : AssetParams Inheritance System.Object AssetParams Implements System.IEquatable < AssetParams > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetParams : IEquatable<AssetParams>, IValidatableObject Constructors | Improve this Doc View Source AssetParams() Initializes a new instance of the AssetParams class. Declaration [JsonConstructor] protected AssetParams() | Improve this Doc View Source AssetParams(String, String, Nullable<Int64>, Nullable<Boolean>, String, String, Byte[], String, String, Nullable<UInt64>, String, String) Initializes a new instance of the AssetParams class. Declaration public AssetParams(string clawback = null, string creator = null, long? decimals = default(long? ), bool? defaultFrozen = default(bool? ), string freeze = null, string manager = null, byte[] metadataHash = null, string name = null, string reserve = null, ulong? total = default(ulong? ), string unitName = null, string url = null) Parameters Type Name Description System.String clawback \\[c\\] Address of account used to clawback holdings of this asset. If empty, clawback is not permitted.. System.String creator The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. (required). System.Nullable < System.Int64 > decimals \\[dc\\] The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). (required). System.Nullable < System.Boolean > defaultFrozen \\[df\\] Whether holdings of this asset are frozen by default.. System.String freeze \\[f\\] Address of account used to freeze holdings of this asset. If empty, freezing is not permitted.. System.String manager \\[m\\] Address of account used to manage the keys of this asset and to destroy it.. System.Byte [] metadataHash \\[am\\] A commitment to some unspecified asset metadata. The format of this metadata is up to the application.. System.String name \\[an\\] Name of this asset, as supplied by the creator.. System.String reserve \\[r\\] Address of account holding reserve (non-minted) units of this asset.. System.Nullable < System.UInt64 > total \\[t\\] The total number of units of this asset. (required). System.String unitName \\[un\\] Name of a unit of this asset, as supplied by the creator.. System.String url \\[au\\] URL where more information about the asset can be retrieved.. Properties | Improve this Doc View Source Clawback \\[c\\] Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. Declaration [DataMember(Name = \"clawback\", EmitDefaultValue = false)] public string Clawback { get; set; } Property Value Type Description System.String \\[c\\] Address of account used to clawback holdings of this asset. If empty, clawback is not permitted. | Improve this Doc View Source Creator The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. Declaration [DataMember(Name = \"creator\", EmitDefaultValue = false)] public string Creator { get; set; } Property Value Type Description System.String The address that created this asset. This is the address where the parameters for this asset can be found, and also the address where unwanted asset units can be sent in the worst case. | Improve this Doc View Source Decimals \\[dc\\] The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). Declaration [DataMember(Name = \"decimals\", EmitDefaultValue = false)] public long? Decimals { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[dc\\] The number of digits to use after the decimal point when displaying this asset. If 0, the asset is not divisible. If 1, the base unit of the asset is in tenths. If 2, the base unit of the asset is in hundredths, and so on. This value must be between 0 and 19 (inclusive). | Improve this Doc View Source DefaultFrozen \\[df\\] Whether holdings of this asset are frozen by default. Declaration [DataMember(Name = \"default-frozen\", EmitDefaultValue = false)] public bool? DefaultFrozen { get; set; } Property Value Type Description System.Nullable < System.Boolean > \\[df\\] Whether holdings of this asset are frozen by default. | Improve this Doc View Source Freeze \\[f\\] Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. Declaration [DataMember(Name = \"freeze\", EmitDefaultValue = false)] public string Freeze { get; set; } Property Value Type Description System.String \\[f\\] Address of account used to freeze holdings of this asset. If empty, freezing is not permitted. | Improve this Doc View Source Manager \\[m\\] Address of account used to manage the keys of this asset and to destroy it. Declaration [DataMember(Name = \"manager\", EmitDefaultValue = false)] public string Manager { get; set; } Property Value Type Description System.String \\[m\\] Address of account used to manage the keys of this asset and to destroy it. | Improve this Doc View Source MetadataHash \\[am\\] A commitment to some unspecified asset metadata. The format of this metadata is up to the application. Declaration [DataMember(Name = \"metadata-hash\", EmitDefaultValue = false)] public byte[] MetadataHash { get; set; } Property Value Type Description System.Byte [] \\[am\\] A commitment to some unspecified asset metadata. The format of this metadata is up to the application. | Improve this Doc View Source Name \\[an\\] Name of this asset, as supplied by the creator. Declaration [DataMember(Name = \"name\", EmitDefaultValue = false)] public string Name { get; set; } Property Value Type Description System.String \\[an\\] Name of this asset, as supplied by the creator. | Improve this Doc View Source Reserve \\[r\\] Address of account holding reserve (non-minted) units of this asset. Declaration [DataMember(Name = \"reserve\", EmitDefaultValue = false)] public string Reserve { get; set; } Property Value Type Description System.String \\[r\\] Address of account holding reserve (non-minted) units of this asset. | Improve this Doc View Source Total \\[t\\] The total number of units of this asset. Declaration [DataMember(Name = \"total\", EmitDefaultValue = false)] public ulong? Total { get; set; } Property Value Type Description System.Nullable < System.UInt64 > \\[t\\] The total number of units of this asset. | Improve this Doc View Source UnitName \\[un\\] Name of a unit of this asset, as supplied by the creator. Declaration [DataMember(Name = \"unit-name\", EmitDefaultValue = false)] public string UnitName { get; set; } Property Value Type Description System.String \\[un\\] Name of a unit of this asset, as supplied by the creator. | Improve this Doc View Source Url \\[au\\] URL where more information about the asset can be retrieved. Declaration [DataMember(Name = \"url\", EmitDefaultValue = false)] public string Url { get; set; } Property Value Type Description System.String \\[au\\] URL where more information about the asset can be retrieved. Methods | Improve this Doc View Source Equals(AssetParams) Returns true if AssetParams instances are equal Declaration public bool Equals(AssetParams input) Parameters Type Name Description AssetParams input Instance of AssetParams to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AssetResponse.html": {
    "href": "api/Algorand.V2.Model.AssetResponse.html",
    "title": "Class AssetResponse | Dotnet Algorand Documents",
    "keywords": "Class AssetResponse AssetResponse Inheritance System.Object AssetResponse Implements System.IEquatable < AssetResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetResponse : IEquatable<AssetResponse>, IValidatableObject Constructors | Improve this Doc View Source AssetResponse(Asset, Nullable<Int64>) Initializes a new instance of the AssetResponse class. Declaration public AssetResponse(Asset asset = null, long? currentRound = default(long? )) Parameters Type Name Description Asset asset asset (required). System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). Properties | Improve this Doc View Source Asset Gets or Sets Asset Declaration [DataMember(Name = \"asset\", EmitDefaultValue = false)] public Asset Asset { get; set; } Property Value Type Description Asset | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. Methods | Improve this Doc View Source Equals(AssetResponse) Returns true if AssetResponse instances are equal Declaration public bool Equals(AssetResponse input) Parameters Type Name Description AssetResponse input Instance of AssetResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.AssetsResponse.html": {
    "href": "api/Algorand.V2.Model.AssetsResponse.html",
    "title": "Class AssetsResponse | Dotnet Algorand Documents",
    "keywords": "Class AssetsResponse AssetsResponse Inheritance System.Object AssetsResponse Implements System.IEquatable < AssetsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class AssetsResponse : IEquatable<AssetsResponse>, IValidatableObject Constructors | Improve this Doc View Source AssetsResponse(List<Asset>, Nullable<Int64>, String) Initializes a new instance of the AssetsResponse class. Declaration public AssetsResponse(List<Asset> assets = null, long? currentRound = default(long? ), string nextToken = null) Parameters Type Name Description System.Collections.Generic.List < Asset > assets assets (required). System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). System.String nextToken Used for pagination, when making another request provide this token with the next parameter.. Properties | Improve this Doc View Source Assets Gets or Sets Assets Declaration [DataMember(Name = \"assets\", EmitDefaultValue = false)] public List<Asset> Assets { get; set; } Property Value Type Description System.Collections.Generic.List < Asset > | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. | Improve this Doc View Source NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration [DataMember(Name = \"next-token\", EmitDefaultValue = false)] public string NextToken { get; set; } Property Value Type Description System.String Used for pagination, when making another request provide this token with the next parameter. Methods | Improve this Doc View Source Equals(AssetsResponse) Returns true if AssetsResponse instances are equal Declaration public bool Equals(AssetsResponse input) Parameters Type Name Description AssetsResponse input Instance of AssetsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.Block.html": {
    "href": "api/Algorand.V2.Model.Block.html",
    "title": "Class Block | Dotnet Algorand Documents",
    "keywords": "Class Block Block information. Definition: data/bookkeeping/block.go : Block Inheritance System.Object Block Implements System.IEquatable < Block > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class Block : IEquatable<Block>, IValidatableObject Constructors | Improve this Doc View Source Block(Byte[], String, Byte[], BlockRewards, Nullable<Int64>, Byte[], Nullable<Int64>, List<Transaction>, Byte[], Nullable<Int64>, BlockUpgradeState, BlockUpgradeVote) Initializes a new instance of the Block class. Declaration public Block(byte[] genesisHash = null, string genesisId = null, byte[] previousBlockHash = null, BlockRewards rewards = null, long? round = default(long? ), byte[] seed = null, long? timestamp = default(long? ), List<Transaction> transactions = null, byte[] transactionsRoot = null, long? txnCounter = default(long? ), BlockUpgradeState upgradeState = null, BlockUpgradeVote upgradeVote = null) Parameters Type Name Description System.Byte [] genesisHash \\[gh\\] hash to which this block belongs. (required). System.String genesisId \\[gen\\] ID to which this block belongs. (required). System.Byte [] previousBlockHash \\[prev\\] Previous block hash. (required). BlockRewards rewards rewards. System.Nullable < System.Int64 > round \\[rnd\\] Current round on which this block was appended to the chain. (required). System.Byte [] seed \\[seed\\] Sortition seed. (required). System.Nullable < System.Int64 > timestamp \\[ts\\] Block creation timestamp in seconds since eposh (required). System.Collections.Generic.List < Transaction > transactions \\[txns\\] list of transactions corresponding to a given round.. System.Byte [] transactionsRoot \\[txn\\] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. (required). System.Nullable < System.Int64 > txnCounter \\[tc\\] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported).. BlockUpgradeState upgradeState upgradeState. BlockUpgradeVote upgradeVote upgradeVote. Properties | Improve this Doc View Source GenesisHash \\[gh\\] hash to which this block belongs. Declaration [DataMember(Name = \"genesis-hash\", EmitDefaultValue = false)] public byte[] GenesisHash { get; set; } Property Value Type Description System.Byte [] \\[gh\\] hash to which this block belongs. | Improve this Doc View Source GenesisId \\[gen\\] ID to which this block belongs. Declaration [DataMember(Name = \"genesis-id\", EmitDefaultValue = false)] public string GenesisId { get; set; } Property Value Type Description System.String \\[gen\\] ID to which this block belongs. | Improve this Doc View Source PreviousBlockHash \\[prev\\] Previous block hash. Declaration [DataMember(Name = \"previous-block-hash\", EmitDefaultValue = false)] public byte[] PreviousBlockHash { get; set; } Property Value Type Description System.Byte [] \\[prev\\] Previous block hash. | Improve this Doc View Source Rewards Gets or Sets Rewards Declaration [DataMember(Name = \"rewards\", EmitDefaultValue = false)] public BlockRewards Rewards { get; set; } Property Value Type Description BlockRewards | Improve this Doc View Source Round \\[rnd\\] Current round on which this block was appended to the chain. Declaration [DataMember(Name = \"round\", EmitDefaultValue = false)] public long? Round { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[rnd\\] Current round on which this block was appended to the chain. | Improve this Doc View Source Seed \\[seed\\] Sortition seed. Declaration [DataMember(Name = \"seed\", EmitDefaultValue = false)] public byte[] Seed { get; set; } Property Value Type Description System.Byte [] \\[seed\\] Sortition seed. | Improve this Doc View Source Timestamp \\[ts\\] Block creation timestamp in seconds since eposh Declaration [DataMember(Name = \"timestamp\", EmitDefaultValue = false)] public long? Timestamp { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[ts\\] Block creation timestamp in seconds since eposh | Improve this Doc View Source Transactions \\[txns\\] list of transactions corresponding to a given round. Declaration [DataMember(Name = \"transactions\", EmitDefaultValue = false)] public List<Transaction> Transactions { get; set; } Property Value Type Description System.Collections.Generic.List < Transaction > \\[txns\\] list of transactions corresponding to a given round. | Improve this Doc View Source TransactionsRoot \\[txn\\] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. Declaration [DataMember(Name = \"transactions-root\", EmitDefaultValue = false)] public byte[] TransactionsRoot { get; set; } Property Value Type Description System.Byte [] \\[txn\\] TransactionsRoot authenticates the set of transactions appearing in the block. More specifically, it's the root of a merkle tree whose leaves are the block's Txids, in lexicographic order. For the empty block, it's 0. Note that the TxnRoot does not authenticate the signatures on the transactions, only the transactions themselves. Two blocks with the same transactions but in a different order and with different signatures will have the same TxnRoot. | Improve this Doc View Source TxnCounter \\[tc\\] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported). Declaration [DataMember(Name = \"txn-counter\", EmitDefaultValue = false)] public long? TxnCounter { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[tc\\] TxnCounter counts the number of transactions committed in the ledger, from the time at which support for this feature was introduced. Specifically, TxnCounter is the number of the next transaction that will be committed after this block. It is 0 when no transactions have ever been committed (since TxnCounter started being supported). | Improve this Doc View Source UpgradeState Gets or Sets UpgradeState Declaration [DataMember(Name = \"upgrade-state\", EmitDefaultValue = false)] public BlockUpgradeState UpgradeState { get; set; } Property Value Type Description BlockUpgradeState | Improve this Doc View Source UpgradeVote Gets or Sets UpgradeVote Declaration [DataMember(Name = \"upgrade-vote\", EmitDefaultValue = false)] public BlockUpgradeVote UpgradeVote { get; set; } Property Value Type Description BlockUpgradeVote Methods | Improve this Doc View Source Equals(Block) Returns true if Block instances are equal Declaration public bool Equals(Block input) Parameters Type Name Description Block input Instance of Block to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.BlockResponse.html": {
    "href": "api/Algorand.V2.Model.BlockResponse.html",
    "title": "Class BlockResponse | Dotnet Algorand Documents",
    "keywords": "Class BlockResponse BlockResponse Inheritance System.Object BlockResponse Implements System.IEquatable < BlockResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class BlockResponse : IEquatable<BlockResponse>, IValidatableObject Constructors | Improve this Doc View Source BlockResponse() Initializes a new instance of the BlockResponse class. Declaration [JsonConstructor] protected BlockResponse() | Improve this Doc View Source BlockResponse(Object, Object) Initializes a new instance of the BlockResponse class. Declaration public BlockResponse(object block = null, object cert = null) Parameters Type Name Description System.Object block Block header data. (required). System.Object cert Optional certificate object. This is only included when the format is set to message pack.. Properties | Improve this Doc View Source Block Block header data. Declaration [DataMember(Name = \"block\", EmitDefaultValue = false)] public object Block { get; set; } Property Value Type Description System.Object Block header data. | Improve this Doc View Source Cert Optional certificate object. This is only included when the format is set to message pack. Declaration [DataMember(Name = \"cert\", EmitDefaultValue = false)] public object Cert { get; set; } Property Value Type Description System.Object Optional certificate object. This is only included when the format is set to message pack. Methods | Improve this Doc View Source Equals(BlockResponse) Returns true if BlockResponse instances are equal Declaration public bool Equals(BlockResponse input) Parameters Type Name Description BlockResponse input Instance of BlockResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.BlockRewards.html": {
    "href": "api/Algorand.V2.Model.BlockRewards.html",
    "title": "Class BlockRewards | Dotnet Algorand Documents",
    "keywords": "Class BlockRewards Fields relating to rewards, Inheritance System.Object BlockRewards Implements System.IEquatable < BlockRewards > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class BlockRewards : IEquatable<BlockRewards>, IValidatableObject Constructors | Improve this Doc View Source BlockRewards(String, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the BlockRewards class. Declaration public BlockRewards(string feeSink = null, long? rewardsCalculationRound = default(long? ), long? rewardsLevel = default(long? ), string rewardsPool = null, long? rewardsRate = default(long? ), long? rewardsResidue = default(long? )) Parameters Type Name Description System.String feeSink \\[fees\\] accepts transaction fees, it can only spend to the incentive pool. (required). System.Nullable < System.Int64 > rewardsCalculationRound \\[rwcalr\\] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. (required). System.Nullable < System.Int64 > rewardsLevel \\[earn\\] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. (required). System.String rewardsPool \\[rwd\\] accepts periodic injections from the fee-sink and continually redistributes them as rewards. (required). System.Nullable < System.Int64 > rewardsRate \\[rate\\] Number of new MicroAlgos added to the participation stake from rewards at the next round. (required). System.Nullable < System.Int64 > rewardsResidue \\[frac\\] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. (required). Properties | Improve this Doc View Source FeeSink \\[fees\\] accepts transaction fees, it can only spend to the incentive pool. Declaration [DataMember(Name = \"fee-sink\", EmitDefaultValue = false)] public string FeeSink { get; set; } Property Value Type Description System.String \\[fees\\] accepts transaction fees, it can only spend to the incentive pool. | Improve this Doc View Source RewardsCalculationRound \\[rwcalr\\] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. Declaration [DataMember(Name = \"rewards-calculation-round\", EmitDefaultValue = false)] public long? RewardsCalculationRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[rwcalr\\] number of leftover MicroAlgos after the distribution of rewards-rate MicroAlgos for every reward unit in the next round. | Improve this Doc View Source RewardsLevel \\[earn\\] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. Declaration [DataMember(Name = \"rewards-level\", EmitDefaultValue = false)] public long? RewardsLevel { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[earn\\] How many rewards, in MicroAlgos, have been distributed to each RewardUnit of MicroAlgos since genesis. | Improve this Doc View Source RewardsPool \\[rwd\\] accepts periodic injections from the fee-sink and continually redistributes them as rewards. Declaration [DataMember(Name = \"rewards-pool\", EmitDefaultValue = false)] public string RewardsPool { get; set; } Property Value Type Description System.String \\[rwd\\] accepts periodic injections from the fee-sink and continually redistributes them as rewards. | Improve this Doc View Source RewardsRate \\[rate\\] Number of new MicroAlgos added to the participation stake from rewards at the next round. Declaration [DataMember(Name = \"rewards-rate\", EmitDefaultValue = false)] public long? RewardsRate { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[rate\\] Number of new MicroAlgos added to the participation stake from rewards at the next round. | Improve this Doc View Source RewardsResidue \\[frac\\] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Declaration [DataMember(Name = \"rewards-residue\", EmitDefaultValue = false)] public long? RewardsResidue { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[frac\\] Number of leftover MicroAlgos after the distribution of RewardsRate/rewardUnits MicroAlgos for every reward unit in the next round. Methods | Improve this Doc View Source Equals(BlockRewards) Returns true if BlockRewards instances are equal Declaration public bool Equals(BlockRewards input) Parameters Type Name Description BlockRewards input Instance of BlockRewards to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.BlockUpgradeState.html": {
    "href": "api/Algorand.V2.Model.BlockUpgradeState.html",
    "title": "Class BlockUpgradeState | Dotnet Algorand Documents",
    "keywords": "Class BlockUpgradeState Fields relating to a protocol upgrade. Inheritance System.Object BlockUpgradeState Implements System.IEquatable < BlockUpgradeState > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class BlockUpgradeState : IEquatable<BlockUpgradeState>, IValidatableObject Constructors | Improve this Doc View Source BlockUpgradeState(String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the BlockUpgradeState class. Declaration public BlockUpgradeState(string currentProtocol = null, string nextProtocol = null, long? nextProtocolApprovals = default(long? ), long? nextProtocolSwitchOn = default(long? ), long? nextProtocolVoteBefore = default(long? )) Parameters Type Name Description System.String currentProtocol \\[proto\\] The current protocol version. (required). System.String nextProtocol \\[nextproto\\] The next proposed protocol version.. System.Nullable < System.Int64 > nextProtocolApprovals \\[nextyes\\] Number of blocks which approved the protocol upgrade.. System.Nullable < System.Int64 > nextProtocolSwitchOn \\[nextswitch\\] Round on which the protocol upgrade will take effect.. System.Nullable < System.Int64 > nextProtocolVoteBefore \\[nextbefore\\] Deadline round for this protocol upgrade (No votes will be consider after this round).. Properties | Improve this Doc View Source CurrentProtocol \\[proto\\] The current protocol version. Declaration [DataMember(Name = \"current-protocol\", EmitDefaultValue = false)] public string CurrentProtocol { get; set; } Property Value Type Description System.String \\[proto\\] The current protocol version. | Improve this Doc View Source NextProtocol \\[nextproto\\] The next proposed protocol version. Declaration [DataMember(Name = \"next-protocol\", EmitDefaultValue = false)] public string NextProtocol { get; set; } Property Value Type Description System.String \\[nextproto\\] The next proposed protocol version. | Improve this Doc View Source NextProtocolApprovals \\[nextyes\\] Number of blocks which approved the protocol upgrade. Declaration [DataMember(Name = \"next-protocol-approvals\", EmitDefaultValue = false)] public long? NextProtocolApprovals { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[nextyes\\] Number of blocks which approved the protocol upgrade. | Improve this Doc View Source NextProtocolSwitchOn \\[nextswitch\\] Round on which the protocol upgrade will take effect. Declaration [DataMember(Name = \"next-protocol-switch-on\", EmitDefaultValue = false)] public long? NextProtocolSwitchOn { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[nextswitch\\] Round on which the protocol upgrade will take effect. | Improve this Doc View Source NextProtocolVoteBefore \\[nextbefore\\] Deadline round for this protocol upgrade (No votes will be consider after this round). Declaration [DataMember(Name = \"next-protocol-vote-before\", EmitDefaultValue = false)] public long? NextProtocolVoteBefore { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[nextbefore\\] Deadline round for this protocol upgrade (No votes will be consider after this round). Methods | Improve this Doc View Source Equals(BlockUpgradeState) Returns true if BlockUpgradeState instances are equal Declaration public bool Equals(BlockUpgradeState input) Parameters Type Name Description BlockUpgradeState input Instance of BlockUpgradeState to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.BlockUpgradeVote.html": {
    "href": "api/Algorand.V2.Model.BlockUpgradeVote.html",
    "title": "Class BlockUpgradeVote | Dotnet Algorand Documents",
    "keywords": "Class BlockUpgradeVote Fields relating to voting for a protocol upgrade. Inheritance System.Object BlockUpgradeVote Implements System.IEquatable < BlockUpgradeVote > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class BlockUpgradeVote : IEquatable<BlockUpgradeVote>, IValidatableObject Constructors | Improve this Doc View Source BlockUpgradeVote(Nullable<Boolean>, Nullable<Int64>, String) Initializes a new instance of the BlockUpgradeVote class. Declaration public BlockUpgradeVote(bool? upgradeApprove = default(bool? ), long? upgradeDelay = default(long? ), string upgradePropose = null) Parameters Type Name Description System.Nullable < System.Boolean > upgradeApprove \\[upgradeyes\\] Indicates a yes vote for the current proposal.. System.Nullable < System.Int64 > upgradeDelay \\[upgradedelay\\] Indicates the time between acceptance and execution.. System.String upgradePropose \\[upgradeprop\\] Indicates a proposed upgrade.. Properties | Improve this Doc View Source UpgradeApprove \\[upgradeyes\\] Indicates a yes vote for the current proposal. Declaration [DataMember(Name = \"upgrade-approve\", EmitDefaultValue = false)] public bool? UpgradeApprove { get; set; } Property Value Type Description System.Nullable < System.Boolean > \\[upgradeyes\\] Indicates a yes vote for the current proposal. | Improve this Doc View Source UpgradeDelay \\[upgradedelay\\] Indicates the time between acceptance and execution. Declaration [DataMember(Name = \"upgrade-delay\", EmitDefaultValue = false)] public long? UpgradeDelay { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[upgradedelay\\] Indicates the time between acceptance and execution. | Improve this Doc View Source UpgradePropose \\[upgradeprop\\] Indicates a proposed upgrade. Declaration [DataMember(Name = \"upgrade-propose\", EmitDefaultValue = false)] public string UpgradePropose { get; set; } Property Value Type Description System.String \\[upgradeprop\\] Indicates a proposed upgrade. Methods | Improve this Doc View Source Equals(BlockUpgradeVote) Returns true if BlockUpgradeVote instances are equal Declaration public bool Equals(BlockUpgradeVote input) Parameters Type Name Description BlockUpgradeVote input Instance of BlockUpgradeVote to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.BuildVersion.html": {
    "href": "api/Algorand.V2.Model.BuildVersion.html",
    "title": "Class BuildVersion | Dotnet Algorand Documents",
    "keywords": "Class BuildVersion BuildVersion Inheritance System.Object BuildVersion Implements System.IEquatable < BuildVersion > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class BuildVersion : IEquatable<BuildVersion>, IValidatableObject Constructors | Improve this Doc View Source BuildVersion() Initializes a new instance of the BuildVersion class. Declaration [JsonConstructor] protected BuildVersion() | Improve this Doc View Source BuildVersion(String, Nullable<Int64>, String, String, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the BuildVersion class. Declaration public BuildVersion(string branch = null, long? buildNumber = default(long? ), string channel = null, string commitHash = null, long? major = default(long? ), long? minor = default(long? )) Parameters Type Name Description System.String branch branch (required). System.Nullable < System.Int64 > buildNumber buildNumber (required). System.String channel channel (required). System.String commitHash commitHash (required). System.Nullable < System.Int64 > major major (required). System.Nullable < System.Int64 > minor minor (required). Properties | Improve this Doc View Source Branch Gets or Sets Branch Declaration [DataMember(Name = \"branch\", EmitDefaultValue = false)] public string Branch { get; set; } Property Value Type Description System.String | Improve this Doc View Source BuildNumber Gets or Sets BuildNumber Declaration [DataMember(Name = \"build_number\", EmitDefaultValue = false)] public long? BuildNumber { get; set; } Property Value Type Description System.Nullable < System.Int64 > | Improve this Doc View Source Channel Gets or Sets Channel Declaration [DataMember(Name = \"channel\", EmitDefaultValue = false)] public string Channel { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommitHash Gets or Sets CommitHash Declaration [DataMember(Name = \"commit_hash\", EmitDefaultValue = false)] public string CommitHash { get; set; } Property Value Type Description System.String | Improve this Doc View Source Major Gets or Sets Major Declaration [DataMember(Name = \"major\", EmitDefaultValue = false)] public long? Major { get; set; } Property Value Type Description System.Nullable < System.Int64 > | Improve this Doc View Source Minor Gets or Sets Minor Declaration [DataMember(Name = \"minor\", EmitDefaultValue = false)] public long? Minor { get; set; } Property Value Type Description System.Nullable < System.Int64 > Methods | Improve this Doc View Source Equals(BuildVersion) Returns true if BuildVersion instances are equal Declaration public bool Equals(BuildVersion input) Parameters Type Name Description BuildVersion input Instance of BuildVersion to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.CatchpointAbortResponse.html": {
    "href": "api/Algorand.V2.Model.CatchpointAbortResponse.html",
    "title": "Class CatchpointAbortResponse | Dotnet Algorand Documents",
    "keywords": "Class CatchpointAbortResponse An catchpoint abort response. Inheritance System.Object CatchpointAbortResponse Implements System.IEquatable < CatchpointAbortResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class CatchpointAbortResponse : IEquatable<CatchpointAbortResponse>, IValidatableObject Constructors | Improve this Doc View Source CatchpointAbortResponse() Initializes a new instance of the CatchpointAbortResponse class. Declaration [JsonConstructor] protected CatchpointAbortResponse() | Improve this Doc View Source CatchpointAbortResponse(String) Initializes a new instance of the CatchpointAbortResponse class. Declaration public CatchpointAbortResponse(string catchupMessage = null) Parameters Type Name Description System.String catchupMessage Catchup abort response string (required). Properties | Improve this Doc View Source CatchupMessage Catchup abort response string Declaration [DataMember(Name = \"catchup-message\", EmitDefaultValue = false)] public string CatchupMessage { get; set; } Property Value Type Description System.String Catchup abort response string Methods | Improve this Doc View Source Equals(CatchpointAbortResponse) Returns true if CatchpointAbortResponse instances are equal Declaration public bool Equals(CatchpointAbortResponse input) Parameters Type Name Description CatchpointAbortResponse input Instance of CatchpointAbortResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.CatchpointStartResponse.html": {
    "href": "api/Algorand.V2.Model.CatchpointStartResponse.html",
    "title": "Class CatchpointStartResponse | Dotnet Algorand Documents",
    "keywords": "Class CatchpointStartResponse An catchpoint start response. Inheritance System.Object CatchpointStartResponse Implements System.IEquatable < CatchpointStartResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class CatchpointStartResponse : IEquatable<CatchpointStartResponse>, IValidatableObject Constructors | Improve this Doc View Source CatchpointStartResponse() Initializes a new instance of the CatchpointStartResponse class. Declaration [JsonConstructor] protected CatchpointStartResponse() | Improve this Doc View Source CatchpointStartResponse(String) Initializes a new instance of the CatchpointStartResponse class. Declaration public CatchpointStartResponse(string catchupMessage = null) Parameters Type Name Description System.String catchupMessage Catchup start response string (required). Properties | Improve this Doc View Source CatchupMessage Catchup start response string Declaration [DataMember(Name = \"catchup-message\", EmitDefaultValue = false)] public string CatchupMessage { get; set; } Property Value Type Description System.String Catchup start response string Methods | Improve this Doc View Source Equals(CatchpointStartResponse) Returns true if CatchpointStartResponse instances are equal Declaration public bool Equals(CatchpointStartResponse input) Parameters Type Name Description CatchpointStartResponse input Instance of CatchpointStartResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.CompileResponse.html": {
    "href": "api/Algorand.V2.Model.CompileResponse.html",
    "title": "Class CompileResponse | Dotnet Algorand Documents",
    "keywords": "Class CompileResponse CompileResponse Inheritance System.Object CompileResponse Implements System.IEquatable < CompileResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class CompileResponse : IEquatable<CompileResponse>, IValidatableObject Constructors | Improve this Doc View Source CompileResponse() Initializes a new instance of the CompileResponse class. Declaration [JsonConstructor] protected CompileResponse() | Improve this Doc View Source CompileResponse(String, String) Initializes a new instance of the CompileResponse class. Declaration public CompileResponse(string hash = null, string result = null) Parameters Type Name Description System.String hash base32 SHA512_256 of program bytes (Address style) (required). System.String result base64 encoded program bytes (required). Properties | Improve this Doc View Source Hash base32 SHA512_256 of program bytes (Address style) Declaration [DataMember(Name = \"hash\", EmitDefaultValue = false)] public string Hash { get; set; } Property Value Type Description System.String base32 SHA512_256 of program bytes (Address style) | Improve this Doc View Source Result base64 encoded program bytes Declaration [DataMember(Name = \"result\", EmitDefaultValue = false)] public string Result { get; set; } Property Value Type Description System.String base64 encoded program bytes Methods | Improve this Doc View Source Equals(CompileResponse) Returns true if CompileResponse instances are equal Declaration public bool Equals(CompileResponse input) Parameters Type Name Description CompileResponse input Instance of CompileResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.DryrunRequest.html": {
    "href": "api/Algorand.V2.Model.DryrunRequest.html",
    "title": "Class DryrunRequest | Dotnet Algorand Documents",
    "keywords": "Class DryrunRequest Request data type for dryrun endpoint. Given the Transactions and simulated ledger state upload, run TEAL scripts and return debugging information. Inheritance System.Object DryrunRequest Implements System.IEquatable < DryrunRequest > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class DryrunRequest : IEquatable<DryrunRequest>, IValidatableObject Constructors | Improve this Doc View Source DryrunRequest() Initializes a new instance of the DryrunRequest class. Declaration [JsonConstructor] protected DryrunRequest() | Improve this Doc View Source DryrunRequest(List<SignedTransaction>, List<Account>, List<Application>, String, Nullable<UInt64>, Nullable<Int64>, List<DryrunSource>) Initializes a new instance of the DryrunRequest class. Declaration public DryrunRequest(List<SignedTransaction> txns = null, List<Account> accounts = null, List<Application> apps = null, string protocolVersion = null, ulong? round = default(ulong? ), long? latestTimestamp = default(long? ), List<DryrunSource> sources = null) Parameters Type Name Description System.Collections.Generic.List < SignedTransaction > txns txns (required). System.Collections.Generic.List < Account > accounts accounts (required). System.Collections.Generic.List < Application > apps apps (required). System.String protocolVersion ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in. (required). System.Nullable < System.UInt64 > round Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to. (required). System.Nullable < System.Int64 > latestTimestamp LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to. (required). System.Collections.Generic.List < DryrunSource > sources sources (required). Properties | Improve this Doc View Source Accounts Gets or Sets Accounts Declaration [DataMember(Name = \"accounts\", EmitDefaultValue = false)] public List<Account> Accounts { get; set; } Property Value Type Description System.Collections.Generic.List < Account > | Improve this Doc View Source Apps Gets or Sets Apps Declaration [DataMember(Name = \"apps\", EmitDefaultValue = false)] public List<Application> Apps { get; set; } Property Value Type Description System.Collections.Generic.List < Application > | Improve this Doc View Source LatestTimestamp LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to. Declaration [DataMember(Name = \"latest-timestamp\", EmitDefaultValue = false)] public long? LatestTimestamp { get; set; } Property Value Type Description System.Nullable < System.Int64 > LatestTimestamp is available to some TEAL scripts. Defaults to the latest confirmed timestamp this algod is attached to. | Improve this Doc View Source ProtocolVersion ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in. Declaration [DataMember(Name = \"protocol-version\", EmitDefaultValue = false)] public string ProtocolVersion { get; set; } Property Value Type Description System.String ProtocolVersion specifies a specific version string to operate under, otherwise whatever the current protocol of the network this algod is running in. | Improve this Doc View Source Round Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to. Declaration [DataMember(Name = \"round\", EmitDefaultValue = false)] public ulong? Round { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Round is available to some TEAL scripts. Defaults to the current round on the network this algod is attached to. | Improve this Doc View Source Sources Gets or Sets Sources Declaration [DataMember(Name = \"sources\", EmitDefaultValue = false)] public List<DryrunSource> Sources { get; set; } Property Value Type Description System.Collections.Generic.List < DryrunSource > | Improve this Doc View Source Txns Gets or Sets Txns Declaration [DataMember(Name = \"txns\", EmitDefaultValue = false)] public List<SignedTransaction> Txns { get; set; } Property Value Type Description System.Collections.Generic.List < SignedTransaction > Methods | Improve this Doc View Source Equals(DryrunRequest) Returns true if DryrunRequest instances are equal Declaration public bool Equals(DryrunRequest input) Parameters Type Name Description DryrunRequest input Instance of DryrunRequest to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.DryrunResponse.html": {
    "href": "api/Algorand.V2.Model.DryrunResponse.html",
    "title": "Class DryrunResponse | Dotnet Algorand Documents",
    "keywords": "Class DryrunResponse DryrunResponse Inheritance System.Object DryrunResponse Implements System.IEquatable < DryrunResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class DryrunResponse : IEquatable<DryrunResponse>, IValidatableObject Constructors | Improve this Doc View Source DryrunResponse() Initializes a new instance of the DryrunResponse class. Declaration [JsonConstructor] protected DryrunResponse() | Improve this Doc View Source DryrunResponse(List<DryrunTxnResult>, String, String) Initializes a new instance of the DryrunResponse class. Declaration public DryrunResponse(List<DryrunTxnResult> txns = null, string error = null, string protocolVersion = null) Parameters Type Name Description System.Collections.Generic.List < DryrunTxnResult > txns txns (required). System.String error error (required). System.String protocolVersion Protocol version is the protocol version Dryrun was operated under. (required). Properties | Improve this Doc View Source Error Gets or Sets Error Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public string Error { get; set; } Property Value Type Description System.String | Improve this Doc View Source ProtocolVersion Protocol version is the protocol version Dryrun was operated under. Declaration [DataMember(Name = \"protocol-version\", EmitDefaultValue = false)] public string ProtocolVersion { get; set; } Property Value Type Description System.String Protocol version is the protocol version Dryrun was operated under. | Improve this Doc View Source Txns Gets or Sets Txns Declaration [DataMember(Name = \"txns\", EmitDefaultValue = false)] public List<DryrunTxnResult> Txns { get; set; } Property Value Type Description System.Collections.Generic.List < DryrunTxnResult > Methods | Improve this Doc View Source Equals(DryrunResponse) Returns true if DryrunResponse instances are equal Declaration public bool Equals(DryrunResponse input) Parameters Type Name Description DryrunResponse input Instance of DryrunResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.DryrunSource.html": {
    "href": "api/Algorand.V2.Model.DryrunSource.html",
    "title": "Class DryrunSource | Dotnet Algorand Documents",
    "keywords": "Class DryrunSource DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state. Inheritance System.Object DryrunSource Implements System.IEquatable < DryrunSource > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class DryrunSource : IEquatable<DryrunSource>, IValidatableObject Constructors | Improve this Doc View Source DryrunSource() Initializes a new instance of the DryrunSource class. Declaration [JsonConstructor] protected DryrunSource() | Improve this Doc View Source DryrunSource(String, String, Nullable<Int64>, Nullable<UInt64>) Initializes a new instance of the DryrunSource class. Declaration public DryrunSource(string fieldName = null, string source = null, long? txnIndex = default(long? ), ulong? appIndex = default(ulong? )) Parameters Type Name Description System.String fieldName FieldName is what kind of sources this is. If lsig then it goes into the transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the Approval Program or Clear State Program of application[this.AppIndex]. (required). System.String source source (required). System.Nullable < System.Int64 > txnIndex txnIndex (required). System.Nullable < System.UInt64 > appIndex appIndex (required). Properties | Improve this Doc View Source AppIndex Gets or Sets AppIndex Declaration [DataMember(Name = \"app-index\", EmitDefaultValue = false)] public ulong? AppIndex { get; set; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source FieldName FieldName is what kind of sources this is. If lsig then it goes into the transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the Approval Program or Clear State Program of application[this.AppIndex]. Declaration [DataMember(Name = \"field-name\", EmitDefaultValue = false)] public string FieldName { get; set; } Property Value Type Description System.String FieldName is what kind of sources this is. If lsig then it goes into the transactions[this.TxnIndex].LogicSig. If approv or clearp it goes into the Approval Program or Clear State Program of application[this.AppIndex]. | Improve this Doc View Source Source Gets or Sets Source Declaration [DataMember(Name = \"source\", EmitDefaultValue = false)] public string Source { get; set; } Property Value Type Description System.String | Improve this Doc View Source TxnIndex Gets or Sets TxnIndex Declaration [DataMember(Name = \"txn-index\", EmitDefaultValue = false)] public long? TxnIndex { get; set; } Property Value Type Description System.Nullable < System.Int64 > Methods | Improve this Doc View Source Equals(DryrunSource) Returns true if DryrunSource instances are equal Declaration public bool Equals(DryrunSource input) Parameters Type Name Description DryrunSource input Instance of DryrunSource to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.DryrunState.html": {
    "href": "api/Algorand.V2.Model.DryrunState.html",
    "title": "Class DryrunState | Dotnet Algorand Documents",
    "keywords": "Class DryrunState Stores the TEAL eval step data Inheritance System.Object DryrunState Implements System.IEquatable < DryrunState > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class DryrunState : IEquatable<DryrunState>, IValidatableObject Constructors | Improve this Doc View Source DryrunState() Initializes a new instance of the DryrunState class. Declaration [JsonConstructor] protected DryrunState() | Improve this Doc View Source DryrunState(Nullable<Int64>, Nullable<Int64>, List<TealValue>, List<TealValue>, String) Initializes a new instance of the DryrunState class. Declaration public DryrunState(long? line = default(long? ), long? pc = default(long? ), List<TealValue> stack = null, List<TealValue> scratch = null, string error = null) Parameters Type Name Description System.Nullable < System.Int64 > line Line number (required). System.Nullable < System.Int64 > pc Program counter (required). System.Collections.Generic.List < TealValue > stack stack (required). System.Collections.Generic.List < TealValue > scratch scratch. System.String error Evaluation error if any. Properties | Improve this Doc View Source Error Evaluation error if any Declaration [DataMember(Name = \"error\", EmitDefaultValue = false)] public string Error { get; set; } Property Value Type Description System.String Evaluation error if any | Improve this Doc View Source Line Line number Declaration [DataMember(Name = \"line\", EmitDefaultValue = false)] public long? Line { get; set; } Property Value Type Description System.Nullable < System.Int64 > Line number | Improve this Doc View Source Pc Program counter Declaration [DataMember(Name = \"pc\", EmitDefaultValue = false)] public long? Pc { get; set; } Property Value Type Description System.Nullable < System.Int64 > Program counter | Improve this Doc View Source Scratch Gets or Sets Scratch Declaration [DataMember(Name = \"scratch\", EmitDefaultValue = false)] public List<TealValue> Scratch { get; set; } Property Value Type Description System.Collections.Generic.List < TealValue > | Improve this Doc View Source Stack Gets or Sets Stack Declaration [DataMember(Name = \"stack\", EmitDefaultValue = false)] public List<TealValue> Stack { get; set; } Property Value Type Description System.Collections.Generic.List < TealValue > Methods | Improve this Doc View Source Equals(DryrunState) Returns true if DryrunState instances are equal Declaration public bool Equals(DryrunState input) Parameters Type Name Description DryrunState input Instance of DryrunState to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.DryrunTxnResult.html": {
    "href": "api/Algorand.V2.Model.DryrunTxnResult.html",
    "title": "Class DryrunTxnResult | Dotnet Algorand Documents",
    "keywords": "Class DryrunTxnResult DryrunTxnResult contains any LogicSig or ApplicationCall program debug information and state updates from a dryrun. Inheritance System.Object DryrunTxnResult Implements System.IEquatable < DryrunTxnResult > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class DryrunTxnResult : IEquatable<DryrunTxnResult>, IValidatableObject Constructors | Improve this Doc View Source DryrunTxnResult() Initializes a new instance of the DryrunTxnResult class. Declaration [JsonConstructor] protected DryrunTxnResult() | Improve this Doc View Source DryrunTxnResult(List<String>, List<DryrunState>, List<String>, List<DryrunState>, List<String>, StateDelta, List<AccountStateDelta>) Initializes a new instance of the DryrunTxnResult class. Declaration public DryrunTxnResult(List<string> disassembly = null, List<DryrunState> logicSigTrace = null, List<string> logicSigMessages = null, List<DryrunState> appCallTrace = null, List<string> appCallMessages = null, StateDelta globalDelta = null, List<AccountStateDelta> localDeltas = null) Parameters Type Name Description System.Collections.Generic.List < System.String > disassembly Disassembled program line by line. (required). System.Collections.Generic.List < DryrunState > logicSigTrace logicSigTrace. System.Collections.Generic.List < System.String > logicSigMessages logicSigMessages. System.Collections.Generic.List < DryrunState > appCallTrace appCallTrace. System.Collections.Generic.List < System.String > appCallMessages appCallMessages. StateDelta globalDelta globalDelta. System.Collections.Generic.List < AccountStateDelta > localDeltas localDeltas. Properties | Improve this Doc View Source AppCallMessages Gets or Sets AppCallMessages Declaration [DataMember(Name = \"app-call-messages\", EmitDefaultValue = false)] public List<string> AppCallMessages { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source AppCallTrace Gets or Sets AppCallTrace Declaration [DataMember(Name = \"app-call-trace\", EmitDefaultValue = false)] public List<DryrunState> AppCallTrace { get; set; } Property Value Type Description System.Collections.Generic.List < DryrunState > | Improve this Doc View Source Disassembly Disassembled program line by line. Declaration [DataMember(Name = \"disassembly\", EmitDefaultValue = false)] public List<string> Disassembly { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Disassembled program line by line. | Improve this Doc View Source GlobalDelta Gets or Sets GlobalDelta Declaration [DataMember(Name = \"global-delta\", EmitDefaultValue = false)] public StateDelta GlobalDelta { get; set; } Property Value Type Description StateDelta | Improve this Doc View Source LocalDeltas Gets or Sets LocalDeltas Declaration [DataMember(Name = \"local-deltas\", EmitDefaultValue = false)] public List<AccountStateDelta> LocalDeltas { get; set; } Property Value Type Description System.Collections.Generic.List < AccountStateDelta > | Improve this Doc View Source LogicSigMessages Gets or Sets LogicSigMessages Declaration [DataMember(Name = \"logic-sig-messages\", EmitDefaultValue = false)] public List<string> LogicSigMessages { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > | Improve this Doc View Source LogicSigTrace Gets or Sets LogicSigTrace Declaration [DataMember(Name = \"logic-sig-trace\", EmitDefaultValue = false)] public List<DryrunState> LogicSigTrace { get; set; } Property Value Type Description System.Collections.Generic.List < DryrunState > Methods | Improve this Doc View Source Equals(DryrunTxnResult) Returns true if DryrunTxnResult instances are equal Declaration public bool Equals(DryrunTxnResult input) Parameters Type Name Description DryrunTxnResult input Instance of DryrunTxnResult to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.ErrorResponse.html": {
    "href": "api/Algorand.V2.Model.ErrorResponse.html",
    "title": "Class ErrorResponse | Dotnet Algorand Documents",
    "keywords": "Class ErrorResponse An error response with optional data field. Inheritance System.Object ErrorResponse Implements System.IEquatable < ErrorResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class ErrorResponse : IEquatable<ErrorResponse>, IValidatableObject Constructors | Improve this Doc View Source ErrorResponse() Initializes a new instance of the ErrorResponse class. Declaration [JsonConstructor] protected ErrorResponse() | Improve this Doc View Source ErrorResponse(String, String) Initializes a new instance of the ErrorResponse class. Declaration public ErrorResponse(string data = null, string message = null) Parameters Type Name Description System.String data data. System.String message message (required). Properties | Improve this Doc View Source Data Gets or Sets Data Declaration [DataMember(Name = \"data\", EmitDefaultValue = false)] public string Data { get; set; } Property Value Type Description System.String | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(ErrorResponse) Returns true if ErrorResponse instances are equal Declaration public bool Equals(ErrorResponse input) Parameters Type Name Description ErrorResponse input Instance of ErrorResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.EvalDelta.html": {
    "href": "api/Algorand.V2.Model.EvalDelta.html",
    "title": "Class EvalDelta | Dotnet Algorand Documents",
    "keywords": "Class EvalDelta Represents a TEAL value delta. Inheritance System.Object EvalDelta Implements System.IEquatable < EvalDelta > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class EvalDelta : IEquatable<EvalDelta>, IValidatableObject Constructors | Improve this Doc View Source EvalDelta() Initializes a new instance of the EvalDelta class. Declaration [JsonConstructor] protected EvalDelta() | Improve this Doc View Source EvalDelta(Nullable<Int64>, String, Nullable<UInt64>) Initializes a new instance of the EvalDelta class. Declaration public EvalDelta(long? action = default(long? ), string bytes = null, ulong? _uint = default(ulong? )) Parameters Type Name Description System.Nullable < System.Int64 > action \\[at\\] delta action. (required). System.String bytes \\[bs\\] bytes value.. System.Nullable < System.UInt64 > _uint \\[ui\\] uint value.. Properties | Improve this Doc View Source Action \\[at\\] delta action. Declaration [DataMember(Name = \"action\", EmitDefaultValue = false)] public long? Action { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[at\\] delta action. | Improve this Doc View Source Bytes \\[bs\\] bytes value. Declaration [DataMember(Name = \"bytes\", EmitDefaultValue = false)] public string Bytes { get; set; } Property Value Type Description System.String \\[bs\\] bytes value. | Improve this Doc View Source Uint \\[ui\\] uint value. Declaration [DataMember(Name = \"uint\", EmitDefaultValue = false)] public ulong? Uint { get; set; } Property Value Type Description System.Nullable < System.UInt64 > \\[ui\\] uint value. Methods | Improve this Doc View Source Equals(EvalDelta) Returns true if EvalDelta instances are equal Declaration public bool Equals(EvalDelta input) Parameters Type Name Description EvalDelta input Instance of EvalDelta to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.EvalDeltaKeyValue.html": {
    "href": "api/Algorand.V2.Model.EvalDeltaKeyValue.html",
    "title": "Class EvalDeltaKeyValue | Dotnet Algorand Documents",
    "keywords": "Class EvalDeltaKeyValue Key-value pairs for StateDelta. Inheritance System.Object EvalDeltaKeyValue Implements System.IEquatable < EvalDeltaKeyValue > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class EvalDeltaKeyValue : IEquatable<EvalDeltaKeyValue>, IValidatableObject Constructors | Improve this Doc View Source EvalDeltaKeyValue() Initializes a new instance of the EvalDeltaKeyValue class. Declaration [JsonConstructor] protected EvalDeltaKeyValue() | Improve this Doc View Source EvalDeltaKeyValue(String, EvalDelta) Initializes a new instance of the EvalDeltaKeyValue class. Declaration public EvalDeltaKeyValue(string key = null, EvalDelta value = null) Parameters Type Name Description System.String key key (required). EvalDelta value value (required). Properties | Improve this Doc View Source Key Gets or Sets Key Declaration [DataMember(Name = \"key\", EmitDefaultValue = false)] public string Key { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", EmitDefaultValue = false)] public EvalDelta Value { get; set; } Property Value Type Description EvalDelta Methods | Improve this Doc View Source Equals(EvalDeltaKeyValue) Returns true if EvalDeltaKeyValue instances are equal Declaration public bool Equals(EvalDeltaKeyValue input) Parameters Type Name Description EvalDeltaKeyValue input Instance of EvalDeltaKeyValue to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.HealthCheck.html": {
    "href": "api/Algorand.V2.Model.HealthCheck.html",
    "title": "Class HealthCheck | Dotnet Algorand Documents",
    "keywords": "Class HealthCheck A health check response. Inheritance System.Object HealthCheck Implements System.IEquatable < HealthCheck > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class HealthCheck : IEquatable<HealthCheck>, IValidatableObject Constructors | Improve this Doc View Source HealthCheck(Object, String) Initializes a new instance of the HealthCheck class. Declaration public HealthCheck(object data = null, string message = null) Parameters Type Name Description System.Object data data. System.String message message (required). Properties | Improve this Doc View Source Data Gets or Sets Data Declaration [DataMember(Name = \"data\", EmitDefaultValue = false)] public object Data { get; set; } Property Value Type Description System.Object | Improve this Doc View Source Message Gets or Sets Message Declaration [DataMember(Name = \"message\", EmitDefaultValue = false)] public string Message { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Equals(HealthCheck) Returns true if HealthCheck instances are equal Declaration public bool Equals(HealthCheck input) Parameters Type Name Description HealthCheck input Instance of HealthCheck to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.html": {
    "href": "api/Algorand.V2.Model.html",
    "title": "Namespace Algorand.V2.Model | Dotnet Algorand Documents",
    "keywords": "Namespace Algorand.V2.Model Classes Account Account information at a given round. Definition: data/basics/userBalance.go : AccountData AccountParticipation AccountParticipation describes the parameters used by this account in consensus protocol. AccountResponse AccountResponse AccountsResponse AccountsResponse AccountStateDelta Application state delta. Application Application index and its parameters ApplicationLocalState Stores local state associated with an application. ApplicationParams Stores the global information associated with an application. ApplicationResponse ApplicationResponse ApplicationsResponse ApplicationsResponse ApplicationStateSchema Specifies maximums on the number of each type that may be stored. Asset Specifies both the unique identifier and the parameters for an asset AssetBalancesResponse AssetBalancesResponse AssetHolding Describes an asset held by an account. Definition: data/basics/userBalance.go : AssetHolding AssetParams AssetParams specifies the parameters for an asset. \\[apar\\] when part of an AssetConfig transaction. Definition: data/transactions/asset.go : AssetParams AssetResponse AssetResponse AssetsResponse AssetsResponse Block Block information. Definition: data/bookkeeping/block.go : Block BlockResponse BlockResponse BlockRewards Fields relating to rewards, BlockUpgradeState Fields relating to a protocol upgrade. BlockUpgradeVote Fields relating to voting for a protocol upgrade. BuildVersion BuildVersion CatchpointAbortResponse An catchpoint abort response. CatchpointStartResponse An catchpoint start response. CompileResponse CompileResponse DryrunRequest Request data type for dryrun endpoint. Given the Transactions and simulated ledger state upload, run TEAL scripts and return debugging information. DryrunResponse DryrunResponse DryrunSource DryrunSource is TEAL source text that gets uploaded, compiled, and inserted into transactions or application state. DryrunState Stores the TEAL eval step data DryrunTxnResult DryrunTxnResult contains any LogicSig or ApplicationCall program debug information and state updates from a dryrun. ErrorResponse An error response with optional data field. EvalDelta Represents a TEAL value delta. EvalDeltaKeyValue Key-value pairs for StateDelta. HealthCheck A health check response. MiniAssetHolding A simplified version of AssetHolding NodeStatusResponse NodeStatus contains the information about a node status PendingTransactionResponse Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details. PendingTransactionsResponse PendingTransactions is an array of signed transactions exactly as they were submitted. PostTransactionsResponse PostTransactionsResponse StateDelta Application state delta. StateSchema Represents a \\[apls\\] local-state or \\[apgs\\] global-state schema. These schemas determine how much storage may be used in a local-state or global-state for an application. The more space used, the larger minimum balance must be maintained in the account holding the data. SupplyResponse Supply represents the current supply of MicroAlgos in the system TealKeyValue Represents a key-value pair in an application store. TealKeyValueStore Represents a key-value store for use in an application. TealValue Represents a TEAL value. Transaction Contains all fields common to all transactions and serves as an envelope to all transactions type. Definition: data/transactions/signedtxn.go : SignedTxn data/transactions/transaction.go : Transaction TransactionApplication Fields for application transactions. Definition: data/transactions/application.go : ApplicationCallTxnFields TransactionAssetConfig Fields for asset allocation, re-configuration, and destruction. A zero value for asset-id indicates asset creation. A zero value for the params indicates asset destruction. Definition: data/transactions/asset.go : AssetConfigTxnFields TransactionAssetFreeze Fields for an asset freeze transaction. Definition: data/transactions/asset.go : AssetFreezeTxnFields TransactionAssetTransfer Fields for an asset transfer transaction. Definition: data/transactions/asset.go : AssetTransferTxnFields TransactionKeyreg Fields for a keyreg transaction. Definition: data/transactions/keyreg.go : KeyregTxnFields TransactionParametersResponse TransactionParams contains the parameters that help a client construct a new transaction. TransactionPayment Fields for a payment transaction. Definition: data/transactions/payment.go : PaymentTxnFields TransactionResponse TransactionResponse TransactionSignature Validation signature associated with some data. Only one of the signatures should be provided. TransactionSignatureLogicsig \\[lsig\\] Programatic transaction signature. Definition: data/transactions/logicsig.go TransactionSignatureMultisig \\[msig\\] structure holding multiple subsignatures. Definition: crypto/multisig.go : MultisigSig TransactionSignatureMultisigSubsignature TransactionSignatureMultisigSubsignature TransactionsResponse TransactionsResponse Version algod version information. Enums Account.SigTypeEnum Indicates what type of signature is used by this account, must be one of: * sig * msig * lsig OnCompletion \\[apan\\] defines the what additional actions occur with the transaction. Valid types: * noop * optin * closeout * clear * update * update * delete Transaction.TxTypeEnum \\[type\\] Indicates what type of transaction this is. Different types have different fields. Valid types, and where their fields are stored: * \\[pay\\] payment-transaction * \\[keyreg\\] keyreg-transaction * \\[acfg\\] asset-config-transaction * \\[axfer\\] asset-transfer-transaction * \\[afrz\\] asset-freeze-transaction * \\[appl\\] application-transaction"
  },
  "api/Algorand.V2.Model.MiniAssetHolding.html": {
    "href": "api/Algorand.V2.Model.MiniAssetHolding.html",
    "title": "Class MiniAssetHolding | Dotnet Algorand Documents",
    "keywords": "Class MiniAssetHolding A simplified version of AssetHolding Inheritance System.Object MiniAssetHolding Implements System.IEquatable < MiniAssetHolding > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class MiniAssetHolding : IEquatable<MiniAssetHolding>, IValidatableObject Constructors | Improve this Doc View Source MiniAssetHolding(String, Nullable<UInt64>, Nullable<Boolean>) Initializes a new instance of the MiniAssetHolding class. Declaration public MiniAssetHolding(string address = null, ulong? amount = default(ulong? ), bool? isFrozen = default(bool? )) Parameters Type Name Description System.String address address (required). System.Nullable < System.UInt64 > amount amount (required). System.Nullable < System.Boolean > isFrozen isFrozen (required). Properties | Improve this Doc View Source Address Gets or Sets Address Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public string Address { get; set; } Property Value Type Description System.String | Improve this Doc View Source Amount Gets or Sets Amount Declaration [DataMember(Name = \"amount\", EmitDefaultValue = false)] public ulong? Amount { get; set; } Property Value Type Description System.Nullable < System.UInt64 > | Improve this Doc View Source IsFrozen Gets or Sets IsFrozen Declaration [DataMember(Name = \"is-frozen\", EmitDefaultValue = false)] public bool? IsFrozen { get; set; } Property Value Type Description System.Nullable < System.Boolean > Methods | Improve this Doc View Source Equals(MiniAssetHolding) Returns true if MiniAssetHolding instances are equal Declaration public bool Equals(MiniAssetHolding input) Parameters Type Name Description MiniAssetHolding input Instance of MiniAssetHolding to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.NodeStatusResponse.html": {
    "href": "api/Algorand.V2.Model.NodeStatusResponse.html",
    "title": "Class NodeStatusResponse | Dotnet Algorand Documents",
    "keywords": "Class NodeStatusResponse NodeStatus contains the information about a node status Inheritance System.Object NodeStatusResponse Implements System.IEquatable < NodeStatusResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class NodeStatusResponse : IEquatable<NodeStatusResponse>, IValidatableObject Constructors | Improve this Doc View Source NodeStatusResponse() Initializes a new instance of the NodeStatusResponse class. Declaration [JsonConstructor] protected NodeStatusResponse() | Improve this Doc View Source NodeStatusResponse(Nullable<Int64>, Nullable<Int64>, String, String, Nullable<Int64>, Nullable<Boolean>, Nullable<Boolean>, Nullable<Int64>, String, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the NodeStatusResponse class. Declaration public NodeStatusResponse(long? catchupTime = default(long? ), long? lastRound = default(long? ), string lastVersion = null, string nextVersion = null, long? nextVersionRound = default(long? ), bool? nextVersionSupported = default(bool? ), bool? stoppedAtUnsupportedRound = default(bool? ), long? timeSinceLastRound = default(long? ), string lastCatchpoint = null, string catchpoint = null, long? catchpointTotalAccounts = default(long? ), long? catchpointProcessedAccounts = default(long? ), long? catchpointTotalBlocks = default(long? ), long? catchpointAcquiredBlocks = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > catchupTime CatchupTime in nanoseconds (required). System.Nullable < System.Int64 > lastRound LastRound indicates the last round seen (required). System.String lastVersion LastVersion indicates the last consensus version supported (required). System.String nextVersion NextVersion of consensus protocol to use (required). System.Nullable < System.Int64 > nextVersionRound NextVersionRound is the round at which the next consensus version will apply (required). System.Nullable < System.Boolean > nextVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node (required). System.Nullable < System.Boolean > stoppedAtUnsupportedRound StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress (required). System.Nullable < System.Int64 > timeSinceLastRound TimeSinceLastRound in nanoseconds (required). System.String lastCatchpoint The last catchpoint seen by the node. System.String catchpoint The current catchpoint that is being caught up to. System.Nullable < System.Int64 > catchpointTotalAccounts The total number of accounts included in the current catchpoint. System.Nullable < System.Int64 > catchpointProcessedAccounts The number of account from the current catchpoint that have been processed so far as part of the catchup. System.Nullable < System.Int64 > catchpointTotalBlocks The total number of blocks that are required to complete the current catchpoint catchup. System.Nullable < System.Int64 > catchpointAcquiredBlocks The number of blocks that have already been obtained by the node as part of the catchup. Properties | Improve this Doc View Source Catchpoint The current catchpoint that is being caught up to Declaration [DataMember(Name = \"catchpoint\", EmitDefaultValue = false)] public string Catchpoint { get; set; } Property Value Type Description System.String The current catchpoint that is being caught up to | Improve this Doc View Source CatchpointAcquiredBlocks The number of blocks that have already been obtained by the node as part of the catchup Declaration [DataMember(Name = \"catchpoint-acquired-blocks\", EmitDefaultValue = false)] public long? CatchpointAcquiredBlocks { get; set; } Property Value Type Description System.Nullable < System.Int64 > The number of blocks that have already been obtained by the node as part of the catchup | Improve this Doc View Source CatchpointProcessedAccounts The number of account from the current catchpoint that have been processed so far as part of the catchup Declaration [DataMember(Name = \"catchpoint-processed-accounts\", EmitDefaultValue = false)] public long? CatchpointProcessedAccounts { get; set; } Property Value Type Description System.Nullable < System.Int64 > The number of account from the current catchpoint that have been processed so far as part of the catchup | Improve this Doc View Source CatchpointTotalAccounts The total number of accounts included in the current catchpoint Declaration [DataMember(Name = \"catchpoint-total-accounts\", EmitDefaultValue = false)] public long? CatchpointTotalAccounts { get; set; } Property Value Type Description System.Nullable < System.Int64 > The total number of accounts included in the current catchpoint | Improve this Doc View Source CatchpointTotalBlocks The total number of blocks that are required to complete the current catchpoint catchup Declaration [DataMember(Name = \"catchpoint-total-blocks\", EmitDefaultValue = false)] public long? CatchpointTotalBlocks { get; set; } Property Value Type Description System.Nullable < System.Int64 > The total number of blocks that are required to complete the current catchpoint catchup | Improve this Doc View Source CatchupTime CatchupTime in nanoseconds Declaration [DataMember(Name = \"catchup-time\", EmitDefaultValue = false)] public long? CatchupTime { get; set; } Property Value Type Description System.Nullable < System.Int64 > CatchupTime in nanoseconds | Improve this Doc View Source LastCatchpoint The last catchpoint seen by the node Declaration [DataMember(Name = \"last-catchpoint\", EmitDefaultValue = false)] public string LastCatchpoint { get; set; } Property Value Type Description System.String The last catchpoint seen by the node | Improve this Doc View Source LastRound LastRound indicates the last round seen Declaration [DataMember(Name = \"last-round\", EmitDefaultValue = false)] public long? LastRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > LastRound indicates the last round seen | Improve this Doc View Source LastVersion LastVersion indicates the last consensus version supported Declaration [DataMember(Name = \"last-version\", EmitDefaultValue = false)] public string LastVersion { get; set; } Property Value Type Description System.String LastVersion indicates the last consensus version supported | Improve this Doc View Source NextVersion NextVersion of consensus protocol to use Declaration [DataMember(Name = \"next-version\", EmitDefaultValue = false)] public string NextVersion { get; set; } Property Value Type Description System.String NextVersion of consensus protocol to use | Improve this Doc View Source NextVersionRound NextVersionRound is the round at which the next consensus version will apply Declaration [DataMember(Name = \"next-version-round\", EmitDefaultValue = false)] public long? NextVersionRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > NextVersionRound is the round at which the next consensus version will apply | Improve this Doc View Source NextVersionSupported NextVersionSupported indicates whether the next consensus version is supported by this node Declaration [DataMember(Name = \"next-version-supported\", EmitDefaultValue = false)] public bool? NextVersionSupported { get; set; } Property Value Type Description System.Nullable < System.Boolean > NextVersionSupported indicates whether the next consensus version is supported by this node | Improve this Doc View Source StoppedAtUnsupportedRound StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress Declaration [DataMember(Name = \"stopped-at-unsupported-round\", EmitDefaultValue = false)] public bool? StoppedAtUnsupportedRound { get; set; } Property Value Type Description System.Nullable < System.Boolean > StoppedAtUnsupportedRound indicates that the node does not support the new rounds and has stopped making progress | Improve this Doc View Source TimeSinceLastRound TimeSinceLastRound in nanoseconds Declaration [DataMember(Name = \"time-since-last-round\", EmitDefaultValue = false)] public long? TimeSinceLastRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > TimeSinceLastRound in nanoseconds Methods | Improve this Doc View Source Equals(NodeStatusResponse) Returns true if NodeStatusResponse instances are equal Declaration public bool Equals(NodeStatusResponse input) Parameters Type Name Description NodeStatusResponse input Instance of NodeStatusResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.OnCompletion.html": {
    "href": "api/Algorand.V2.Model.OnCompletion.html",
    "title": "Enum OnCompletion | Dotnet Algorand Documents",
    "keywords": "Enum OnCompletion \\[apan\\] defines the what additional actions occur with the transaction. Valid types: * noop * optin * closeout * clear * update * update * delete Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax public enum OnCompletion Fields Name Description Clear Enum Clear for value: clear Closeout Enum Closeout for value: closeout Delete Enum Delete for value: delete Noop Enum Noop for value: noop Optin Enum Optin for value: optin Update Enum Update for value: update"
  },
  "api/Algorand.V2.Model.PendingTransactionResponse.html": {
    "href": "api/Algorand.V2.Model.PendingTransactionResponse.html",
    "title": "Class PendingTransactionResponse | Dotnet Algorand Documents",
    "keywords": "Class PendingTransactionResponse Details about a pending transaction. If the transaction was recently confirmed, includes confirmation details like the round and reward details. Inheritance System.Object PendingTransactionResponse Implements System.IEquatable < PendingTransactionResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class PendingTransactionResponse : IEquatable<PendingTransactionResponse>, IValidatableObject Constructors | Improve this Doc View Source PendingTransactionResponse() Initializes a new instance of the PendingTransactionResponse class. Declaration [JsonConstructor] protected PendingTransactionResponse() | Improve this Doc View Source PendingTransactionResponse(Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, String, Nullable<Int64>, Nullable<Int64>, List<AccountStateDelta>, StateDelta, Object) Initializes a new instance of the PendingTransactionResponse class. Declaration public PendingTransactionResponse(long? assetIndex = default(long? ), long? applicationIndex = default(long? ), long? closeRewards = default(long? ), long? closingAmount = default(long? ), long? confirmedRound = default(long? ), string poolError = null, long? receiverRewards = default(long? ), long? senderRewards = default(long? ), List<AccountStateDelta> localStateDelta = null, StateDelta globalStateDelta = null, object txn = null) Parameters Type Name Description System.Nullable < System.Int64 > assetIndex The asset index if the transaction was found and it created an asset.. System.Nullable < System.Int64 > applicationIndex The application index if the transaction was found and it created an application.. System.Nullable < System.Int64 > closeRewards Rewards in microalgos applied to the close remainder to account.. System.Nullable < System.Int64 > closingAmount Closing amount for the transaction.. System.Nullable < System.Int64 > confirmedRound The round where this transaction was confirmed, if present.. System.String poolError Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened). An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error. (required). System.Nullable < System.Int64 > receiverRewards Rewards in microalgos applied to the receiver account.. System.Nullable < System.Int64 > senderRewards Rewards in microalgos applied to the sender account.. System.Collections.Generic.List < AccountStateDelta > localStateDelta \\[ld\\] Local state key/value changes for the application being executed by this transaction.. StateDelta globalStateDelta \\[gd\\] Global state key/value changes for the application being executed by this transaction.. System.Object txn The raw signed transaction. (required). Properties | Improve this Doc View Source ApplicationIndex The application index if the transaction was found and it created an application. Declaration [DataMember(Name = \"application-index\", EmitDefaultValue = false)] public long? ApplicationIndex { get; set; } Property Value Type Description System.Nullable < System.Int64 > The application index if the transaction was found and it created an application. | Improve this Doc View Source AssetIndex The asset index if the transaction was found and it created an asset. Declaration [DataMember(Name = \"asset-index\", EmitDefaultValue = false)] public long? AssetIndex { get; set; } Property Value Type Description System.Nullable < System.Int64 > The asset index if the transaction was found and it created an asset. | Improve this Doc View Source CloseRewards Rewards in microalgos applied to the close remainder to account. Declaration [DataMember(Name = \"close-rewards\", EmitDefaultValue = false)] public long? CloseRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > Rewards in microalgos applied to the close remainder to account. | Improve this Doc View Source ClosingAmount Closing amount for the transaction. Declaration [DataMember(Name = \"closing-amount\", EmitDefaultValue = false)] public long? ClosingAmount { get; set; } Property Value Type Description System.Nullable < System.Int64 > Closing amount for the transaction. | Improve this Doc View Source ConfirmedRound The round where this transaction was confirmed, if present. Declaration [DataMember(Name = \"confirmed-round\", EmitDefaultValue = false)] public long? ConfirmedRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > The round where this transaction was confirmed, if present. | Improve this Doc View Source GlobalStateDelta \\[gd\\] Global state key/value changes for the application being executed by this transaction. Declaration [DataMember(Name = \"global-state-delta\", EmitDefaultValue = false)] public StateDelta GlobalStateDelta { get; set; } Property Value Type Description StateDelta \\[gd\\] Global state key/value changes for the application being executed by this transaction. | Improve this Doc View Source LocalStateDelta \\[ld\\] Local state key/value changes for the application being executed by this transaction. Declaration [DataMember(Name = \"local-state-delta\", EmitDefaultValue = false)] public List<AccountStateDelta> LocalStateDelta { get; set; } Property Value Type Description System.Collections.Generic.List < AccountStateDelta > \\[ld\\] Local state key/value changes for the application being executed by this transaction. | Improve this Doc View Source PoolError Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened). An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error. Declaration [DataMember(Name = \"pool-error\", EmitDefaultValue = false)] public string PoolError { get; set; } Property Value Type Description System.String Indicates that the transaction was kicked out of this node's transaction pool (and specifies why that happened). An empty string indicates the transaction wasn't kicked out of this node's txpool due to an error. | Improve this Doc View Source ReceiverRewards Rewards in microalgos applied to the receiver account. Declaration [DataMember(Name = \"receiver-rewards\", EmitDefaultValue = false)] public long? ReceiverRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > Rewards in microalgos applied to the receiver account. | Improve this Doc View Source SenderRewards Rewards in microalgos applied to the sender account. Declaration [DataMember(Name = \"sender-rewards\", EmitDefaultValue = false)] public long? SenderRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > Rewards in microalgos applied to the sender account. | Improve this Doc View Source Txn The raw signed transaction. Declaration [DataMember(Name = \"txn\", EmitDefaultValue = false)] public object Txn { get; set; } Property Value Type Description System.Object The raw signed transaction. Methods | Improve this Doc View Source Equals(PendingTransactionResponse) Returns true if PendingTransactionResponse instances are equal Declaration public bool Equals(PendingTransactionResponse input) Parameters Type Name Description PendingTransactionResponse input Instance of PendingTransactionResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.PendingTransactionsResponse.html": {
    "href": "api/Algorand.V2.Model.PendingTransactionsResponse.html",
    "title": "Class PendingTransactionsResponse | Dotnet Algorand Documents",
    "keywords": "Class PendingTransactionsResponse PendingTransactions is an array of signed transactions exactly as they were submitted. Inheritance System.Object PendingTransactionsResponse Implements System.IEquatable < PendingTransactionsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class PendingTransactionsResponse : IEquatable<PendingTransactionsResponse>, IValidatableObject Constructors | Improve this Doc View Source PendingTransactionsResponse() Initializes a new instance of the PendingTransactionsResponse class. Declaration [JsonConstructor] protected PendingTransactionsResponse() | Improve this Doc View Source PendingTransactionsResponse(List<Object>, Nullable<Int64>) Initializes a new instance of the PendingTransactionsResponse class. Declaration public PendingTransactionsResponse(List<object> topTransactions = null, long? totalTransactions = default(long? )) Parameters Type Name Description System.Collections.Generic.List < System.Object > topTransactions An array of signed transaction objects. (required). System.Nullable < System.Int64 > totalTransactions Total number of transactions in the pool. (required). Properties | Improve this Doc View Source TopTransactions An array of signed transaction objects. Declaration [DataMember(Name = \"top-transactions\", EmitDefaultValue = false)] public List<object> TopTransactions { get; set; } Property Value Type Description System.Collections.Generic.List < System.Object > An array of signed transaction objects. | Improve this Doc View Source TotalTransactions Total number of transactions in the pool. Declaration [DataMember(Name = \"total-transactions\", EmitDefaultValue = false)] public long? TotalTransactions { get; set; } Property Value Type Description System.Nullable < System.Int64 > Total number of transactions in the pool. Methods | Improve this Doc View Source Equals(PendingTransactionsResponse) Returns true if PendingTransactionsResponse instances are equal Declaration public bool Equals(PendingTransactionsResponse input) Parameters Type Name Description PendingTransactionsResponse input Instance of PendingTransactionsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.PostTransactionsResponse.html": {
    "href": "api/Algorand.V2.Model.PostTransactionsResponse.html",
    "title": "Class PostTransactionsResponse | Dotnet Algorand Documents",
    "keywords": "Class PostTransactionsResponse PostTransactionsResponse Inheritance System.Object PostTransactionsResponse Implements System.IEquatable < PostTransactionsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class PostTransactionsResponse : IEquatable<PostTransactionsResponse>, IValidatableObject Constructors | Improve this Doc View Source PostTransactionsResponse() Initializes a new instance of the PostTransactionsResponse class. Declaration [JsonConstructor] protected PostTransactionsResponse() | Improve this Doc View Source PostTransactionsResponse(String) Initializes a new instance of the PostTransactionsResponse class. Declaration public PostTransactionsResponse(string txId = null) Parameters Type Name Description System.String txId encoding of the transaction hash. (required). Properties | Improve this Doc View Source TxId encoding of the transaction hash. Declaration [DataMember(Name = \"txId\", EmitDefaultValue = false)] public string TxId { get; set; } Property Value Type Description System.String encoding of the transaction hash. Methods | Improve this Doc View Source Equals(PostTransactionsResponse) Returns true if PostTransactionsResponse instances are equal Declaration public bool Equals(PostTransactionsResponse input) Parameters Type Name Description PostTransactionsResponse input Instance of PostTransactionsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.StateDelta.html": {
    "href": "api/Algorand.V2.Model.StateDelta.html",
    "title": "Class StateDelta | Dotnet Algorand Documents",
    "keywords": "Class StateDelta Application state delta. Inheritance System.Object System.Collections.Generic.List < EvalDeltaKeyValue > StateDelta Implements System.Collections.Generic.IList < EvalDeltaKeyValue > System.Collections.Generic.ICollection < EvalDeltaKeyValue > System.Collections.Generic.IReadOnlyList < EvalDeltaKeyValue > System.Collections.Generic.IReadOnlyCollection < EvalDeltaKeyValue > System.Collections.Generic.IEnumerable < EvalDeltaKeyValue > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable < StateDelta > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Add(Algorand.V2.Model.EvalDeltaKeyValue) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.AddRange(System.Collections.Generic.IEnumerable<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.AsReadOnly() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.BinarySearch(Algorand.V2.Model.EvalDeltaKeyValue) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.BinarySearch(Algorand.V2.Model.EvalDeltaKeyValue, System.Collections.Generic.IComparer<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.BinarySearch(System.Int32, System.Int32, Algorand.V2.Model.EvalDeltaKeyValue, System.Collections.Generic.IComparer<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Clear() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Contains(Algorand.V2.Model.EvalDeltaKeyValue) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.ConvertAll<TOutput>(System.Converter<Algorand.V2.Model.EvalDeltaKeyValue, TOutput>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.CopyTo(Algorand.V2.Model.EvalDeltaKeyValue[]) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.CopyTo(Algorand.V2.Model.EvalDeltaKeyValue[], System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.CopyTo(System.Int32, Algorand.V2.Model.EvalDeltaKeyValue[], System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Exists(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Find(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindAll(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindIndex(System.Int32, System.Int32, System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindIndex(System.Int32, System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindIndex(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindLast(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindLastIndex(System.Int32, System.Int32, System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindLastIndex(System.Int32, System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.FindLastIndex(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.ForEach(System.Action<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.GetEnumerator() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.IndexOf(Algorand.V2.Model.EvalDeltaKeyValue) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.IndexOf(Algorand.V2.Model.EvalDeltaKeyValue, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.IndexOf(Algorand.V2.Model.EvalDeltaKeyValue, System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Insert(System.Int32, Algorand.V2.Model.EvalDeltaKeyValue) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.LastIndexOf(Algorand.V2.Model.EvalDeltaKeyValue) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.LastIndexOf(Algorand.V2.Model.EvalDeltaKeyValue, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.LastIndexOf(Algorand.V2.Model.EvalDeltaKeyValue, System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Remove(Algorand.V2.Model.EvalDeltaKeyValue) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.RemoveAll(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.RemoveAt(System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Reverse() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Sort() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Sort(System.Collections.Generic.IComparer<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Sort(System.Comparison<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.Generic.IEnumerable<Algorand.V2.Model.EvalDeltaKeyValue>.GetEnumerator() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.ToArray() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.TrimExcess() System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.TrueForAll(System.Predicate<Algorand.V2.Model.EvalDeltaKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Capacity System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Count System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.Item[System.Int32] System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.Generic.ICollection<Algorand.V2.Model.EvalDeltaKeyValue>.IsReadOnly System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<Algorand.V2.Model.EvalDeltaKeyValue>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class StateDelta : List<EvalDeltaKeyValue>, IList<EvalDeltaKeyValue>, ICollection<EvalDeltaKeyValue>, IReadOnlyList<EvalDeltaKeyValue>, IReadOnlyCollection<EvalDeltaKeyValue>, IEnumerable<EvalDeltaKeyValue>, IList, ICollection, IEnumerable, IEquatable<StateDelta>, IValidatableObject Constructors | Improve this Doc View Source StateDelta() Initializes a new instance of the StateDelta class. Declaration [JsonConstructor] public StateDelta() Methods | Improve this Doc View Source Equals(StateDelta) Returns true if StateDelta instances are equal Declaration public bool Equals(StateDelta input) Parameters Type Name Description StateDelta input Instance of StateDelta to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.StateSchema.html": {
    "href": "api/Algorand.V2.Model.StateSchema.html",
    "title": "Class StateSchema | Dotnet Algorand Documents",
    "keywords": "Class StateSchema Represents a \\[apls\\] local-state or \\[apgs\\] global-state schema. These schemas determine how much storage may be used in a local-state or global-state for an application. The more space used, the larger minimum balance must be maintained in the account holding the data. Inheritance System.Object StateSchema Implements System.IEquatable < StateSchema > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class StateSchema : IEquatable<StateSchema>, IValidatableObject Constructors | Improve this Doc View Source StateSchema(Nullable<UInt64>, Nullable<UInt64>) Initializes a new instance of the StateSchema class. Declaration public StateSchema(ulong? numByteSlice, ulong? numUint) Parameters Type Name Description System.Nullable < System.UInt64 > numByteSlice Maximum number of TEAL byte slices that may be stored in the key/value store. (required). System.Nullable < System.UInt64 > numUint Maximum number of TEAL uints that may be stored in the key/value store. (required). Properties | Improve this Doc View Source NumByteSlice Maximum number of TEAL byte slices that may be stored in the key/value store. Declaration [DataMember(Name = \"num-byte-slice\", EmitDefaultValue = false)] public ulong? NumByteSlice { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Maximum number of TEAL byte slices that may be stored in the key/value store. | Improve this Doc View Source NumUint Maximum number of TEAL uints that may be stored in the key/value store. Declaration [DataMember(Name = \"num-uint\", EmitDefaultValue = false)] public ulong? NumUint { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Maximum number of TEAL uints that may be stored in the key/value store. Methods | Improve this Doc View Source Equals(StateSchema) Returns true if StateSchema instances are equal Declaration public bool Equals(StateSchema input) Parameters Type Name Description StateSchema input Instance of StateSchema to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.SupplyResponse.html": {
    "href": "api/Algorand.V2.Model.SupplyResponse.html",
    "title": "Class SupplyResponse | Dotnet Algorand Documents",
    "keywords": "Class SupplyResponse Supply represents the current supply of MicroAlgos in the system Inheritance System.Object SupplyResponse Implements System.IEquatable < SupplyResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class SupplyResponse : IEquatable<SupplyResponse>, IValidatableObject Constructors | Improve this Doc View Source SupplyResponse() Initializes a new instance of the SupplyResponse class. Declaration [JsonConstructor] protected SupplyResponse() | Improve this Doc View Source SupplyResponse(Nullable<Int64>, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the SupplyResponse class. Declaration public SupplyResponse(long? currentRound = default(long? ), long? onlineMoney = default(long? ), long? totalMoney = default(long? )) Parameters Type Name Description System.Nullable < System.Int64 > currentRound Round (required). System.Nullable < System.Int64 > onlineMoney OnlineMoney (required). System.Nullable < System.Int64 > totalMoney TotalMoney (required). Properties | Improve this Doc View Source CurrentRound Round Declaration [DataMember(Name = \"current_round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round | Improve this Doc View Source OnlineMoney OnlineMoney Declaration [DataMember(Name = \"online-money\", EmitDefaultValue = false)] public long? OnlineMoney { get; set; } Property Value Type Description System.Nullable < System.Int64 > OnlineMoney | Improve this Doc View Source TotalMoney TotalMoney Declaration [DataMember(Name = \"total-money\", EmitDefaultValue = false)] public long? TotalMoney { get; set; } Property Value Type Description System.Nullable < System.Int64 > TotalMoney Methods | Improve this Doc View Source Equals(SupplyResponse) Returns true if SupplyResponse instances are equal Declaration public bool Equals(SupplyResponse input) Parameters Type Name Description SupplyResponse input Instance of SupplyResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TealKeyValue.html": {
    "href": "api/Algorand.V2.Model.TealKeyValue.html",
    "title": "Class TealKeyValue | Dotnet Algorand Documents",
    "keywords": "Class TealKeyValue Represents a key-value pair in an application store. Inheritance System.Object TealKeyValue Implements System.IEquatable < TealKeyValue > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TealKeyValue : IEquatable<TealKeyValue>, IValidatableObject Constructors | Improve this Doc View Source TealKeyValue() Initializes a new instance of the TealKeyValue class. Declaration [JsonConstructor] protected TealKeyValue() | Improve this Doc View Source TealKeyValue(String, TealValue) Initializes a new instance of the TealKeyValue class. Declaration public TealKeyValue(string key = null, TealValue value = null) Parameters Type Name Description System.String key key (required). TealValue value value (required). Properties | Improve this Doc View Source Key Gets or Sets Key Declaration [DataMember(Name = \"key\", EmitDefaultValue = false)] public string Key { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value Gets or Sets Value Declaration [DataMember(Name = \"value\", EmitDefaultValue = false)] public TealValue Value { get; set; } Property Value Type Description TealValue Methods | Improve this Doc View Source Equals(TealKeyValue) Returns true if TealKeyValue instances are equal Declaration public bool Equals(TealKeyValue input) Parameters Type Name Description TealKeyValue input Instance of TealKeyValue to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TealKeyValueStore.html": {
    "href": "api/Algorand.V2.Model.TealKeyValueStore.html",
    "title": "Class TealKeyValueStore | Dotnet Algorand Documents",
    "keywords": "Class TealKeyValueStore Represents a key-value store for use in an application. Inheritance System.Object System.Collections.Generic.List < TealKeyValue > TealKeyValueStore Implements System.Collections.Generic.IList < TealKeyValue > System.Collections.Generic.ICollection < TealKeyValue > System.Collections.Generic.IReadOnlyList < TealKeyValue > System.Collections.Generic.IReadOnlyCollection < TealKeyValue > System.Collections.Generic.IEnumerable < TealKeyValue > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable < TealKeyValueStore > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.get_Item(System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Add(Algorand.V2.Model.TealKeyValue) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.AddRange(System.Collections.Generic.IEnumerable<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.AsReadOnly() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.BinarySearch(Algorand.V2.Model.TealKeyValue) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.BinarySearch(Algorand.V2.Model.TealKeyValue, System.Collections.Generic.IComparer<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.BinarySearch(System.Int32, System.Int32, Algorand.V2.Model.TealKeyValue, System.Collections.Generic.IComparer<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Clear() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Contains(Algorand.V2.Model.TealKeyValue) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.ConvertAll<TOutput>(System.Converter<Algorand.V2.Model.TealKeyValue, TOutput>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.CopyTo(Algorand.V2.Model.TealKeyValue[]) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.CopyTo(Algorand.V2.Model.TealKeyValue[], System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.CopyTo(System.Int32, Algorand.V2.Model.TealKeyValue[], System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Exists(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Find(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindAll(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindIndex(System.Int32, System.Int32, System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindIndex(System.Int32, System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindIndex(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindLast(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindLastIndex(System.Int32, System.Int32, System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindLastIndex(System.Int32, System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.FindLastIndex(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.ForEach(System.Action<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.GetEnumerator() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.GetRange(System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.IndexOf(Algorand.V2.Model.TealKeyValue) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.IndexOf(Algorand.V2.Model.TealKeyValue, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.IndexOf(Algorand.V2.Model.TealKeyValue, System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Insert(System.Int32, Algorand.V2.Model.TealKeyValue) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.LastIndexOf(Algorand.V2.Model.TealKeyValue) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.LastIndexOf(Algorand.V2.Model.TealKeyValue, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.LastIndexOf(Algorand.V2.Model.TealKeyValue, System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Remove(Algorand.V2.Model.TealKeyValue) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.RemoveAll(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.RemoveAt(System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.RemoveRange(System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Reverse() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Reverse(System.Int32, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Sort() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Sort(System.Collections.Generic.IComparer<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Sort(System.Comparison<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.Generic.IEnumerable<Algorand.V2.Model.TealKeyValue>.GetEnumerator() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IEnumerable.GetEnumerator() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.Add(System.Object) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.Contains(System.Object) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.IndexOf(System.Object) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.Remove(System.Object) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.ToArray() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.TrimExcess() System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.TrueForAll(System.Predicate<Algorand.V2.Model.TealKeyValue>) System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Capacity System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Count System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.Item[System.Int32] System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.Generic.ICollection<Algorand.V2.Model.TealKeyValue>.IsReadOnly System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.ICollection.IsSynchronized System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.ICollection.SyncRoot System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.IsFixedSize System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.IsReadOnly System.Collections.Generic.List<Algorand.V2.Model.TealKeyValue>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TealKeyValueStore : List<TealKeyValue>, IList<TealKeyValue>, ICollection<TealKeyValue>, IReadOnlyList<TealKeyValue>, IReadOnlyCollection<TealKeyValue>, IEnumerable<TealKeyValue>, IList, ICollection, IEnumerable, IEquatable<TealKeyValueStore>, IValidatableObject Constructors | Improve this Doc View Source TealKeyValueStore() Initializes a new instance of the TealKeyValueStore class. Declaration [JsonConstructor] public TealKeyValueStore() Methods | Improve this Doc View Source Equals(TealKeyValueStore) Returns true if TealKeyValueStore instances are equal Declaration public bool Equals(TealKeyValueStore input) Parameters Type Name Description TealKeyValueStore input Instance of TealKeyValueStore to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TealValue.html": {
    "href": "api/Algorand.V2.Model.TealValue.html",
    "title": "Class TealValue | Dotnet Algorand Documents",
    "keywords": "Class TealValue Represents a TEAL value. Inheritance System.Object TealValue Implements System.IEquatable < TealValue > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TealValue : IEquatable<TealValue>, IValidatableObject Constructors | Improve this Doc View Source TealValue() Initializes a new instance of the TealValue class. Declaration [JsonConstructor] protected TealValue() | Improve this Doc View Source TealValue(Nullable<Int64>, String, Nullable<UInt64>) Initializes a new instance of the TealValue class. Declaration public TealValue(long? type = default(long? ), string bytes = null, ulong? _uint = default(ulong? )) Parameters Type Name Description System.Nullable < System.Int64 > type \\[tt\\] value type. (required). System.String bytes \\[tb\\] bytes value. (required). System.Nullable < System.UInt64 > _uint \\[ui\\] uint value. (required). Properties | Improve this Doc View Source Bytes \\[tb\\] bytes value. Declaration [DataMember(Name = \"bytes\", EmitDefaultValue = false)] public string Bytes { get; set; } Property Value Type Description System.String \\[tb\\] bytes value. | Improve this Doc View Source Type \\[tt\\] value type. Declaration [DataMember(Name = \"type\", EmitDefaultValue = false)] public long? Type { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[tt\\] value type. | Improve this Doc View Source Uint \\[ui\\] uint value. Declaration [DataMember(Name = \"uint\", EmitDefaultValue = false)] public ulong? Uint { get; set; } Property Value Type Description System.Nullable < System.UInt64 > \\[ui\\] uint value. Methods | Improve this Doc View Source Equals(TealValue) Returns true if TealValue instances are equal Declaration public bool Equals(TealValue input) Parameters Type Name Description TealValue input Instance of TealValue to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.Transaction.html": {
    "href": "api/Algorand.V2.Model.Transaction.html",
    "title": "Class Transaction | Dotnet Algorand Documents",
    "keywords": "Class Transaction Contains all fields common to all transactions and serves as an envelope to all transactions type. Definition: data/transactions/signedtxn.go : SignedTxn data/transactions/transaction.go : Transaction Inheritance System.Object Transaction Implements System.IEquatable < Transaction > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class Transaction : IEquatable<Transaction>, IValidatableObject Constructors | Improve this Doc View Source Transaction(TransactionApplication, TransactionAssetConfig, TransactionAssetFreeze, TransactionAssetTransfer, String, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Byte[], String, StateDelta, Byte[], String, Nullable<Int64>, TransactionKeyreg, Nullable<Int64>, Byte[], List<AccountStateDelta>, Byte[], TransactionPayment, Nullable<Int64>, String, Nullable<Int64>, String, Nullable<Int64>, TransactionSignature, Transaction.TxTypeEnum) Initializes a new instance of the Transaction class. Declaration public Transaction(TransactionApplication applicationTransaction = null, TransactionAssetConfig assetConfigTransaction = null, TransactionAssetFreeze assetFreezeTransaction = null, TransactionAssetTransfer assetTransferTransaction = null, string authAddr = null, long? closeRewards = default(long? ), long? closingAmount = default(long? ), long? confirmedRound = default(long? ), long? createdApplicationIndex = default(long? ), long? createdAssetIndex = default(long? ), long? fee = default(long? ), long? firstValid = default(long? ), byte[] genesisHash = null, string genesisId = null, StateDelta globalStateDelta = null, byte[] group = null, string id = null, long? intraRoundOffset = default(long? ), TransactionKeyreg keyregTransaction = null, long? lastValid = default(long? ), byte[] lease = null, List<AccountStateDelta> localStateDelta = null, byte[] note = null, TransactionPayment paymentTransaction = null, long? receiverRewards = default(long? ), string rekeyTo = null, long? roundTime = default(long? ), string sender = null, long? senderRewards = default(long? ), TransactionSignature signature = null, Transaction.TxTypeEnum txType = (Transaction.TxTypeEnum)0) Parameters Type Name Description TransactionApplication applicationTransaction applicationTransaction. TransactionAssetConfig assetConfigTransaction assetConfigTransaction. TransactionAssetFreeze assetFreezeTransaction assetFreezeTransaction. TransactionAssetTransfer assetTransferTransaction assetTransferTransaction. System.String authAddr \\[sgnr\\] The address used to sign the transaction. This is used for rekeyed accounts to indicate that the sender address did not sign the transaction.. System.Nullable < System.Int64 > closeRewards \\[rc\\] rewards applied to close-remainder-to account.. System.Nullable < System.Int64 > closingAmount \\[ca\\] closing amount for transaction.. System.Nullable < System.Int64 > confirmedRound Round when the transaction was confirmed.. System.Nullable < System.Int64 > createdApplicationIndex Specifies an application index (ID) if an application was created with this transaction.. System.Nullable < System.Int64 > createdAssetIndex Specifies an asset index (ID) if an asset was created with this transaction.. System.Nullable < System.Int64 > fee \\[fee\\] Transaction fee. (required). System.Nullable < System.Int64 > firstValid \\[fv\\] First valid round for this transaction. (required). System.Byte [] genesisHash \\[gh\\] Hash of genesis block.. System.String genesisId \\[gen\\] genesis block ID.. StateDelta globalStateDelta globalStateDelta. System.Byte [] group \\[grp\\] Base64 encoded byte array of a sha512/256 digest. When present indicates that this transaction is part of a transaction group and the value is the sha512/256 hash of the transactions in that group.. System.String id Transaction ID (required). System.Nullable < System.Int64 > intraRoundOffset Offset into the round where this transaction was confirmed.. TransactionKeyreg keyregTransaction keyregTransaction. System.Nullable < System.Int64 > lastValid \\[lv\\] Last valid round for this transaction. (required). System.Byte [] lease \\[lx\\] Base64 encoded 32-byte array. Lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed.. System.Collections.Generic.List < AccountStateDelta > localStateDelta \\[ld\\] Local state key/value changes for the application being executed by this transaction.. System.Byte [] note \\[note\\] Free form data.. TransactionPayment paymentTransaction paymentTransaction. System.Nullable < System.Int64 > receiverRewards \\[rr\\] rewards applied to receiver account.. System.String rekeyTo \\[rekey\\] when included in a valid transaction, the accounts auth addr will be updated with this value and future signatures must be signed with the key represented by this address.. System.Nullable < System.Int64 > roundTime Time when the block this transaction is in was confirmed.. System.String sender \\[snd\\] Sender's address. (required). System.Nullable < System.Int64 > senderRewards \\[rs\\] rewards applied to sender account.. TransactionSignature signature signature (required). Transaction.TxTypeEnum txType \\[type\\] Indicates what type of transaction this is. Different types have different fields. Valid types, and where their fields are stored: * \\[pay\\] payment-transaction * \\[keyreg\\] keyreg-transaction * \\[acfg\\] asset-config-transaction * \\[axfer\\] asset-transfer-transaction * \\[afrz\\] asset-freeze-transaction * \\[appl\\] application-transaction (required). Properties | Improve this Doc View Source ApplicationTransaction Gets or Sets ApplicationTransaction Declaration [DataMember(Name = \"application-transaction\", EmitDefaultValue = false)] public TransactionApplication ApplicationTransaction { get; set; } Property Value Type Description TransactionApplication | Improve this Doc View Source AssetConfigTransaction Gets or Sets AssetConfigTransaction Declaration [DataMember(Name = \"asset-config-transaction\", EmitDefaultValue = false)] public TransactionAssetConfig AssetConfigTransaction { get; set; } Property Value Type Description TransactionAssetConfig | Improve this Doc View Source AssetFreezeTransaction Gets or Sets AssetFreezeTransaction Declaration [DataMember(Name = \"asset-freeze-transaction\", EmitDefaultValue = false)] public TransactionAssetFreeze AssetFreezeTransaction { get; set; } Property Value Type Description TransactionAssetFreeze | Improve this Doc View Source AssetTransferTransaction Gets or Sets AssetTransferTransaction Declaration [DataMember(Name = \"asset-transfer-transaction\", EmitDefaultValue = false)] public TransactionAssetTransfer AssetTransferTransaction { get; set; } Property Value Type Description TransactionAssetTransfer | Improve this Doc View Source AuthAddr \\[sgnr\\] The address used to sign the transaction. This is used for rekeyed accounts to indicate that the sender address did not sign the transaction. Declaration [DataMember(Name = \"auth-addr\", EmitDefaultValue = false)] public string AuthAddr { get; set; } Property Value Type Description System.String \\[sgnr\\] The address used to sign the transaction. This is used for rekeyed accounts to indicate that the sender address did not sign the transaction. | Improve this Doc View Source CloseRewards \\[rc\\] rewards applied to close-remainder-to account. Declaration [DataMember(Name = \"close-rewards\", EmitDefaultValue = false)] public long? CloseRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[rc\\] rewards applied to close-remainder-to account. | Improve this Doc View Source ClosingAmount \\[ca\\] closing amount for transaction. Declaration [DataMember(Name = \"closing-amount\", EmitDefaultValue = false)] public long? ClosingAmount { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[ca\\] closing amount for transaction. | Improve this Doc View Source ConfirmedRound Round when the transaction was confirmed. Declaration [DataMember(Name = \"confirmed-round\", EmitDefaultValue = false)] public long? ConfirmedRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round when the transaction was confirmed. | Improve this Doc View Source CreatedApplicationIndex Specifies an application index (ID) if an application was created with this transaction. Declaration [DataMember(Name = \"created-application-index\", EmitDefaultValue = false)] public long? CreatedApplicationIndex { get; set; } Property Value Type Description System.Nullable < System.Int64 > Specifies an application index (ID) if an application was created with this transaction. | Improve this Doc View Source CreatedAssetIndex Specifies an asset index (ID) if an asset was created with this transaction. Declaration [DataMember(Name = \"created-asset-index\", EmitDefaultValue = false)] public long? CreatedAssetIndex { get; set; } Property Value Type Description System.Nullable < System.Int64 > Specifies an asset index (ID) if an asset was created with this transaction. | Improve this Doc View Source Fee \\[fee\\] Transaction fee. Declaration [DataMember(Name = \"fee\", EmitDefaultValue = false)] public long? Fee { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[fee\\] Transaction fee. | Improve this Doc View Source FirstValid \\[fv\\] First valid round for this transaction. Declaration [DataMember(Name = \"first-valid\", EmitDefaultValue = false)] public long? FirstValid { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[fv\\] First valid round for this transaction. | Improve this Doc View Source GenesisHash \\[gh\\] Hash of genesis block. Declaration [DataMember(Name = \"genesis-hash\", EmitDefaultValue = false)] public byte[] GenesisHash { get; set; } Property Value Type Description System.Byte [] \\[gh\\] Hash of genesis block. | Improve this Doc View Source GenesisId \\[gen\\] genesis block ID. Declaration [DataMember(Name = \"genesis-id\", EmitDefaultValue = false)] public string GenesisId { get; set; } Property Value Type Description System.String \\[gen\\] genesis block ID. | Improve this Doc View Source GlobalStateDelta Gets or Sets GlobalStateDelta Declaration [DataMember(Name = \"global-state-delta\", EmitDefaultValue = false)] public StateDelta GlobalStateDelta { get; set; } Property Value Type Description StateDelta | Improve this Doc View Source Group \\[grp\\] Base64 encoded byte array of a sha512/256 digest. When present indicates that this transaction is part of a transaction group and the value is the sha512/256 hash of the transactions in that group. Declaration [DataMember(Name = \"group\", EmitDefaultValue = false)] public byte[] Group { get; set; } Property Value Type Description System.Byte [] \\[grp\\] Base64 encoded byte array of a sha512/256 digest. When present indicates that this transaction is part of a transaction group and the value is the sha512/256 hash of the transactions in that group. | Improve this Doc View Source Id Transaction ID Declaration [DataMember(Name = \"id\", EmitDefaultValue = false)] public string Id { get; set; } Property Value Type Description System.String Transaction ID | Improve this Doc View Source IntraRoundOffset Offset into the round where this transaction was confirmed. Declaration [DataMember(Name = \"intra-round-offset\", EmitDefaultValue = false)] public long? IntraRoundOffset { get; set; } Property Value Type Description System.Nullable < System.Int64 > Offset into the round where this transaction was confirmed. | Improve this Doc View Source KeyregTransaction Gets or Sets KeyregTransaction Declaration [DataMember(Name = \"keyreg-transaction\", EmitDefaultValue = false)] public TransactionKeyreg KeyregTransaction { get; set; } Property Value Type Description TransactionKeyreg | Improve this Doc View Source LastValid \\[lv\\] Last valid round for this transaction. Declaration [DataMember(Name = \"last-valid\", EmitDefaultValue = false)] public long? LastValid { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[lv\\] Last valid round for this transaction. | Improve this Doc View Source Lease \\[lx\\] Base64 encoded 32-byte array. Lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. Declaration [DataMember(Name = \"lease\", EmitDefaultValue = false)] public byte[] Lease { get; set; } Property Value Type Description System.Byte [] \\[lx\\] Base64 encoded 32-byte array. Lease enforces mutual exclusion of transactions. If this field is nonzero, then once the transaction is confirmed, it acquires the lease identified by the (Sender, Lease) pair of the transaction until the LastValid round passes. While this transaction possesses the lease, no other transaction specifying this lease can be confirmed. | Improve this Doc View Source LocalStateDelta \\[ld\\] Local state key/value changes for the application being executed by this transaction. Declaration [DataMember(Name = \"local-state-delta\", EmitDefaultValue = false)] public List<AccountStateDelta> LocalStateDelta { get; set; } Property Value Type Description System.Collections.Generic.List < AccountStateDelta > \\[ld\\] Local state key/value changes for the application being executed by this transaction. | Improve this Doc View Source Note \\[note\\] Free form data. Declaration [DataMember(Name = \"note\", EmitDefaultValue = false)] public byte[] Note { get; set; } Property Value Type Description System.Byte [] \\[note\\] Free form data. | Improve this Doc View Source PaymentTransaction Gets or Sets PaymentTransaction Declaration [DataMember(Name = \"payment-transaction\", EmitDefaultValue = false)] public TransactionPayment PaymentTransaction { get; set; } Property Value Type Description TransactionPayment | Improve this Doc View Source ReceiverRewards \\[rr\\] rewards applied to receiver account. Declaration [DataMember(Name = \"receiver-rewards\", EmitDefaultValue = false)] public long? ReceiverRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[rr\\] rewards applied to receiver account. | Improve this Doc View Source RekeyTo \\[rekey\\] when included in a valid transaction, the accounts auth addr will be updated with this value and future signatures must be signed with the key represented by this address. Declaration [DataMember(Name = \"rekey-to\", EmitDefaultValue = false)] public string RekeyTo { get; set; } Property Value Type Description System.String \\[rekey\\] when included in a valid transaction, the accounts auth addr will be updated with this value and future signatures must be signed with the key represented by this address. | Improve this Doc View Source RoundTime Time when the block this transaction is in was confirmed. Declaration [DataMember(Name = \"round-time\", EmitDefaultValue = false)] public long? RoundTime { get; set; } Property Value Type Description System.Nullable < System.Int64 > Time when the block this transaction is in was confirmed. | Improve this Doc View Source Sender \\[snd\\] Sender's address. Declaration [DataMember(Name = \"sender\", EmitDefaultValue = false)] public string Sender { get; set; } Property Value Type Description System.String \\[snd\\] Sender's address. | Improve this Doc View Source SenderRewards \\[rs\\] rewards applied to sender account. Declaration [DataMember(Name = \"sender-rewards\", EmitDefaultValue = false)] public long? SenderRewards { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[rs\\] rewards applied to sender account. | Improve this Doc View Source Signature Gets or Sets Signature Declaration [DataMember(Name = \"signature\", EmitDefaultValue = false)] public TransactionSignature Signature { get; set; } Property Value Type Description TransactionSignature | Improve this Doc View Source TxType \\[type\\] Indicates what type of transaction this is. Different types have different fields. Valid types, and where their fields are stored: * \\[pay\\] payment-transaction * \\[keyreg\\] keyreg-transaction * \\[acfg\\] asset-config-transaction * \\[axfer\\] asset-transfer-transaction * \\[afrz\\] asset-freeze-transaction * \\[appl\\] application-transaction Declaration [DataMember(Name = \"tx-type\", EmitDefaultValue = false)] public Transaction.TxTypeEnum TxType { get; set; } Property Value Type Description Transaction.TxTypeEnum \\[type\\] Indicates what type of transaction this is. Different types have different fields. Valid types, and where their fields are stored: * \\[pay\\] payment-transaction * \\[keyreg\\] keyreg-transaction * \\[acfg\\] asset-config-transaction * \\[axfer\\] asset-transfer-transaction * \\[afrz\\] asset-freeze-transaction * \\[appl\\] application-transaction Methods | Improve this Doc View Source Equals(Transaction) Returns true if Transaction instances are equal Declaration public bool Equals(Transaction input) Parameters Type Name Description Transaction input Instance of Transaction to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.Transaction.TxTypeEnum.html": {
    "href": "api/Algorand.V2.Model.Transaction.TxTypeEnum.html",
    "title": "Enum Transaction.TxTypeEnum | Dotnet Algorand Documents",
    "keywords": "Enum Transaction.TxTypeEnum \\[type\\] Indicates what type of transaction this is. Different types have different fields. Valid types, and where their fields are stored: * \\[pay\\] payment-transaction * \\[keyreg\\] keyreg-transaction * \\[acfg\\] asset-config-transaction * \\[axfer\\] asset-transfer-transaction * \\[afrz\\] asset-freeze-transaction * \\[appl\\] application-transaction Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [JsonConverter(typeof(StringEnumConverter))] public enum TxTypeEnum Fields Name Description Acfg Enum Acfg for value: acfg Afrz Enum Afrz for value: afrz Appl Enum Appl for value: appl Axfer Enum Axfer for value: axfer Keyreg Enum Keyreg for value: keyreg Pay Enum Pay for value: pay"
  },
  "api/Algorand.V2.Model.TransactionApplication.html": {
    "href": "api/Algorand.V2.Model.TransactionApplication.html",
    "title": "Class TransactionApplication | Dotnet Algorand Documents",
    "keywords": "Class TransactionApplication Fields for application transactions. Definition: data/transactions/application.go : ApplicationCallTxnFields Inheritance System.Object TransactionApplication Implements System.IEquatable < TransactionApplication > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionApplication : IEquatable<TransactionApplication>, IValidatableObject Constructors | Improve this Doc View Source TransactionApplication(List<String>, List<String>, Nullable<Int64>, Byte[], Byte[], List<Nullable<Int32>>, List<Nullable<Int32>>, StateSchema, StateSchema, OnCompletion) Initializes a new instance of the TransactionApplication class. Declaration public TransactionApplication(List<string> accounts = null, List<string> applicationArgs = null, long? applicationId = default(long? ), byte[] approvalProgram = null, byte[] clearStateProgram = null, List<int?> foreignApps = null, List<int?> foreignAssets = null, StateSchema globalStateSchema = null, StateSchema localStateSchema = null, OnCompletion onCompletion = OnCompletion.Noop) Parameters Type Name Description System.Collections.Generic.List < System.String > accounts \\[apat\\] List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program.. System.Collections.Generic.List < System.String > applicationArgs \\[apaa\\] transaction specific arguments accessed from the application's approval-program and clear-state-program.. System.Nullable < System.Int64 > applicationId \\[apid\\] ID of the application being configured or empty if creating. (required). System.Byte [] approvalProgram \\[apap\\] Logic executed for every application transaction, except when on-completion is set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction.. System.Byte [] clearStateProgram \\[apsu\\] Logic executed for application transactions with on-completion set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction.. System.Collections.Generic.List < System.Nullable < System.Int32 >> foreignApps \\[apfa\\] Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only.. System.Collections.Generic.List < System.Nullable < System.Int32 >> foreignAssets \\[apas\\] lists the assets whose parameters may be accessed by this application's ApprovalProgram and ClearStateProgram. The access is read-only.. StateSchema globalStateSchema globalStateSchema. StateSchema localStateSchema localStateSchema. OnCompletion onCompletion onCompletion (required). Properties | Improve this Doc View Source Accounts \\[apat\\] List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. Declaration [DataMember(Name = \"accounts\", EmitDefaultValue = false)] public List<string> Accounts { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > \\[apat\\] List of accounts in addition to the sender that may be accessed from the application's approval-program and clear-state-program. | Improve this Doc View Source ApplicationArgs \\[apaa\\] transaction specific arguments accessed from the application's approval-program and clear-state-program. Declaration [DataMember(Name = \"application-args\", EmitDefaultValue = false)] public List<string> ApplicationArgs { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > \\[apaa\\] transaction specific arguments accessed from the application's approval-program and clear-state-program. | Improve this Doc View Source ApplicationId \\[apid\\] ID of the application being configured or empty if creating. Declaration [DataMember(Name = \"application-id\", EmitDefaultValue = false)] public long? ApplicationId { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[apid\\] ID of the application being configured or empty if creating. | Improve this Doc View Source ApprovalProgram \\[apap\\] Logic executed for every application transaction, except when on-completion is set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. Declaration [DataMember(Name = \"approval-program\", EmitDefaultValue = false)] public byte[] ApprovalProgram { get; set; } Property Value Type Description System.Byte [] \\[apap\\] Logic executed for every application transaction, except when on-completion is set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Approval programs may reject the transaction. | Improve this Doc View Source ClearStateProgram \\[apsu\\] Logic executed for application transactions with on-completion set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. Declaration [DataMember(Name = \"clear-state-program\", EmitDefaultValue = false)] public byte[] ClearStateProgram { get; set; } Property Value Type Description System.Byte [] \\[apsu\\] Logic executed for application transactions with on-completion set to &quot;clear&quot;. It can read and write global state for the application, as well as account-specific local state. Clear state programs cannot reject the transaction. | Improve this Doc View Source ForeignApps \\[apfa\\] Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. Declaration [DataMember(Name = \"foreign-apps\", EmitDefaultValue = false)] public List<int?> ForeignApps { get; set; } Property Value Type Description System.Collections.Generic.List < System.Nullable < System.Int32 >> \\[apfa\\] Lists the applications in addition to the application-id whose global states may be accessed by this application's approval-program and clear-state-program. The access is read-only. | Improve this Doc View Source ForeignAssets \\[apas\\] lists the assets whose parameters may be accessed by this application's ApprovalProgram and ClearStateProgram. The access is read-only. Declaration [DataMember(Name = \"foreign-assets\", EmitDefaultValue = false)] public List<int?> ForeignAssets { get; set; } Property Value Type Description System.Collections.Generic.List < System.Nullable < System.Int32 >> \\[apas\\] lists the assets whose parameters may be accessed by this application's ApprovalProgram and ClearStateProgram. The access is read-only. | Improve this Doc View Source GlobalStateSchema Gets or Sets GlobalStateSchema Declaration [DataMember(Name = \"global-state-schema\", EmitDefaultValue = false)] public StateSchema GlobalStateSchema { get; set; } Property Value Type Description StateSchema | Improve this Doc View Source LocalStateSchema Gets or Sets LocalStateSchema Declaration [DataMember(Name = \"local-state-schema\", EmitDefaultValue = false)] public StateSchema LocalStateSchema { get; set; } Property Value Type Description StateSchema | Improve this Doc View Source OnCompletion Gets or Sets OnCompletion Declaration [DataMember(Name = \"on-completion\", EmitDefaultValue = false)] public OnCompletion OnCompletion { get; set; } Property Value Type Description OnCompletion Methods | Improve this Doc View Source Equals(TransactionApplication) Returns true if TransactionApplication instances are equal Declaration public bool Equals(TransactionApplication input) Parameters Type Name Description TransactionApplication input Instance of TransactionApplication to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionAssetConfig.html": {
    "href": "api/Algorand.V2.Model.TransactionAssetConfig.html",
    "title": "Class TransactionAssetConfig | Dotnet Algorand Documents",
    "keywords": "Class TransactionAssetConfig Fields for asset allocation, re-configuration, and destruction. A zero value for asset-id indicates asset creation. A zero value for the params indicates asset destruction. Definition: data/transactions/asset.go : AssetConfigTxnFields Inheritance System.Object TransactionAssetConfig Implements System.IEquatable < TransactionAssetConfig > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionAssetConfig : IEquatable<TransactionAssetConfig>, IValidatableObject Constructors | Improve this Doc View Source TransactionAssetConfig(Nullable<Int64>, AssetParams) Initializes a new instance of the TransactionAssetConfig class. Declaration public TransactionAssetConfig(long? assetId = default(long? ), AssetParams _params = null) Parameters Type Name Description System.Nullable < System.Int64 > assetId \\[xaid\\] ID of the asset being configured or empty if creating.. AssetParams _params _params. Properties | Improve this Doc View Source AssetId \\[xaid\\] ID of the asset being configured or empty if creating. Declaration [DataMember(Name = \"asset-id\", EmitDefaultValue = false)] public long? AssetId { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[xaid\\] ID of the asset being configured or empty if creating. | Improve this Doc View Source Params Gets or Sets Params Declaration [DataMember(Name = \"params\", EmitDefaultValue = false)] public AssetParams Params { get; set; } Property Value Type Description AssetParams Methods | Improve this Doc View Source Equals(TransactionAssetConfig) Returns true if TransactionAssetConfig instances are equal Declaration public bool Equals(TransactionAssetConfig input) Parameters Type Name Description TransactionAssetConfig input Instance of TransactionAssetConfig to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionAssetFreeze.html": {
    "href": "api/Algorand.V2.Model.TransactionAssetFreeze.html",
    "title": "Class TransactionAssetFreeze | Dotnet Algorand Documents",
    "keywords": "Class TransactionAssetFreeze Fields for an asset freeze transaction. Definition: data/transactions/asset.go : AssetFreezeTxnFields Inheritance System.Object TransactionAssetFreeze Implements System.IEquatable < TransactionAssetFreeze > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionAssetFreeze : IEquatable<TransactionAssetFreeze>, IValidatableObject Constructors | Improve this Doc View Source TransactionAssetFreeze(String, Nullable<Int64>, Nullable<Boolean>) Initializes a new instance of the TransactionAssetFreeze class. Declaration public TransactionAssetFreeze(string address = null, long? assetId = default(long? ), bool? newFreezeStatus = default(bool? )) Parameters Type Name Description System.String address \\[fadd\\] Address of the account whose asset is being frozen or thawed. (required). System.Nullable < System.Int64 > assetId \\[faid\\] ID of the asset being frozen or thawed. (required). System.Nullable < System.Boolean > newFreezeStatus \\[afrz\\] The new freeze status. (required). Properties | Improve this Doc View Source Address \\[fadd\\] Address of the account whose asset is being frozen or thawed. Declaration [DataMember(Name = \"address\", EmitDefaultValue = false)] public string Address { get; set; } Property Value Type Description System.String \\[fadd\\] Address of the account whose asset is being frozen or thawed. | Improve this Doc View Source AssetId \\[faid\\] ID of the asset being frozen or thawed. Declaration [DataMember(Name = \"asset-id\", EmitDefaultValue = false)] public long? AssetId { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[faid\\] ID of the asset being frozen or thawed. | Improve this Doc View Source NewFreezeStatus \\[afrz\\] The new freeze status. Declaration [DataMember(Name = \"new-freeze-status\", EmitDefaultValue = false)] public bool? NewFreezeStatus { get; set; } Property Value Type Description System.Nullable < System.Boolean > \\[afrz\\] The new freeze status. Methods | Improve this Doc View Source Equals(TransactionAssetFreeze) Returns true if TransactionAssetFreeze instances are equal Declaration public bool Equals(TransactionAssetFreeze input) Parameters Type Name Description TransactionAssetFreeze input Instance of TransactionAssetFreeze to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionAssetTransfer.html": {
    "href": "api/Algorand.V2.Model.TransactionAssetTransfer.html",
    "title": "Class TransactionAssetTransfer | Dotnet Algorand Documents",
    "keywords": "Class TransactionAssetTransfer Fields for an asset transfer transaction. Definition: data/transactions/asset.go : AssetTransferTxnFields Inheritance System.Object TransactionAssetTransfer Implements System.IEquatable < TransactionAssetTransfer > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionAssetTransfer : IEquatable<TransactionAssetTransfer>, IValidatableObject Constructors | Improve this Doc View Source TransactionAssetTransfer(Nullable<UInt64>, Nullable<Int64>, Nullable<UInt64>, String, String, String) Initializes a new instance of the TransactionAssetTransfer class. Declaration public TransactionAssetTransfer(ulong? amount = default(ulong? ), long? assetId = default(long? ), ulong? closeAmount = default(ulong? ), string closeTo = null, string receiver = null, string sender = null) Parameters Type Name Description System.Nullable < System.UInt64 > amount \\[aamt\\] Amount of asset to transfer. A zero amount transferred to self allocates that asset in the account's Assets map. (required). System.Nullable < System.Int64 > assetId \\[xaid\\] ID of the asset being transferred. (required). System.Nullable < System.UInt64 > closeAmount Number of assets transfered to the close-to account as part of the transaction.. System.String closeTo \\[aclose\\] Indicates that the asset should be removed from the account's Assets map, and specifies where the remaining asset holdings should be transferred. It's always valid to transfer remaining asset holdings to the creator account.. System.String receiver \\[arcv\\] Recipient address of the transfer. (required). System.String sender \\[asnd\\] The effective sender during a clawback transactions. If this is not a zero value, the real transaction sender must be the Clawback address from the AssetParams.. Properties | Improve this Doc View Source Amount \\[aamt\\] Amount of asset to transfer. A zero amount transferred to self allocates that asset in the account's Assets map. Declaration [DataMember(Name = \"amount\", EmitDefaultValue = false)] public ulong? Amount { get; set; } Property Value Type Description System.Nullable < System.UInt64 > \\[aamt\\] Amount of asset to transfer. A zero amount transferred to self allocates that asset in the account's Assets map. | Improve this Doc View Source AssetId \\[xaid\\] ID of the asset being transferred. Declaration [DataMember(Name = \"asset-id\", EmitDefaultValue = false)] public long? AssetId { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[xaid\\] ID of the asset being transferred. | Improve this Doc View Source CloseAmount Number of assets transfered to the close-to account as part of the transaction. Declaration [DataMember(Name = \"close-amount\", EmitDefaultValue = false)] public ulong? CloseAmount { get; set; } Property Value Type Description System.Nullable < System.UInt64 > Number of assets transfered to the close-to account as part of the transaction. | Improve this Doc View Source CloseTo \\[aclose\\] Indicates that the asset should be removed from the account's Assets map, and specifies where the remaining asset holdings should be transferred. It's always valid to transfer remaining asset holdings to the creator account. Declaration [DataMember(Name = \"close-to\", EmitDefaultValue = false)] public string CloseTo { get; set; } Property Value Type Description System.String \\[aclose\\] Indicates that the asset should be removed from the account's Assets map, and specifies where the remaining asset holdings should be transferred. It's always valid to transfer remaining asset holdings to the creator account. | Improve this Doc View Source Receiver \\[arcv\\] Recipient address of the transfer. Declaration [DataMember(Name = \"receiver\", EmitDefaultValue = false)] public string Receiver { get; set; } Property Value Type Description System.String \\[arcv\\] Recipient address of the transfer. | Improve this Doc View Source Sender \\[asnd\\] The effective sender during a clawback transactions. If this is not a zero value, the real transaction sender must be the Clawback address from the AssetParams. Declaration [DataMember(Name = \"sender\", EmitDefaultValue = false)] public string Sender { get; set; } Property Value Type Description System.String \\[asnd\\] The effective sender during a clawback transactions. If this is not a zero value, the real transaction sender must be the Clawback address from the AssetParams. Methods | Improve this Doc View Source Equals(TransactionAssetTransfer) Returns true if TransactionAssetTransfer instances are equal Declaration public bool Equals(TransactionAssetTransfer input) Parameters Type Name Description TransactionAssetTransfer input Instance of TransactionAssetTransfer to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionKeyreg.html": {
    "href": "api/Algorand.V2.Model.TransactionKeyreg.html",
    "title": "Class TransactionKeyreg | Dotnet Algorand Documents",
    "keywords": "Class TransactionKeyreg Fields for a keyreg transaction. Definition: data/transactions/keyreg.go : KeyregTxnFields Inheritance System.Object TransactionKeyreg Implements System.IEquatable < TransactionKeyreg > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionKeyreg : IEquatable<TransactionKeyreg>, IValidatableObject Constructors | Improve this Doc View Source TransactionKeyreg(Nullable<Boolean>, Byte[], Nullable<Int64>, Nullable<Int64>, Nullable<Int64>, Byte[]) Initializes a new instance of the TransactionKeyreg class. Declaration public TransactionKeyreg(bool? nonParticipation = default(bool? ), byte[] selectionParticipationKey = null, long? voteFirstValid = default(long? ), long? voteKeyDilution = default(long? ), long? voteLastValid = default(long? ), byte[] voteParticipationKey = null) Parameters Type Name Description System.Nullable < System.Boolean > nonParticipation \\[nonpart\\] Mark the account as participating or non-participating.. System.Byte [] selectionParticipationKey \\[selkey\\] Public key used with the Verified Random Function (VRF) result during committee selection.. System.Nullable < System.Int64 > voteFirstValid \\[votefst\\] First round this participation key is valid.. System.Nullable < System.Int64 > voteKeyDilution \\[votekd\\] Number of subkeys in each batch of participation keys.. System.Nullable < System.Int64 > voteLastValid \\[votelst\\] Last round this participation key is valid.. System.Byte [] voteParticipationKey \\[votekey\\] Participation public key used in key registration transactions.. Properties | Improve this Doc View Source NonParticipation \\[nonpart\\] Mark the account as participating or non-participating. Declaration [DataMember(Name = \"non-participation\", EmitDefaultValue = false)] public bool? NonParticipation { get; set; } Property Value Type Description System.Nullable < System.Boolean > \\[nonpart\\] Mark the account as participating or non-participating. | Improve this Doc View Source SelectionParticipationKey \\[selkey\\] Public key used with the Verified Random Function (VRF) result during committee selection. Declaration [DataMember(Name = \"selection-participation-key\", EmitDefaultValue = false)] public byte[] SelectionParticipationKey { get; set; } Property Value Type Description System.Byte [] \\[selkey\\] Public key used with the Verified Random Function (VRF) result during committee selection. | Improve this Doc View Source VoteFirstValid \\[votefst\\] First round this participation key is valid. Declaration [DataMember(Name = \"vote-first-valid\", EmitDefaultValue = false)] public long? VoteFirstValid { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[votefst\\] First round this participation key is valid. | Improve this Doc View Source VoteKeyDilution \\[votekd\\] Number of subkeys in each batch of participation keys. Declaration [DataMember(Name = \"vote-key-dilution\", EmitDefaultValue = false)] public long? VoteKeyDilution { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[votekd\\] Number of subkeys in each batch of participation keys. | Improve this Doc View Source VoteLastValid \\[votelst\\] Last round this participation key is valid. Declaration [DataMember(Name = \"vote-last-valid\", EmitDefaultValue = false)] public long? VoteLastValid { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[votelst\\] Last round this participation key is valid. | Improve this Doc View Source VoteParticipationKey \\[votekey\\] Participation public key used in key registration transactions. Declaration [DataMember(Name = \"vote-participation-key\", EmitDefaultValue = false)] public byte[] VoteParticipationKey { get; set; } Property Value Type Description System.Byte [] \\[votekey\\] Participation public key used in key registration transactions. Methods | Improve this Doc View Source Equals(TransactionKeyreg) Returns true if TransactionKeyreg instances are equal Declaration public bool Equals(TransactionKeyreg input) Parameters Type Name Description TransactionKeyreg input Instance of TransactionKeyreg to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionParametersResponse.html": {
    "href": "api/Algorand.V2.Model.TransactionParametersResponse.html",
    "title": "Class TransactionParametersResponse | Dotnet Algorand Documents",
    "keywords": "Class TransactionParametersResponse TransactionParams contains the parameters that help a client construct a new transaction. Inheritance System.Object TransactionParametersResponse Implements System.IEquatable < TransactionParametersResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionParametersResponse : IEquatable<TransactionParametersResponse>, IValidatableObject Constructors | Improve this Doc View Source TransactionParametersResponse() Initializes a new instance of the TransactionParametersResponse class. Declaration [JsonConstructor] protected TransactionParametersResponse() | Improve this Doc View Source TransactionParametersResponse(String, Nullable<Int64>, Byte[], String, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the TransactionParametersResponse class. Declaration public TransactionParametersResponse(string consensusVersion = null, long? fee = default(long? ), byte[] genesisHash = null, string genesisId = null, long? lastRound = default(long? ), long? minFee = default(long? )) Parameters Type Name Description System.String consensusVersion ConsensusVersion indicates the consensus protocol version as of LastRound. (required). System.Nullable < System.Int64 > fee Fee is the suggested transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. (required). System.Byte [] genesisHash GenesisHash is the hash of the genesis block. (required). System.String genesisId GenesisID is an ID listed in the genesis block. (required). System.Nullable < System.Int64 > lastRound LastRound indicates the last round seen (required). System.Nullable < System.Int64 > minFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. (required). Properties | Improve this Doc View Source ConsensusVersion ConsensusVersion indicates the consensus protocol version as of LastRound. Declaration [DataMember(Name = \"consensus-version\", EmitDefaultValue = false)] public string ConsensusVersion { get; set; } Property Value Type Description System.String ConsensusVersion indicates the consensus protocol version as of LastRound. | Improve this Doc View Source Fee Fee is the suggested transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. Declaration [DataMember(Name = \"fee\", EmitDefaultValue = false)] public long? Fee { get; set; } Property Value Type Description System.Nullable < System.Int64 > Fee is the suggested transaction fee Fee is in units of micro-Algos per byte. Fee may fall to zero but transactions must still have a fee of at least MinTxnFee for the current network protocol. | Improve this Doc View Source GenesisHash GenesisHash is the hash of the genesis block. Declaration [DataMember(Name = \"genesis-hash\", EmitDefaultValue = false)] public byte[] GenesisHash { get; set; } Property Value Type Description System.Byte [] GenesisHash is the hash of the genesis block. | Improve this Doc View Source GenesisId GenesisID is an ID listed in the genesis block. Declaration [DataMember(Name = \"genesis-id\", EmitDefaultValue = false)] public string GenesisId { get; set; } Property Value Type Description System.String GenesisID is an ID listed in the genesis block. | Improve this Doc View Source LastRound LastRound indicates the last round seen Declaration [DataMember(Name = \"last-round\", EmitDefaultValue = false)] public long? LastRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > LastRound indicates the last round seen | Improve this Doc View Source MinFee The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Declaration [DataMember(Name = \"min-fee\", EmitDefaultValue = false)] public long? MinFee { get; set; } Property Value Type Description System.Nullable < System.Int64 > The minimum transaction fee (not per byte) required for the txn to validate for the current network protocol. Methods | Improve this Doc View Source Equals(TransactionParametersResponse) Returns true if TransactionParametersResponse instances are equal Declaration public bool Equals(TransactionParametersResponse input) Parameters Type Name Description TransactionParametersResponse input Instance of TransactionParametersResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionPayment.html": {
    "href": "api/Algorand.V2.Model.TransactionPayment.html",
    "title": "Class TransactionPayment | Dotnet Algorand Documents",
    "keywords": "Class TransactionPayment Fields for a payment transaction. Definition: data/transactions/payment.go : PaymentTxnFields Inheritance System.Object TransactionPayment Implements System.IEquatable < TransactionPayment > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionPayment : IEquatable<TransactionPayment>, IValidatableObject Constructors | Improve this Doc View Source TransactionPayment(Nullable<Int64>, Nullable<Int64>, String, String) Initializes a new instance of the TransactionPayment class. Declaration public TransactionPayment(long? amount = default(long? ), long? closeAmount = default(long? ), string closeRemainderTo = null, string receiver = null) Parameters Type Name Description System.Nullable < System.Int64 > amount \\[amt\\] number of MicroAlgos intended to be transferred. (required). System.Nullable < System.Int64 > closeAmount Number of MicroAlgos that were sent to the close-remainder-to address when closing the sender account.. System.String closeRemainderTo \\[close\\] when set, indicates that the sending account should be closed and all remaining funds be transferred to this address.. System.String receiver \\[rcv\\] receiver's address. (required). Properties | Improve this Doc View Source Amount \\[amt\\] number of MicroAlgos intended to be transferred. Declaration [DataMember(Name = \"amount\", EmitDefaultValue = false)] public long? Amount { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[amt\\] number of MicroAlgos intended to be transferred. | Improve this Doc View Source CloseAmount Number of MicroAlgos that were sent to the close-remainder-to address when closing the sender account. Declaration [DataMember(Name = \"close-amount\", EmitDefaultValue = false)] public long? CloseAmount { get; set; } Property Value Type Description System.Nullable < System.Int64 > Number of MicroAlgos that were sent to the close-remainder-to address when closing the sender account. | Improve this Doc View Source CloseRemainderTo \\[close\\] when set, indicates that the sending account should be closed and all remaining funds be transferred to this address. Declaration [DataMember(Name = \"close-remainder-to\", EmitDefaultValue = false)] public string CloseRemainderTo { get; set; } Property Value Type Description System.String \\[close\\] when set, indicates that the sending account should be closed and all remaining funds be transferred to this address. | Improve this Doc View Source Receiver \\[rcv\\] receiver's address. Declaration [DataMember(Name = \"receiver\", EmitDefaultValue = false)] public string Receiver { get; set; } Property Value Type Description System.String \\[rcv\\] receiver's address. Methods | Improve this Doc View Source Equals(TransactionPayment) Returns true if TransactionPayment instances are equal Declaration public bool Equals(TransactionPayment input) Parameters Type Name Description TransactionPayment input Instance of TransactionPayment to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionResponse.html": {
    "href": "api/Algorand.V2.Model.TransactionResponse.html",
    "title": "Class TransactionResponse | Dotnet Algorand Documents",
    "keywords": "Class TransactionResponse TransactionResponse Inheritance System.Object TransactionResponse Implements System.IEquatable < TransactionResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionResponse : IEquatable<TransactionResponse>, IValidatableObject Constructors | Improve this Doc View Source TransactionResponse(Nullable<Int64>, Transaction) Initializes a new instance of the TransactionResponse class. Declaration public TransactionResponse(long? currentRound = default(long? ), Transaction transaction = null) Parameters Type Name Description System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). Transaction transaction transaction (required). Properties | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. | Improve this Doc View Source Transaction Gets or Sets Transaction Declaration [DataMember(Name = \"transaction\", EmitDefaultValue = false)] public Transaction Transaction { get; set; } Property Value Type Description Transaction Methods | Improve this Doc View Source Equals(TransactionResponse) Returns true if TransactionResponse instances are equal Declaration public bool Equals(TransactionResponse input) Parameters Type Name Description TransactionResponse input Instance of TransactionResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionSignature.html": {
    "href": "api/Algorand.V2.Model.TransactionSignature.html",
    "title": "Class TransactionSignature | Dotnet Algorand Documents",
    "keywords": "Class TransactionSignature Validation signature associated with some data. Only one of the signatures should be provided. Inheritance System.Object TransactionSignature Implements System.IEquatable < TransactionSignature > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionSignature : IEquatable<TransactionSignature>, IValidatableObject Constructors | Improve this Doc View Source TransactionSignature(TransactionSignatureLogicsig, TransactionSignatureMultisig, Byte[]) Initializes a new instance of the TransactionSignature class. Declaration public TransactionSignature(TransactionSignatureLogicsig logicsig = null, TransactionSignatureMultisig multisig = null, byte[] sig = null) Parameters Type Name Description TransactionSignatureLogicsig logicsig logicsig. TransactionSignatureMultisig multisig multisig. System.Byte [] sig \\[sig\\] Standard ed25519 signature.. Properties | Improve this Doc View Source Logicsig Gets or Sets Logicsig Declaration [DataMember(Name = \"logicsig\", EmitDefaultValue = false)] public TransactionSignatureLogicsig Logicsig { get; set; } Property Value Type Description TransactionSignatureLogicsig | Improve this Doc View Source Multisig Gets or Sets Multisig Declaration [DataMember(Name = \"multisig\", EmitDefaultValue = false)] public TransactionSignatureMultisig Multisig { get; set; } Property Value Type Description TransactionSignatureMultisig | Improve this Doc View Source Sig \\[sig\\] Standard ed25519 signature. Declaration [DataMember(Name = \"sig\", EmitDefaultValue = false)] public byte[] Sig { get; set; } Property Value Type Description System.Byte [] \\[sig\\] Standard ed25519 signature. Methods | Improve this Doc View Source Equals(TransactionSignature) Returns true if TransactionSignature instances are equal Declaration public bool Equals(TransactionSignature input) Parameters Type Name Description TransactionSignature input Instance of TransactionSignature to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionSignatureLogicsig.html": {
    "href": "api/Algorand.V2.Model.TransactionSignatureLogicsig.html",
    "title": "Class TransactionSignatureLogicsig | Dotnet Algorand Documents",
    "keywords": "Class TransactionSignatureLogicsig \\[lsig\\] Programatic transaction signature. Definition: data/transactions/logicsig.go Inheritance System.Object TransactionSignatureLogicsig Implements System.IEquatable < TransactionSignatureLogicsig > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionSignatureLogicsig : IEquatable<TransactionSignatureLogicsig>, IValidatableObject Constructors | Improve this Doc View Source TransactionSignatureLogicsig(List<String>, Byte[], TransactionSignatureMultisig, Byte[]) Initializes a new instance of the TransactionSignatureLogicsig class. Declaration public TransactionSignatureLogicsig(List<string> args = null, byte[] logic = null, TransactionSignatureMultisig multisigSignature = null, byte[] signature = null) Parameters Type Name Description System.Collections.Generic.List < System.String > args \\[arg\\] Logic arguments, base64 encoded.. System.Byte [] logic \\[l\\] Program signed by a signature or multi signature, or hashed to be the address of ana ccount. Base64 encoded TEAL program. (required). TransactionSignatureMultisig multisigSignature multisigSignature. System.Byte [] signature \\[sig\\] ed25519 signature.. Properties | Improve this Doc View Source Args \\[arg\\] Logic arguments, base64 encoded. Declaration [DataMember(Name = \"args\", EmitDefaultValue = false)] public List<string> Args { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > \\[arg\\] Logic arguments, base64 encoded. | Improve this Doc View Source Logic \\[l\\] Program signed by a signature or multi signature, or hashed to be the address of ana ccount. Base64 encoded TEAL program. Declaration [DataMember(Name = \"logic\", EmitDefaultValue = false)] public byte[] Logic { get; set; } Property Value Type Description System.Byte [] \\[l\\] Program signed by a signature or multi signature, or hashed to be the address of ana ccount. Base64 encoded TEAL program. | Improve this Doc View Source MultisigSignature Gets or Sets MultisigSignature Declaration [DataMember(Name = \"multisig-signature\", EmitDefaultValue = false)] public TransactionSignatureMultisig MultisigSignature { get; set; } Property Value Type Description TransactionSignatureMultisig | Improve this Doc View Source Signature \\[sig\\] ed25519 signature. Declaration [DataMember(Name = \"signature\", EmitDefaultValue = false)] public byte[] Signature { get; set; } Property Value Type Description System.Byte [] \\[sig\\] ed25519 signature. Methods | Improve this Doc View Source Equals(TransactionSignatureLogicsig) Returns true if TransactionSignatureLogicsig instances are equal Declaration public bool Equals(TransactionSignatureLogicsig input) Parameters Type Name Description TransactionSignatureLogicsig input Instance of TransactionSignatureLogicsig to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionSignatureMultisig.html": {
    "href": "api/Algorand.V2.Model.TransactionSignatureMultisig.html",
    "title": "Class TransactionSignatureMultisig | Dotnet Algorand Documents",
    "keywords": "Class TransactionSignatureMultisig \\[msig\\] structure holding multiple subsignatures. Definition: crypto/multisig.go : MultisigSig Inheritance System.Object TransactionSignatureMultisig Implements System.IEquatable < TransactionSignatureMultisig > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionSignatureMultisig : IEquatable<TransactionSignatureMultisig>, IValidatableObject Constructors | Improve this Doc View Source TransactionSignatureMultisig(List<TransactionSignatureMultisigSubsignature>, Nullable<Int64>, Nullable<Int64>) Initializes a new instance of the TransactionSignatureMultisig class. Declaration public TransactionSignatureMultisig(List<TransactionSignatureMultisigSubsignature> subsignature = null, long? threshold = default(long? ), long? version = default(long? )) Parameters Type Name Description System.Collections.Generic.List < TransactionSignatureMultisigSubsignature > subsignature \\[subsig\\] holds pairs of public key and signatures.. System.Nullable < System.Int64 > threshold \\[thr\\]. System.Nullable < System.Int64 > version \\[v\\]. Properties | Improve this Doc View Source Subsignature \\[subsig\\] holds pairs of public key and signatures. Declaration [DataMember(Name = \"subsignature\", EmitDefaultValue = false)] public List<TransactionSignatureMultisigSubsignature> Subsignature { get; set; } Property Value Type Description System.Collections.Generic.List < TransactionSignatureMultisigSubsignature > \\[subsig\\] holds pairs of public key and signatures. | Improve this Doc View Source Threshold \\[thr\\] Declaration [DataMember(Name = \"threshold\", EmitDefaultValue = false)] public long? Threshold { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[thr\\] | Improve this Doc View Source Version \\[v\\] Declaration [DataMember(Name = \"version\", EmitDefaultValue = false)] public long? Version { get; set; } Property Value Type Description System.Nullable < System.Int64 > \\[v\\] Methods | Improve this Doc View Source Equals(TransactionSignatureMultisig) Returns true if TransactionSignatureMultisig instances are equal Declaration public bool Equals(TransactionSignatureMultisig input) Parameters Type Name Description TransactionSignatureMultisig input Instance of TransactionSignatureMultisig to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionSignatureMultisigSubsignature.html": {
    "href": "api/Algorand.V2.Model.TransactionSignatureMultisigSubsignature.html",
    "title": "Class TransactionSignatureMultisigSubsignature | Dotnet Algorand Documents",
    "keywords": "Class TransactionSignatureMultisigSubsignature TransactionSignatureMultisigSubsignature Inheritance System.Object TransactionSignatureMultisigSubsignature Implements System.IEquatable < TransactionSignatureMultisigSubsignature > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionSignatureMultisigSubsignature : IEquatable<TransactionSignatureMultisigSubsignature>, IValidatableObject Constructors | Improve this Doc View Source TransactionSignatureMultisigSubsignature(Byte[], Byte[]) Initializes a new instance of the TransactionSignatureMultisigSubsignature class. Declaration public TransactionSignatureMultisigSubsignature(byte[] publicKey = null, byte[] signature = null) Parameters Type Name Description System.Byte [] publicKey \\[pk\\]. System.Byte [] signature \\[s\\]. Properties | Improve this Doc View Source PublicKey \\[pk\\] Declaration [DataMember(Name = \"public-key\", EmitDefaultValue = false)] public byte[] PublicKey { get; set; } Property Value Type Description System.Byte [] \\[pk\\] | Improve this Doc View Source Signature \\[s\\] Declaration [DataMember(Name = \"signature\", EmitDefaultValue = false)] public byte[] Signature { get; set; } Property Value Type Description System.Byte [] \\[s\\] Methods | Improve this Doc View Source Equals(TransactionSignatureMultisigSubsignature) Returns true if TransactionSignatureMultisigSubsignature instances are equal Declaration public bool Equals(TransactionSignatureMultisigSubsignature input) Parameters Type Name Description TransactionSignatureMultisigSubsignature input Instance of TransactionSignatureMultisigSubsignature to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.TransactionsResponse.html": {
    "href": "api/Algorand.V2.Model.TransactionsResponse.html",
    "title": "Class TransactionsResponse | Dotnet Algorand Documents",
    "keywords": "Class TransactionsResponse TransactionsResponse Inheritance System.Object TransactionsResponse Implements System.IEquatable < TransactionsResponse > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class TransactionsResponse : IEquatable<TransactionsResponse>, IValidatableObject Constructors | Improve this Doc View Source TransactionsResponse(Nullable<Int64>, String, List<Transaction>) Initializes a new instance of the TransactionsResponse class. Declaration public TransactionsResponse(long? currentRound = default(long? ), string nextToken = null, List<Transaction> transactions = null) Parameters Type Name Description System.Nullable < System.Int64 > currentRound Round at which the results were computed. (required). System.String nextToken Used for pagination, when making another request provide this token with the next parameter.. System.Collections.Generic.List < Transaction > transactions transactions (required). Properties | Improve this Doc View Source CurrentRound Round at which the results were computed. Declaration [DataMember(Name = \"current-round\", EmitDefaultValue = false)] public long? CurrentRound { get; set; } Property Value Type Description System.Nullable < System.Int64 > Round at which the results were computed. | Improve this Doc View Source NextToken Used for pagination, when making another request provide this token with the next parameter. Declaration [DataMember(Name = \"next-token\", EmitDefaultValue = false)] public string NextToken { get; set; } Property Value Type Description System.String Used for pagination, when making another request provide this token with the next parameter. | Improve this Doc View Source Transactions Gets or Sets Transactions Declaration [DataMember(Name = \"transactions\", EmitDefaultValue = false)] public List<Transaction> Transactions { get; set; } Property Value Type Description System.Collections.Generic.List < Transaction > Methods | Improve this Doc View Source Equals(TransactionsResponse) Returns true if TransactionsResponse instances are equal Declaration public bool Equals(TransactionsResponse input) Parameters Type Name Description TransactionsResponse input Instance of TransactionsResponse to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.V2.Model.Version.html": {
    "href": "api/Algorand.V2.Model.Version.html",
    "title": "Class Version | Dotnet Algorand Documents",
    "keywords": "Class Version algod version information. Inheritance System.Object Version Implements System.IEquatable < Version > System.ComponentModel.DataAnnotations.IValidatableObject Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Algorand.V2.Model Assembly : Algorand.dll Syntax [DataContract] public class Version : IEquatable<Version>, IValidatableObject Constructors | Improve this Doc View Source Version() Initializes a new instance of the Version class. Declaration [JsonConstructor] protected Version() | Improve this Doc View Source Version(BuildVersion, Byte[], String, List<String>) Initializes a new instance of the Version class. Declaration public Version(BuildVersion build = null, byte[] genesisHashB64 = null, string genesisId = null, List<string> versions = null) Parameters Type Name Description BuildVersion build build (required). System.Byte [] genesisHashB64 genesisHashB64 (required). System.String genesisId genesisId (required). System.Collections.Generic.List < System.String > versions versions (required). Properties | Improve this Doc View Source Build Gets or Sets Build Declaration [DataMember(Name = \"build\", EmitDefaultValue = false)] public BuildVersion Build { get; set; } Property Value Type Description BuildVersion | Improve this Doc View Source GenesisHashB64 Gets or Sets GenesisHashB64 Declaration [DataMember(Name = \"genesis_hash_b64\", EmitDefaultValue = false)] public byte[] GenesisHashB64 { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source GenesisId Gets or Sets GenesisId Declaration [DataMember(Name = \"genesis_id\", EmitDefaultValue = false)] public string GenesisId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Versions Gets or Sets Versions Declaration [DataMember(Name = \"versions\", EmitDefaultValue = false)] public List<string> Versions { get; set; } Property Value Type Description System.Collections.Generic.List < System.String > Methods | Improve this Doc View Source Equals(Version) Returns true if Version instances are equal Declaration public bool Equals(Version input) Parameters Type Name Description Version input Instance of Version to be compared Returns Type Description System.Boolean Boolean | Improve this Doc View Source Equals(Object) Returns true if objects are equal Declaration public override bool Equals(object input) Parameters Type Name Description System.Object input Object to be compared Returns Type Description System.Boolean Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Gets the hash code Declaration public override int GetHashCode() Returns Type Description System.Int32 Hash code Overrides System.Object.GetHashCode() | Improve this Doc View Source ToJson() Returns the JSON string presentation of the object Declaration public virtual string ToJson() Returns Type Description System.String JSON string presentation of the object | Improve this Doc View Source ToString() Returns the string presentation of the object Declaration public override string ToString() Returns Type Description System.String String presentation of the object Overrides System.Object.ToString() Explicit Interface Implementations | Improve this Doc View Source IValidatableObject.Validate(ValidationContext) To validate all properties of the instance Declaration IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext) Parameters Type Name Description System.ComponentModel.DataAnnotations.ValidationContext validationContext Validation context Returns Type Description System.Collections.Generic.IEnumerable < System.ComponentModel.DataAnnotations.ValidationResult > Validation Result Implements System.IEquatable<T> System.ComponentModel.DataAnnotations.IValidatableObject"
  },
  "api/Algorand.VarintResult.html": {
    "href": "api/Algorand.VarintResult.html",
    "title": "Class VarintResult | Dotnet Algorand Documents",
    "keywords": "Class VarintResult Inheritance System.Object VarintResult Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class VarintResult Constructors | Improve this Doc View Source VarintResult() Declaration public VarintResult() | Improve this Doc View Source VarintResult(Int32, Int32) Declaration public VarintResult(int value, int length) Parameters Type Name Description System.Int32 value System.Int32 length Fields | Improve this Doc View Source length Declaration public int length Field Value Type Description System.Int32 | Improve this Doc View Source value Declaration public int value Field Value Type Description System.Int32"
  },
  "api/Algorand.VRFPublicKey.html": {
    "href": "api/Algorand.VRFPublicKey.html",
    "title": "Class VRFPublicKey | Dotnet Algorand Documents",
    "keywords": "Class VRFPublicKey Inheritance System.Object VRFPublicKey Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax [JsonConverter(typeof(BytesConverter))] public class VRFPublicKey Constructors | Improve this Doc View Source VRFPublicKey() Declaration public VRFPublicKey() | Improve this Doc View Source VRFPublicKey(Byte[]) Declaration [JsonConstructor] public VRFPublicKey(byte[] bytes) Parameters Type Name Description System.Byte [] bytes Properties | Improve this Doc View Source Bytes Declaration public byte[] Bytes { get; } Property Value Type Description System.Byte [] Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.Object.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.Object.GetHashCode()"
  },
  "api/Algorand.Wordlist.html": {
    "href": "api/Algorand.Wordlist.html",
    "title": "Class Wordlist | Dotnet Algorand Documents",
    "keywords": "Class Wordlist mnemonic word list Inheritance System.Object Wordlist Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Algorand Assembly : Algorand.dll Syntax public class Wordlist Fields | Improve this Doc View Source RAW Declaration public static string[] RAW Field Value Type Description System.String []"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Dotnet Algorand SDK API | Dotnet Algorand Documents",
    "keywords": "Dotnet Algorand SDK API Dotnet Algorand SDK API"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Dotnet Algorand SDK Articles | Dotnet Algorand Documents",
    "keywords": "Dotnet Algorand SDK Articles"
  },
  "index.html": {
    "href": "index.html",
    "title": "Dotnet Algorand SDK Document. | Dotnet Algorand Documents",
    "keywords": "Dotnet Algorand SDK Document. Refer to Articles for tutorials and Api Documentation for dotnet-algorand-sdk api references."
  },
  "README.html": {
    "href": "README.html",
    "title": "Dotnet Algorand SDK | Dotnet Algorand Documents",
    "keywords": "Dotnet Algorand SDK The SDK version 0.2 add the support of Algorand Api 2.0 and the Indexer Api. dotnet-algorand-skd is a dotnet library for communicating and interacting with the Algorand network. It contains a REST client for accessing algod instances over the web, and also exposes functionality for mnemonics, creating transactions, signing transactions, and serializing data across the network. Please find documents of dotnet-algorand-sdk on https://rileyge.github.io/dotnet-algorand-sdk/ . You can find more Chinese resource from https://developer.algorand.org/zh-hans/ 1. Prerequisites This library is compliant to .Net Standard 2.0. 2. How to Install Open the NuGet command line and type: Install-Package Algorand 3. Quick Start Algorand already released Algod API 2.0 for a long time, Some service providers no longer support API 1.0 (such as Purestake). It is highly recommended to use the API 2.0 and Indexer to build your program. In dotnet-algorand-sdk, the algod API 2.0 is almost the same as API 1.0. The most important change is using the namespace Algorand.V2 . Normally, we can add the following namespace references at the beginning of the class. Note: Since Algorand.V2.Model and Algorand namespace both have the realization of the Account class, we can add the 5th line using Algorand.Account as default. using Algorand; using Algorand.V2; using Algorand.Client; using Algorand.V2.Model; using Account = Algorand.Account; Let's try some code. string ALGOD_API_ADDR = \"your algod api address\"; //find in algod.net string ALGOD_API_TOKEN = \"your algod api token\"; //find in algod.token AlgodApi algodApiInstance = new AlgodApi(ALGOD_API_ADDR, ALGOD_API_TOKEN); try { var supply = algodApiInstance.GetSupply(); Console.WriteLine(\"Total Algorand Supply: \" + supply.TotalMoney); Console.WriteLine(\"Online Algorand Supply: \" + supply.OnlineMoney); } catch (ApiException e) { Console.WriteLine(\"Exception when calling algod#getSupply: \" + e.Message); } try { var transParams = algodApiInstance.TransactionParams(); Console.WriteLine(\"Transaction Params: \" + transParams.ToJson()); } catch (ApiException e) { throw new Exception(\"Could not get params\", e); } Dotnet-algorand-sdk has good support for PureStake, you can connect to PureStake by replacing the ALGOD_API_TOKEN use PureStake API KEY. It's very difficult to tell the difference between API 1.0 and API 2.0 besides the namespace is different. So if you are familiar with API 1.0, it's very easy to use API 2.0. It's simple to query information from Algod, the code blow show how to send an transaction using API 2.0. string ALGOD_API_ADDR = \"your algod api address\"; //find in algod.net string ALGOD_API_TOKEN = \"your algod api token\"; //find in algod.token string SRC_ACCOUNT = \"typical permit hurdle hat song detail cattle merge oxygen crowd arctic cargo smooth fly rice vacuum lounge yard frown predict west wife latin absent cup\"; string DEST_ADDR = \"KV2XGKMXGYJ6PWYQA5374BYIQBL3ONRMSIARPCFCJEAMAHQEVYPB7PL3KU\"; if (!Address.IsValid(DEST_ADDR)) Console.WriteLine(\"The address \" + DEST_ADDR + \" is not valid!\"); Account src = new Account(SRC_ACCOUNT); Console.WriteLine(\"My account address is:\" + src.Address.ToString()); AlgodApi algodApiInstance = new AlgodApi(ALGOD_API_ADDR, ALGOD_API_TOKEN); try { var supply = algodApiInstance.GetSupply(); Console.WriteLine(\"Total Algorand Supply: \" + supply.TotalMoney); Console.WriteLine(\"Online Algorand Supply: \" + supply.OnlineMoney); } catch (ApiException e) { Console.WriteLine(\"Exception when calling algod#getSupply:\" + e.Message); } var accountInfo = algodApiInstance.AccountInformation(src.Address.ToString()); Console.WriteLine(string.Format(\"Account Balance: {0} microAlgos\", accountInfo.Amount)); try { var trans = algodApiInstance.TransactionParams(); var lr = trans.LastRound; var block = algodApiInstance.GetBlock(lr); Console.WriteLine(\"Lastround: \" + trans.LastRound.ToString()); Console.WriteLine(\"Block txns: \" + block.Block.ToString()); } catch (ApiException e) { Console.WriteLine(\"Exception when calling algod#getSupply:\" + e.Message); } TransactionParametersResponse transParams; try { transParams = algodApiInstance.TransactionParams(); } catch (ApiException e) { throw new Exception(\"Could not get params\", e); } var amount = Utils.AlgosToMicroalgos(1); var tx = Utils.GetPaymentTransaction(src.Address, new Address(DEST_ADDR), amount, \"pay message\", transParams); var signedTx = src.SignTransaction(tx); Console.WriteLine(\"Signed transaction with txid: \" + signedTx.transactionID); // send the transaction to the network try { var id = Utils.SubmitTransaction(algodApiInstance, signedTx); Console.WriteLine(\"Successfully sent tx with id: \" + id.TxId); Console.WriteLine(Utils.WaitTransactionToComplete(algodApiInstance, id.TxId)); } catch (ApiException e) { // This is generally expected, but should give us an informative error message. Console.WriteLine(\"Exception when calling algod#rawTransaction: \" + e.Message); } Console.WriteLine(\"You have successefully arrived the end of this test, please press and key to exist.\"); DO NOT SHOW THE MNEMONIC IN YOU CODE . The code above is only used for function display and cannot be used in the actual production environment You can find more examples in the sdk-examples project. 4. Quick Start for Indexer As we all know blockchain has a chain data struct, so it's very different for us to search the data. So algorand retrieve the blockchain data from a PostgreSQL compatible database. Then we can search for the blockchain very easily. The indexer has 12 methods to search the blockchain and some of these methods have a lot of variables to control the result. Let's try some code. string ALGOD_API_ADDR = \"your algod api address\"; string ALGOD_API_TOKEN = \"your algod api token\"; IndexerApi indexer = new IndexerApi(ALGOD_API_ADDR, ALGOD_API_TOKEN); //AlgodApi algodApiInstance = new AlgodApi(ALGOD_API_ADDR, ALGOD_API_TOKEN); var health = indexer.MakeHealthCheck(); Console.WriteLine(\"Make Health Check: \" + health.ToJson()); System.Threading.Thread.Sleep(1200); //test in purestake, imit 1 req/sec var address = \"KV2XGKMXGYJ6PWYQA5374BYIQBL3ONRMSIARPCFCJEAMAHQEVYPB7PL3KU\"; var acctInfo = indexer.LookupAccountByID(address); Console.WriteLine(\"Look up account by id: \" + acctInfo.ToJson()); System.Threading.Thread.Sleep(1200); //test in purestake, imit 1 req/sec var transInfos = indexer.LookupAccountTransactions(address, 10); Console.WriteLine(\"Look up account transactions(limit 10): \" + transInfos.ToJson()); System.Threading.Thread.Sleep(1200); //test in purestake, imit 1 req/sec var appsInfo = indexer.SearchForApplications(limit: 10); Console.WriteLine(\"Search for application(limit 10): \" + appsInfo.ToJson()); var appIndex = appsInfo.Applications[0].Id; System.Threading.Thread.Sleep(1200); //test in purestake, imit 1 req/sec var appInfo = indexer.LookupApplicationByID(appIndex); Console.WriteLine(\"Look up application by id: \" + appInfo.ToJson()); System.Threading.Thread.Sleep(1200); //test in purestake, imit 1 req/sec var assetsInfo = indexer.SearchForAssets(limit: 10, unit: \"LAT\"); Console.WriteLine(\"Search for assets\" + assetsInfo.ToJson()); var assetIndex = assetsInfo.Assets[0].Index; System.Threading.Thread.Sleep(1200); //test in purestake, imit 1 req/sec var assetInfo = indexer.LookupAssetByID(assetIndex); Console.WriteLine(\"Look up asset by id:\" + assetInfo.ToJson()); Please enjoy!!! 5. Quick Start for algod API 1.0 string ALGOD_API_ADDR = \"your algod api address\"; //find in algod.net string ALGOD_API_TOKEN = \"your algod api token\"; //find in algod.token AlgodApi algodApiInstance = new AlgodApi(ALGOD_API_ADDR, ALGOD_API_TOKEN); Now purestake DO NOT support algod API 1.0, please use your own node to test the functions below. Get information from algorand blockchain: try { Supply supply = algodApiInstance.GetSupply(); Console.WriteLine(\"Total Algorand Supply: \" + supply.TotalMoney); Console.WriteLine(\"Online Algorand Supply: \" + supply.OnlineMoney); } catch (ApiException e) { Console.WriteLine(\"Exception when calling algod#getSupply: \" + e.Message); } ulong? feePerByte; string genesisID; Digest genesisHash; ulong? firstRound = 0; try { TransactionParams transParams = algodApiInstance.TransactionParams(); feePerByte = transParams.Fee; genesisHash = new Digest(Convert.FromBase64String(transParams.Genesishashb64)); genesisID = transParams.GenesisID; Console.WriteLine(\"Suggested Fee: \" + feePerByte); NodeStatus s = algodApiInstance.GetStatus(); firstRound = s.LastRound; Console.WriteLine(\"Current Round: \" + firstRound); } catch (ApiException e) { throw new Exception(\"Could not get params\", e); } If you want to go further, you should have an account. You can use Account acc = new Account(); to generate a random account. Surely you can use mnemonic to create an account. The example below using mnemonics to create an account and send some algos to another address. ulong? amount = 100000; ulong? lastRound = firstRound + 1000; // 1000 is the max tx window string SRC_ACCOUNT = \"typical permit hurdle hat song detail cattle merge oxygen crowd arctic cargo smooth fly rice vacuum lounge yard frown predict west wife latin absent cup\"; Account src = new Account(SRC_ACCOUNT); Console.WriteLine(\"My account address is:\" + src.Address.ToString()); string DEST_ADDR = \"KV2XGKMXGYJ6PWYQA5374BYIQBL3ONRMSIARPCFCJEAMAHQEVYPB7PL3KU\"; Transaction tx = new Transaction(src.Address, new Address(DEST_ADDR), amount, firstRound, lastRound, genesisID, genesisHash); //sign the transaction before send it to the blockchain SignedTransaction signedTx = src.SignTransactionWithFeePerByte(tx, feePerByte); Console.WriteLine(\"Signed transaction with txid: \" + signedTx.transactionID); // send the transaction to the network try { //encode to msg-pack var encodedMsg = Algorand.Encoder.EncodeToMsgPack(signedTx); TransactionID id = algodApiInstance.RawTransaction(encodedMsg); Console.WriteLine(\"Successfully sent tx with id: \" + id.TxId); } catch (ApiException e) { // This is generally expected, but should give us an informative error message. Console.WriteLine(\"Exception when calling algod#rawTransaction: \" + e.Message); } 6. Migrate from dotnet-algorand-sdk 0.1.X to dotnet-algorand-sdk 0.2.X Dotnet-algorand-sdk Version 0.2.X modifies the namespace of algod API 1.0 compared to dotnet-algorand-sdk Version 0.1.X. Please replaces the namespaces below: Replace Algorand.Algod.Client.Model with Algorand.Algod.Model Replace Algorand.Algod.Client.Api with Algorand.Algod.Api Replace Algorand.Kmd.Client.Model with Algorand.Algod.Model Replace Algorand.Kmd.Client.Api with Algorand.Kmd.Api Replace Algorand.Algod.Client with Algorand.Client Replace Algorand.Kmd.Client with Algorand.Client Everything else remains the same. That's all? Yes, this is a complete example, you can find more examples in the sdk-examples project."
  }
}